
Marilu_codice_4.3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000098  00800200  0000469e  00004732  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000469e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000024e  00800298  00800298  000047ca  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000047ca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000047fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000428  00000000  00000000  0000483c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00005c99  00000000  00000000  00004c64  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001ceb  00000000  00000000  0000a8fd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00003449  00000000  00000000  0000c5e8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000eb8  00000000  00000000  0000fa34  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001477  00000000  00000000  000108ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00003a49  00000000  00000000  00011d63  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000400  00000000  00000000  000157ac  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	8d c0       	rjmp	.+282    	; 0x11c <__ctors_end>
       2:	00 00       	nop
       4:	ab c0       	rjmp	.+342    	; 0x15c <__bad_interrupt>
       6:	00 00       	nop
       8:	a9 c0       	rjmp	.+338    	; 0x15c <__bad_interrupt>
       a:	00 00       	nop
       c:	68 c3       	rjmp	.+1744   	; 0x6de <__vector_3>
       e:	00 00       	nop
      10:	8f c3       	rjmp	.+1822   	; 0x730 <__vector_4>
      12:	00 00       	nop
      14:	b6 c3       	rjmp	.+1900   	; 0x782 <__vector_5>
      16:	00 00       	nop
      18:	dd c3       	rjmp	.+1978   	; 0x7d4 <__vector_6>
      1a:	00 00       	nop
      1c:	9f c0       	rjmp	.+318    	; 0x15c <__bad_interrupt>
      1e:	00 00       	nop
      20:	9d c0       	rjmp	.+314    	; 0x15c <__bad_interrupt>
      22:	00 00       	nop
      24:	9b c0       	rjmp	.+310    	; 0x15c <__bad_interrupt>
      26:	00 00       	nop
      28:	99 c0       	rjmp	.+306    	; 0x15c <__bad_interrupt>
      2a:	00 00       	nop
      2c:	97 c0       	rjmp	.+302    	; 0x15c <__bad_interrupt>
      2e:	00 00       	nop
      30:	95 c0       	rjmp	.+298    	; 0x15c <__bad_interrupt>
      32:	00 00       	nop
      34:	93 c0       	rjmp	.+294    	; 0x15c <__bad_interrupt>
      36:	00 00       	nop
      38:	91 c0       	rjmp	.+290    	; 0x15c <__bad_interrupt>
      3a:	00 00       	nop
      3c:	8f c0       	rjmp	.+286    	; 0x15c <__bad_interrupt>
      3e:	00 00       	nop
      40:	8d c0       	rjmp	.+282    	; 0x15c <__bad_interrupt>
      42:	00 00       	nop
      44:	0c 94 74 13 	jmp	0x26e8	; 0x26e8 <__vector_17>
      48:	89 c0       	rjmp	.+274    	; 0x15c <__bad_interrupt>
      4a:	00 00       	nop
      4c:	87 c0       	rjmp	.+270    	; 0x15c <__bad_interrupt>
      4e:	00 00       	nop
      50:	85 c0       	rjmp	.+266    	; 0x15c <__bad_interrupt>
      52:	00 00       	nop
      54:	83 c0       	rjmp	.+262    	; 0x15c <__bad_interrupt>
      56:	00 00       	nop
      58:	81 c0       	rjmp	.+258    	; 0x15c <__bad_interrupt>
      5a:	00 00       	nop
      5c:	7f c0       	rjmp	.+254    	; 0x15c <__bad_interrupt>
      5e:	00 00       	nop
      60:	7d c0       	rjmp	.+250    	; 0x15c <__bad_interrupt>
      62:	00 00       	nop
      64:	7b c0       	rjmp	.+246    	; 0x15c <__bad_interrupt>
      66:	00 00       	nop
      68:	79 c0       	rjmp	.+242    	; 0x15c <__bad_interrupt>
      6a:	00 00       	nop
      6c:	77 c0       	rjmp	.+238    	; 0x15c <__bad_interrupt>
      6e:	00 00       	nop
      70:	75 c0       	rjmp	.+234    	; 0x15c <__bad_interrupt>
      72:	00 00       	nop
      74:	73 c0       	rjmp	.+230    	; 0x15c <__bad_interrupt>
      76:	00 00       	nop
      78:	71 c0       	rjmp	.+226    	; 0x15c <__bad_interrupt>
      7a:	00 00       	nop
      7c:	6f c0       	rjmp	.+222    	; 0x15c <__bad_interrupt>
      7e:	00 00       	nop
      80:	6d c0       	rjmp	.+218    	; 0x15c <__bad_interrupt>
      82:	00 00       	nop
      84:	6b c0       	rjmp	.+214    	; 0x15c <__bad_interrupt>
      86:	00 00       	nop
      88:	69 c0       	rjmp	.+210    	; 0x15c <__bad_interrupt>
      8a:	00 00       	nop
      8c:	67 c0       	rjmp	.+206    	; 0x15c <__bad_interrupt>
      8e:	00 00       	nop
      90:	65 c0       	rjmp	.+202    	; 0x15c <__bad_interrupt>
      92:	00 00       	nop
      94:	63 c0       	rjmp	.+198    	; 0x15c <__bad_interrupt>
      96:	00 00       	nop
      98:	61 c0       	rjmp	.+194    	; 0x15c <__bad_interrupt>
      9a:	00 00       	nop
      9c:	5f c0       	rjmp	.+190    	; 0x15c <__bad_interrupt>
      9e:	00 00       	nop
      a0:	5d c0       	rjmp	.+186    	; 0x15c <__bad_interrupt>
      a2:	00 00       	nop
      a4:	5b c0       	rjmp	.+182    	; 0x15c <__bad_interrupt>
      a6:	00 00       	nop
      a8:	59 c0       	rjmp	.+178    	; 0x15c <__bad_interrupt>
      aa:	00 00       	nop
      ac:	57 c0       	rjmp	.+174    	; 0x15c <__bad_interrupt>
      ae:	00 00       	nop
      b0:	55 c0       	rjmp	.+170    	; 0x15c <__bad_interrupt>
      b2:	00 00       	nop
      b4:	53 c0       	rjmp	.+166    	; 0x15c <__bad_interrupt>
      b6:	00 00       	nop
      b8:	51 c0       	rjmp	.+162    	; 0x15c <__bad_interrupt>
      ba:	00 00       	nop
      bc:	4e c2       	rjmp	.+1180   	; 0x55a <__vector_47>
      be:	00 00       	nop
      c0:	4d c0       	rjmp	.+154    	; 0x15c <__bad_interrupt>
      c2:	00 00       	nop
      c4:	4b c0       	rjmp	.+150    	; 0x15c <__bad_interrupt>
      c6:	00 00       	nop
      c8:	49 c0       	rjmp	.+146    	; 0x15c <__bad_interrupt>
      ca:	00 00       	nop
      cc:	47 c0       	rjmp	.+142    	; 0x15c <__bad_interrupt>
      ce:	00 00       	nop
      d0:	45 c0       	rjmp	.+138    	; 0x15c <__bad_interrupt>
      d2:	00 00       	nop
      d4:	43 c0       	rjmp	.+134    	; 0x15c <__bad_interrupt>
      d6:	00 00       	nop
      d8:	41 c0       	rjmp	.+130    	; 0x15c <__bad_interrupt>
      da:	00 00       	nop
      dc:	3f c0       	rjmp	.+126    	; 0x15c <__bad_interrupt>
      de:	00 00       	nop
      e0:	3d c0       	rjmp	.+122    	; 0x15c <__bad_interrupt>
      e2:	00 00       	nop
      e4:	83 02       	muls	r24, r19
      e6:	86 02       	muls	r24, r22
      e8:	89 02       	muls	r24, r25
      ea:	8c 02       	muls	r24, r28
      ec:	8f 02       	muls	r24, r31
      ee:	92 02       	muls	r25, r18
      f0:	95 02       	muls	r25, r21
      f2:	98 02       	muls	r25, r24
      f4:	c7 12       	cpse	r12, r23
      f6:	ce 12       	cpse	r12, r30
      f8:	e2 12       	cpse	r14, r18
      fa:	f1 12       	cpse	r15, r17
      fc:	e9 12       	cpse	r14, r25
      fe:	d5 12       	cpse	r13, r21
     100:	dc 12       	cpse	r13, r28
     102:	f8 12       	cpse	r15, r24
     104:	ff 12       	cpse	r15, r31
     106:	06 13       	cpse	r16, r22
     108:	25 13       	cpse	r18, r21
     10a:	2c 13       	cpse	r18, r28
     10c:	40 13       	cpse	r20, r16
     10e:	4f 13       	cpse	r20, r31
     110:	47 13       	cpse	r20, r23
     112:	33 13       	cpse	r19, r19
     114:	3a 13       	cpse	r19, r26
     116:	56 13       	cpse	r21, r22
     118:	5d 13       	cpse	r21, r29
     11a:	64 13       	cpse	r22, r20

0000011c <__ctors_end>:
     11c:	11 24       	eor	r1, r1
     11e:	1f be       	out	0x3f, r1	; 63
     120:	cf ef       	ldi	r28, 0xFF	; 255
     122:	d1 e2       	ldi	r29, 0x21	; 33
     124:	de bf       	out	0x3e, r29	; 62
     126:	cd bf       	out	0x3d, r28	; 61
     128:	00 e0       	ldi	r16, 0x00	; 0
     12a:	0c bf       	out	0x3c, r16	; 60

0000012c <__do_copy_data>:
     12c:	12 e0       	ldi	r17, 0x02	; 2
     12e:	a0 e0       	ldi	r26, 0x00	; 0
     130:	b2 e0       	ldi	r27, 0x02	; 2
     132:	ee e9       	ldi	r30, 0x9E	; 158
     134:	f6 e4       	ldi	r31, 0x46	; 70
     136:	00 e0       	ldi	r16, 0x00	; 0
     138:	0b bf       	out	0x3b, r16	; 59
     13a:	02 c0       	rjmp	.+4      	; 0x140 <__do_copy_data+0x14>
     13c:	07 90       	elpm	r0, Z+
     13e:	0d 92       	st	X+, r0
     140:	a8 39       	cpi	r26, 0x98	; 152
     142:	b1 07       	cpc	r27, r17
     144:	d9 f7       	brne	.-10     	; 0x13c <__do_copy_data+0x10>

00000146 <__do_clear_bss>:
     146:	24 e0       	ldi	r18, 0x04	; 4
     148:	a8 e9       	ldi	r26, 0x98	; 152
     14a:	b2 e0       	ldi	r27, 0x02	; 2
     14c:	01 c0       	rjmp	.+2      	; 0x150 <.do_clear_bss_start>

0000014e <.do_clear_bss_loop>:
     14e:	1d 92       	st	X+, r1

00000150 <.do_clear_bss_start>:
     150:	a6 3e       	cpi	r26, 0xE6	; 230
     152:	b2 07       	cpc	r27, r18
     154:	e1 f7       	brne	.-8      	; 0x14e <.do_clear_bss_loop>
     156:	67 d3       	rcall	.+1742   	; 0x826 <main>
     158:	0c 94 4d 23 	jmp	0x469a	; 0x469a <_exit>

0000015c <__bad_interrupt>:
     15c:	51 cf       	rjmp	.-350    	; 0x0 <__vectors>

0000015e <InitADC>:
#include "ADC.h"

/*-------------ADC-----------------*/
void InitADC(void){
	
	ADCSRA |= ((1<<ADPS2)|(1<<ADPS1)|(1<<ADPS0));    //16Mhz/128 = 125Khz the ADC reference clock
     15e:	ea e7       	ldi	r30, 0x7A	; 122
     160:	f0 e0       	ldi	r31, 0x00	; 0
     162:	80 81       	ld	r24, Z
     164:	87 60       	ori	r24, 0x07	; 7
     166:	80 83       	st	Z, r24
	ADMUX |= (1<<REFS0);                //Voltage reference from Avcc (5v)
     168:	ac e7       	ldi	r26, 0x7C	; 124
     16a:	b0 e0       	ldi	r27, 0x00	; 0
     16c:	8c 91       	ld	r24, X
     16e:	80 64       	ori	r24, 0x40	; 64
     170:	8c 93       	st	X, r24
	ADCSRA |= (1<<ADEN);                //Turn on ADC
     172:	80 81       	ld	r24, Z
     174:	80 68       	ori	r24, 0x80	; 128
     176:	80 83       	st	Z, r24
	ADCSRA |= (1<<ADSC);                //Do an initial conversion because this one is the slowest and to ensure that everything is up and running
     178:	80 81       	ld	r24, Z
     17a:	80 64       	ori	r24, 0x40	; 64
     17c:	80 83       	st	Z, r24
     17e:	08 95       	ret

00000180 <StartADC>:
	
}
int StartADC(uint8_t channel){
     180:	cf 93       	push	r28
     182:	df 93       	push	r29
     184:	22 e0       	ldi	r18, 0x02	; 2
     186:	30 e0       	ldi	r19, 0x00	; 0
	for (int i=0;i<2;i++)
	{
		ADMUX &= 0xF0;
     188:	ac e7       	ldi	r26, 0x7C	; 124
     18a:	b0 e0       	ldi	r27, 0x00	; 0
		ADCSRB &=~(1<<MUX5);                    //Clear the older channel that was read
     18c:	cb e7       	ldi	r28, 0x7B	; 123
     18e:	d0 e0       	ldi	r29, 0x00	; 0
		if(channel<=7){
			ADMUX |= channel;                //Defines the new ADC channel to be read
		}else{
			ADMUX |= (channel & 0b00000111);
     190:	48 2f       	mov	r20, r24
     192:	47 70       	andi	r20, 0x07	; 7
			ADCSRB |= 1<<MUX5;
		}
		
		ADCSRA |= (1<<ADSC);                //Starts a new conversion
     194:	ea e7       	ldi	r30, 0x7A	; 122
     196:	f0 e0       	ldi	r31, 0x00	; 0
	
}
int StartADC(uint8_t channel){
	for (int i=0;i<2;i++)
	{
		ADMUX &= 0xF0;
     198:	9c 91       	ld	r25, X
     19a:	90 7f       	andi	r25, 0xF0	; 240
     19c:	9c 93       	st	X, r25
		ADCSRB &=~(1<<MUX5);                    //Clear the older channel that was read
     19e:	98 81       	ld	r25, Y
     1a0:	97 7f       	andi	r25, 0xF7	; 247
     1a2:	98 83       	st	Y, r25
		if(channel<=7){
     1a4:	88 30       	cpi	r24, 0x08	; 8
     1a6:	20 f4       	brcc	.+8      	; 0x1b0 <StartADC+0x30>
			ADMUX |= channel;                //Defines the new ADC channel to be read
     1a8:	9c 91       	ld	r25, X
     1aa:	98 2b       	or	r25, r24
     1ac:	9c 93       	st	X, r25
     1ae:	06 c0       	rjmp	.+12     	; 0x1bc <StartADC+0x3c>
		}else{
			ADMUX |= (channel & 0b00000111);
     1b0:	9c 91       	ld	r25, X
     1b2:	94 2b       	or	r25, r20
     1b4:	9c 93       	st	X, r25
			ADCSRB |= 1<<MUX5;
     1b6:	98 81       	ld	r25, Y
     1b8:	98 60       	ori	r25, 0x08	; 8
     1ba:	98 83       	st	Y, r25
		}
		
		ADCSRA |= (1<<ADSC);                //Starts a new conversion
     1bc:	90 81       	ld	r25, Z
     1be:	90 64       	ori	r25, 0x40	; 64
     1c0:	90 83       	st	Z, r25
		while(ADCSRA & (1<<ADSC));            //Wait until the conversion is done
     1c2:	90 81       	ld	r25, Z
     1c4:	96 fd       	sbrc	r25, 6
     1c6:	fd cf       	rjmp	.-6      	; 0x1c2 <StartADC+0x42>
     1c8:	21 50       	subi	r18, 0x01	; 1
     1ca:	31 09       	sbc	r19, r1
	ADCSRA |= (1<<ADEN);                //Turn on ADC
	ADCSRA |= (1<<ADSC);                //Do an initial conversion because this one is the slowest and to ensure that everything is up and running
	
}
int StartADC(uint8_t channel){
	for (int i=0;i<2;i++)
     1cc:	29 f7       	brne	.-54     	; 0x198 <StartADC+0x18>
		}
		
		ADCSRA |= (1<<ADSC);                //Starts a new conversion
		while(ADCSRA & (1<<ADSC));            //Wait until the conversion is done
	}
	return ADCW;                    //Returns the ADC value of the chosen channel
     1ce:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x700078>
     1d2:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x700079>
}
     1d6:	df 91       	pop	r29
     1d8:	cf 91       	pop	r28
     1da:	08 95       	ret

000001dc <BNO_init>:
     1dc:	40 e0       	ldi	r20, 0x00	; 0
     1de:	50 e0       	ldi	r21, 0x00	; 0
     1e0:	6d e3       	ldi	r22, 0x3D	; 61
     1e2:	70 e0       	ldi	r23, 0x00	; 0
     1e4:	82 e5       	ldi	r24, 0x52	; 82
     1e6:	90 e0       	ldi	r25, 0x00	; 0
     1e8:	0e 94 55 20 	call	0x40aa	; 0x40aa <TWI_send>
     1ec:	89 e6       	ldi	r24, 0x69	; 105
     1ee:	98 e1       	ldi	r25, 0x18	; 24
     1f0:	01 97       	sbiw	r24, 0x01	; 1
     1f2:	f1 f7       	brne	.-4      	; 0x1f0 <BNO_init+0x14>
     1f4:	00 c0       	rjmp	.+0      	; 0x1f6 <BNO_init+0x1a>
     1f6:	00 00       	nop
     1f8:	41 e0       	ldi	r20, 0x01	; 1
     1fa:	50 e0       	ldi	r21, 0x00	; 0
     1fc:	67 e0       	ldi	r22, 0x07	; 7
     1fe:	70 e0       	ldi	r23, 0x00	; 0
     200:	82 e5       	ldi	r24, 0x52	; 82
     202:	90 e0       	ldi	r25, 0x00	; 0
     204:	0e 94 55 20 	call	0x40aa	; 0x40aa <TWI_send>
     208:	40 91 9a 02 	lds	r20, 0x029A	; 0x80029a <APwrMode>
     20c:	90 e2       	ldi	r25, 0x20	; 32
     20e:	49 9f       	mul	r20, r25
     210:	90 01       	movw	r18, r0
     212:	11 24       	eor	r1, r1
     214:	80 91 03 02 	lds	r24, 0x0203	; 0x800203 <Abw>
     218:	48 2f       	mov	r20, r24
     21a:	50 e0       	ldi	r21, 0x00	; 0
     21c:	44 0f       	add	r20, r20
     21e:	55 1f       	adc	r21, r21
     220:	44 0f       	add	r20, r20
     222:	55 1f       	adc	r21, r21
     224:	44 0f       	add	r20, r20
     226:	55 1f       	adc	r21, r21
     228:	42 2b       	or	r20, r18
     22a:	53 2b       	or	r21, r19
     22c:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <Ascale>
     230:	48 2b       	or	r20, r24
     232:	68 e0       	ldi	r22, 0x08	; 8
     234:	70 e0       	ldi	r23, 0x00	; 0
     236:	82 e5       	ldi	r24, 0x52	; 82
     238:	90 e0       	ldi	r25, 0x00	; 0
     23a:	0e 94 55 20 	call	0x40aa	; 0x40aa <TWI_send>
     23e:	40 91 05 02 	lds	r20, 0x0205	; 0x800205 <Gbw>
     242:	50 e0       	ldi	r21, 0x00	; 0
     244:	44 0f       	add	r20, r20
     246:	55 1f       	adc	r21, r21
     248:	44 0f       	add	r20, r20
     24a:	55 1f       	adc	r21, r21
     24c:	44 0f       	add	r20, r20
     24e:	55 1f       	adc	r21, r21
     250:	80 91 9b 02 	lds	r24, 0x029B	; 0x80029b <Gscale>
     254:	48 2b       	or	r20, r24
     256:	6a e0       	ldi	r22, 0x0A	; 10
     258:	70 e0       	ldi	r23, 0x00	; 0
     25a:	82 e5       	ldi	r24, 0x52	; 82
     25c:	90 e0       	ldi	r25, 0x00	; 0
     25e:	0e 94 55 20 	call	0x40aa	; 0x40aa <TWI_send>
     262:	40 91 9c 02 	lds	r20, 0x029C	; 0x80029c <GPwrMode>
     266:	50 e0       	ldi	r21, 0x00	; 0
     268:	6b e0       	ldi	r22, 0x0B	; 11
     26a:	70 e0       	ldi	r23, 0x00	; 0
     26c:	82 e5       	ldi	r24, 0x52	; 82
     26e:	90 e0       	ldi	r25, 0x00	; 0
     270:	0e 94 55 20 	call	0x40aa	; 0x40aa <TWI_send>
     274:	40 91 99 02 	lds	r20, 0x0299	; 0x800299 <MPwrMode>
     278:	80 e2       	ldi	r24, 0x20	; 32
     27a:	48 9f       	mul	r20, r24
     27c:	90 01       	movw	r18, r0
     27e:	11 24       	eor	r1, r1
     280:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <MOpMode>
     284:	48 2f       	mov	r20, r24
     286:	50 e0       	ldi	r21, 0x00	; 0
     288:	44 0f       	add	r20, r20
     28a:	55 1f       	adc	r21, r21
     28c:	44 0f       	add	r20, r20
     28e:	55 1f       	adc	r21, r21
     290:	44 0f       	add	r20, r20
     292:	55 1f       	adc	r21, r21
     294:	42 2b       	or	r20, r18
     296:	53 2b       	or	r21, r19
     298:	80 91 01 02 	lds	r24, 0x0201	; 0x800201 <Modr>
     29c:	48 2b       	or	r20, r24
     29e:	69 e0       	ldi	r22, 0x09	; 9
     2a0:	70 e0       	ldi	r23, 0x00	; 0
     2a2:	82 e5       	ldi	r24, 0x52	; 82
     2a4:	90 e0       	ldi	r25, 0x00	; 0
     2a6:	0e 94 55 20 	call	0x40aa	; 0x40aa <TWI_send>
     2aa:	40 e0       	ldi	r20, 0x00	; 0
     2ac:	50 e0       	ldi	r21, 0x00	; 0
     2ae:	67 e0       	ldi	r22, 0x07	; 7
     2b0:	70 e0       	ldi	r23, 0x00	; 0
     2b2:	82 e5       	ldi	r24, 0x52	; 82
     2b4:	90 e0       	ldi	r25, 0x00	; 0
     2b6:	0e 94 55 20 	call	0x40aa	; 0x40aa <TWI_send>
     2ba:	41 e0       	ldi	r20, 0x01	; 1
     2bc:	50 e0       	ldi	r21, 0x00	; 0
     2be:	60 e4       	ldi	r22, 0x40	; 64
     2c0:	70 e0       	ldi	r23, 0x00	; 0
     2c2:	82 e5       	ldi	r24, 0x52	; 82
     2c4:	90 e0       	ldi	r25, 0x00	; 0
     2c6:	0e 94 55 20 	call	0x40aa	; 0x40aa <TWI_send>
     2ca:	41 e0       	ldi	r20, 0x01	; 1
     2cc:	50 e0       	ldi	r21, 0x00	; 0
     2ce:	6b e3       	ldi	r22, 0x3B	; 59
     2d0:	70 e0       	ldi	r23, 0x00	; 0
     2d2:	82 e5       	ldi	r24, 0x52	; 82
     2d4:	90 e0       	ldi	r25, 0x00	; 0
     2d6:	0e 94 55 20 	call	0x40aa	; 0x40aa <TWI_send>
     2da:	40 91 98 02 	lds	r20, 0x0298	; 0x800298 <__data_end>
     2de:	50 e0       	ldi	r21, 0x00	; 0
     2e0:	6e e3       	ldi	r22, 0x3E	; 62
     2e2:	70 e0       	ldi	r23, 0x00	; 0
     2e4:	82 e5       	ldi	r24, 0x52	; 82
     2e6:	90 e0       	ldi	r25, 0x00	; 0
     2e8:	0e 94 55 20 	call	0x40aa	; 0x40aa <TWI_send>
     2ec:	40 91 00 02 	lds	r20, 0x0200	; 0x800200 <OPRMode>
     2f0:	50 e0       	ldi	r21, 0x00	; 0
     2f2:	6d e3       	ldi	r22, 0x3D	; 61
     2f4:	70 e0       	ldi	r23, 0x00	; 0
     2f6:	82 e5       	ldi	r24, 0x52	; 82
     2f8:	90 e0       	ldi	r25, 0x00	; 0
     2fa:	0e 94 55 20 	call	0x40aa	; 0x40aa <TWI_send>
     2fe:	89 e6       	ldi	r24, 0x69	; 105
     300:	98 e1       	ldi	r25, 0x18	; 24
     302:	01 97       	sbiw	r24, 0x01	; 1
     304:	f1 f7       	brne	.-4      	; 0x302 <BNO_init+0x126>
     306:	00 c0       	rjmp	.+0      	; 0x308 <BNO_init+0x12c>
     308:	00 00       	nop
     30a:	08 95       	ret

0000030c <readAxis>:
     30c:	cf 93       	push	r28
     30e:	df 93       	push	r29
     310:	ec 01       	movw	r28, r24
     312:	83 e0       	ldi	r24, 0x03	; 3
     314:	90 e0       	ldi	r25, 0x00	; 0
     316:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <TWI_status>
     31a:	89 2b       	or	r24, r25
     31c:	d1 f7       	brne	.-12     	; 0x312 <readAxis+0x6>
     31e:	81 e0       	ldi	r24, 0x01	; 1
     320:	90 e0       	ldi	r25, 0x00	; 0
     322:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <TWI_status>
     326:	c2 30       	cpi	r28, 0x02	; 2
     328:	d1 05       	cpc	r29, r1
     32a:	69 f0       	breq	.+26     	; 0x346 <readAxis+0x3a>
     32c:	c3 30       	cpi	r28, 0x03	; 3
     32e:	d1 05       	cpc	r29, r1
     330:	91 f0       	breq	.+36     	; 0x356 <readAxis+0x4a>
     332:	21 97       	sbiw	r28, 0x01	; 1
     334:	c1 f4       	brne	.+48     	; 0x366 <readAxis+0x5a>
     336:	6a e1       	ldi	r22, 0x1A	; 26
     338:	70 e0       	ldi	r23, 0x00	; 0
     33a:	82 e5       	ldi	r24, 0x52	; 82
     33c:	90 e0       	ldi	r25, 0x00	; 0
     33e:	0e 94 01 20 	call	0x4002	; 0x4002 <TWI_read2>
     342:	ec 01       	movw	r28, r24
     344:	12 c0       	rjmp	.+36     	; 0x36a <readAxis+0x5e>
     346:	6c e1       	ldi	r22, 0x1C	; 28
     348:	70 e0       	ldi	r23, 0x00	; 0
     34a:	82 e5       	ldi	r24, 0x52	; 82
     34c:	90 e0       	ldi	r25, 0x00	; 0
     34e:	0e 94 01 20 	call	0x4002	; 0x4002 <TWI_read2>
     352:	ec 01       	movw	r28, r24
     354:	0a c0       	rjmp	.+20     	; 0x36a <readAxis+0x5e>
     356:	6e e1       	ldi	r22, 0x1E	; 30
     358:	70 e0       	ldi	r23, 0x00	; 0
     35a:	82 e5       	ldi	r24, 0x52	; 82
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	0e 94 01 20 	call	0x4002	; 0x4002 <TWI_read2>
     362:	ec 01       	movw	r28, r24
     364:	02 c0       	rjmp	.+4      	; 0x36a <readAxis+0x5e>
     366:	c0 e0       	ldi	r28, 0x00	; 0
     368:	d9 e1       	ldi	r29, 0x19	; 25
     36a:	80 e0       	ldi	r24, 0x00	; 0
     36c:	90 e0       	ldi	r25, 0x00	; 0
     36e:	0e 94 6c 1f 	call	0x3ed8	; 0x3ed8 <TWI_status>
     372:	be 01       	movw	r22, r28
     374:	dd 0f       	add	r29, r29
     376:	88 0b       	sbc	r24, r24
     378:	99 0b       	sbc	r25, r25
     37a:	0e 94 b0 21 	call	0x4360	; 0x4360 <__floatsisf>
     37e:	20 e0       	ldi	r18, 0x00	; 0
     380:	30 e0       	ldi	r19, 0x00	; 0
     382:	40 e8       	ldi	r20, 0x80	; 128
     384:	5d e3       	ldi	r21, 0x3D	; 61
     386:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
     38a:	df 91       	pop	r29
     38c:	cf 91       	pop	r28
     38e:	08 95       	ret

00000390 <gradiGiroscopio>:
     390:	cf 92       	push	r12
     392:	df 92       	push	r13
     394:	ef 92       	push	r14
     396:	ff 92       	push	r15
     398:	81 30       	cpi	r24, 0x01	; 1
     39a:	91 05       	cpc	r25, r1
     39c:	09 f0       	breq	.+2      	; 0x3a0 <gradiGiroscopio+0x10>
     39e:	4b c0       	rjmp	.+150    	; 0x436 <__LOCK_REGION_LENGTH__+0x36>
     3a0:	81 e0       	ldi	r24, 0x01	; 1
     3a2:	90 e0       	ldi	r25, 0x00	; 0
     3a4:	b3 df       	rcall	.-154    	; 0x30c <readAxis>
     3a6:	20 91 a5 02 	lds	r18, 0x02A5	; 0x8002a5 <correzzione_asseZ>
     3aa:	30 91 a6 02 	lds	r19, 0x02A6	; 0x8002a6 <correzzione_asseZ+0x1>
     3ae:	40 91 a7 02 	lds	r20, 0x02A7	; 0x8002a7 <correzzione_asseZ+0x2>
     3b2:	50 91 a8 02 	lds	r21, 0x02A8	; 0x8002a8 <correzzione_asseZ+0x3>
     3b6:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
     3ba:	6b 01       	movw	r12, r22
     3bc:	7c 01       	movw	r14, r24
     3be:	20 e0       	ldi	r18, 0x00	; 0
     3c0:	30 e0       	ldi	r19, 0x00	; 0
     3c2:	a9 01       	movw	r20, r18
     3c4:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     3c8:	88 23       	and	r24, r24
     3ca:	8c f4       	brge	.+34     	; 0x3ee <gradiGiroscopio+0x5e>
     3cc:	20 e0       	ldi	r18, 0x00	; 0
     3ce:	30 e0       	ldi	r19, 0x00	; 0
     3d0:	44 eb       	ldi	r20, 0xB4	; 180
     3d2:	53 e4       	ldi	r21, 0x43	; 67
     3d4:	c7 01       	movw	r24, r14
     3d6:	b6 01       	movw	r22, r12
     3d8:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
     3dc:	60 93 a9 02 	sts	0x02A9, r22	; 0x8002a9 <gradi_>
     3e0:	70 93 aa 02 	sts	0x02AA, r23	; 0x8002aa <gradi_+0x1>
     3e4:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <gradi_+0x2>
     3e8:	90 93 ac 02 	sts	0x02AC, r25	; 0x8002ac <gradi_+0x3>
     3ec:	3e c0       	rjmp	.+124    	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
     3ee:	20 e0       	ldi	r18, 0x00	; 0
     3f0:	30 e0       	ldi	r19, 0x00	; 0
     3f2:	44 eb       	ldi	r20, 0xB4	; 180
     3f4:	53 e4       	ldi	r21, 0x43	; 67
     3f6:	c7 01       	movw	r24, r14
     3f8:	b6 01       	movw	r22, r12
     3fa:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
     3fe:	88 23       	and	r24, r24
     400:	4c f4       	brge	.+18     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
     402:	c0 92 a9 02 	sts	0x02A9, r12	; 0x8002a9 <gradi_>
     406:	d0 92 aa 02 	sts	0x02AA, r13	; 0x8002aa <gradi_+0x1>
     40a:	e0 92 ab 02 	sts	0x02AB, r14	; 0x8002ab <gradi_+0x2>
     40e:	f0 92 ac 02 	sts	0x02AC, r15	; 0x8002ac <gradi_+0x3>
     412:	2b c0       	rjmp	.+86     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
     414:	20 e0       	ldi	r18, 0x00	; 0
     416:	30 e0       	ldi	r19, 0x00	; 0
     418:	44 eb       	ldi	r20, 0xB4	; 180
     41a:	53 e4       	ldi	r21, 0x43	; 67
     41c:	c7 01       	movw	r24, r14
     41e:	b6 01       	movw	r22, r12
     420:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
     424:	60 93 a9 02 	sts	0x02A9, r22	; 0x8002a9 <gradi_>
     428:	70 93 aa 02 	sts	0x02AA, r23	; 0x8002aa <gradi_+0x1>
     42c:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <gradi_+0x2>
     430:	90 93 ac 02 	sts	0x02AC, r25	; 0x8002ac <gradi_+0x3>
     434:	1a c0       	rjmp	.+52     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
     436:	82 30       	cpi	r24, 0x02	; 2
     438:	91 05       	cpc	r25, r1
     43a:	b1 f4       	brne	.+44     	; 0x468 <__LOCK_REGION_LENGTH__+0x68>
     43c:	82 e0       	ldi	r24, 0x02	; 2
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	65 df       	rcall	.-310    	; 0x30c <readAxis>
     442:	20 91 a1 02 	lds	r18, 0x02A1	; 0x8002a1 <init_asseY>
     446:	30 91 a2 02 	lds	r19, 0x02A2	; 0x8002a2 <init_asseY+0x1>
     44a:	40 91 a3 02 	lds	r20, 0x02A3	; 0x8002a3 <init_asseY+0x2>
     44e:	50 91 a4 02 	lds	r21, 0x02A4	; 0x8002a4 <init_asseY+0x3>
     452:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
     456:	60 93 a9 02 	sts	0x02A9, r22	; 0x8002a9 <gradi_>
     45a:	70 93 aa 02 	sts	0x02AA, r23	; 0x8002aa <gradi_+0x1>
     45e:	80 93 ab 02 	sts	0x02AB, r24	; 0x8002ab <gradi_+0x2>
     462:	90 93 ac 02 	sts	0x02AC, r25	; 0x8002ac <gradi_+0x3>
     466:	01 c0       	rjmp	.+2      	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
     468:	51 df       	rcall	.-350    	; 0x30c <readAxis>
     46a:	60 91 a9 02 	lds	r22, 0x02A9	; 0x8002a9 <gradi_>
     46e:	70 91 aa 02 	lds	r23, 0x02AA	; 0x8002aa <gradi_+0x1>
     472:	80 91 ab 02 	lds	r24, 0x02AB	; 0x8002ab <gradi_+0x2>
     476:	90 91 ac 02 	lds	r25, 0x02AC	; 0x8002ac <gradi_+0x3>
     47a:	ff 90       	pop	r15
     47c:	ef 90       	pop	r14
     47e:	df 90       	pop	r13
     480:	cf 90       	pop	r12
     482:	08 95       	ret

00000484 <initTimerkit>:
     484:	8d e0       	ldi	r24, 0x0D	; 13
     486:	80 93 21 01 	sts	0x0121, r24	; 0x800121 <__TEXT_REGION_LENGTH__+0x700121>
     48a:	81 e1       	ldi	r24, 0x11	; 17
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	90 93 29 01 	sts	0x0129, r25	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
     492:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
     496:	82 e0       	ldi	r24, 0x02	; 2
     498:	80 93 73 00 	sts	0x0073, r24	; 0x800073 <__TEXT_REGION_LENGTH__+0x700073>
     49c:	10 92 e1 02 	sts	0x02E1, r1	; 0x8002e1 <step+0x1>
     4a0:	10 92 e0 02 	sts	0x02E0, r1	; 0x8002e0 <step>
     4a4:	10 92 d9 02 	sts	0x02D9, r1	; 0x8002d9 <Nstep+0x1>
     4a8:	10 92 d8 02 	sts	0x02D8, r1	; 0x8002d8 <Nstep>
     4ac:	10 92 d7 02 	sts	0x02D7, r1	; 0x8002d7 <contatorekit+0x1>
     4b0:	10 92 d6 02 	sts	0x02D6, r1	; 0x8002d6 <contatorekit>
     4b4:	10 92 db 02 	sts	0x02DB, r1	; 0x8002db <statoRilascio>
     4b8:	8d e8       	ldi	r24, 0x8D	; 141
     4ba:	93 e0       	ldi	r25, 0x03	; 3
     4bc:	90 93 df 02 	sts	0x02DF, r25	; 0x8002df <var1S+0x1>
     4c0:	80 93 de 02 	sts	0x02DE, r24	; 0x8002de <var1S>
     4c4:	8a e1       	ldi	r24, 0x1A	; 26
     4c6:	97 e0       	ldi	r25, 0x07	; 7
     4c8:	90 93 e3 02 	sts	0x02E3, r25	; 0x8002e3 <var2S+0x1>
     4cc:	80 93 e2 02 	sts	0x02E2, r24	; 0x8002e2 <var2S>
     4d0:	81 ec       	ldi	r24, 0xC1	; 193
     4d2:	91 e1       	ldi	r25, 0x11	; 17
     4d4:	90 93 e5 02 	sts	0x02E5, r25	; 0x8002e5 <varF1+0x1>
     4d8:	80 93 e4 02 	sts	0x02E4, r24	; 0x8002e4 <varF1>
     4dc:	89 e6       	ldi	r24, 0x69	; 105
     4de:	9f e0       	ldi	r25, 0x0F	; 15
     4e0:	90 93 dd 02 	sts	0x02DD, r25	; 0x8002dd <varF2+0x1>
     4e4:	80 93 dc 02 	sts	0x02DC, r24	; 0x8002dc <varF2>
     4e8:	86 e0       	ldi	r24, 0x06	; 6
     4ea:	0c 94 19 13 	jmp	0x2632	; 0x2632 <ColoreLED1>
     4ee:	08 95       	ret

000004f0 <one_step>:
     4f0:	9c 01       	movw	r18, r24
     4f2:	88 30       	cpi	r24, 0x08	; 8
     4f4:	91 05       	cpc	r25, r1
     4f6:	f0 f4       	brcc	.+60     	; 0x534 <one_step+0x44>
     4f8:	fc 01       	movw	r30, r24
     4fa:	88 27       	eor	r24, r24
     4fc:	ee 58       	subi	r30, 0x8E	; 142
     4fe:	ff 4f       	sbci	r31, 0xFF	; 255
     500:	8f 4f       	sbci	r24, 0xFF	; 255
     502:	0c 94 0a 23 	jmp	0x4614	; 0x4614 <__tablejump2__>
     506:	81 e0       	ldi	r24, 0x01	; 1
     508:	88 b9       	out	0x08, r24	; 8
     50a:	14 c0       	rjmp	.+40     	; 0x534 <one_step+0x44>
     50c:	83 e0       	ldi	r24, 0x03	; 3
     50e:	88 b9       	out	0x08, r24	; 8
     510:	11 c0       	rjmp	.+34     	; 0x534 <one_step+0x44>
     512:	82 e0       	ldi	r24, 0x02	; 2
     514:	88 b9       	out	0x08, r24	; 8
     516:	0e c0       	rjmp	.+28     	; 0x534 <one_step+0x44>
     518:	86 e0       	ldi	r24, 0x06	; 6
     51a:	88 b9       	out	0x08, r24	; 8
     51c:	0b c0       	rjmp	.+22     	; 0x534 <one_step+0x44>
     51e:	84 e0       	ldi	r24, 0x04	; 4
     520:	88 b9       	out	0x08, r24	; 8
     522:	08 c0       	rjmp	.+16     	; 0x534 <one_step+0x44>
     524:	8c e0       	ldi	r24, 0x0C	; 12
     526:	88 b9       	out	0x08, r24	; 8
     528:	05 c0       	rjmp	.+10     	; 0x534 <one_step+0x44>
     52a:	88 e0       	ldi	r24, 0x08	; 8
     52c:	88 b9       	out	0x08, r24	; 8
     52e:	02 c0       	rjmp	.+4      	; 0x534 <one_step+0x44>
     530:	89 e0       	ldi	r24, 0x09	; 9
     532:	88 b9       	out	0x08, r24	; 8
     534:	61 30       	cpi	r22, 0x01	; 1
     536:	71 05       	cpc	r23, r1
     538:	19 f4       	brne	.+6      	; 0x540 <one_step+0x50>
     53a:	c9 01       	movw	r24, r18
     53c:	01 96       	adiw	r24, 0x01	; 1
     53e:	02 c0       	rjmp	.+4      	; 0x544 <one_step+0x54>
     540:	c9 01       	movw	r24, r18
     542:	01 97       	sbiw	r24, 0x01	; 1
     544:	88 30       	cpi	r24, 0x08	; 8
     546:	91 05       	cpc	r25, r1
     548:	2c f4       	brge	.+10     	; 0x554 <one_step+0x64>
     54a:	99 23       	and	r25, r25
     54c:	2c f4       	brge	.+10     	; 0x558 <one_step+0x68>
     54e:	87 e0       	ldi	r24, 0x07	; 7
     550:	90 e0       	ldi	r25, 0x00	; 0
     552:	08 95       	ret
     554:	80 e0       	ldi	r24, 0x00	; 0
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	08 95       	ret

0000055a <__vector_47>:
     55a:	1f 92       	push	r1
     55c:	0f 92       	push	r0
     55e:	0f b6       	in	r0, 0x3f	; 63
     560:	0f 92       	push	r0
     562:	11 24       	eor	r1, r1
     564:	0b b6       	in	r0, 0x3b	; 59
     566:	0f 92       	push	r0
     568:	2f 93       	push	r18
     56a:	3f 93       	push	r19
     56c:	4f 93       	push	r20
     56e:	5f 93       	push	r21
     570:	6f 93       	push	r22
     572:	7f 93       	push	r23
     574:	8f 93       	push	r24
     576:	9f 93       	push	r25
     578:	af 93       	push	r26
     57a:	bf 93       	push	r27
     57c:	ef 93       	push	r30
     57e:	ff 93       	push	r31
     580:	60 91 db 02 	lds	r22, 0x02DB	; 0x8002db <statoRilascio>
     584:	61 11       	cpse	r22, r1
     586:	54 c0       	rjmp	.+168    	; 0x630 <__vector_47+0xd6>
     588:	20 91 d6 02 	lds	r18, 0x02D6	; 0x8002d6 <contatorekit>
     58c:	30 91 d7 02 	lds	r19, 0x02D7	; 0x8002d7 <contatorekit+0x1>
     590:	60 91 e2 02 	lds	r22, 0x02E2	; 0x8002e2 <var2S>
     594:	70 91 e3 02 	lds	r23, 0x02E3	; 0x8002e3 <var2S+0x1>
     598:	c9 01       	movw	r24, r18
     59a:	0e 94 c7 22 	call	0x458e	; 0x458e <__udivmodhi4>
     59e:	89 2b       	or	r24, r25
     5a0:	21 f4       	brne	.+8      	; 0x5aa <__vector_47+0x50>
     5a2:	81 e0       	ldi	r24, 0x01	; 1
     5a4:	0e 94 19 13 	call	0x2632	; 0x2632 <ColoreLED1>
     5a8:	0c c0       	rjmp	.+24     	; 0x5c2 <__vector_47+0x68>
     5aa:	60 91 de 02 	lds	r22, 0x02DE	; 0x8002de <var1S>
     5ae:	70 91 df 02 	lds	r23, 0x02DF	; 0x8002df <var1S+0x1>
     5b2:	c9 01       	movw	r24, r18
     5b4:	0e 94 c7 22 	call	0x458e	; 0x458e <__udivmodhi4>
     5b8:	89 2b       	or	r24, r25
     5ba:	19 f4       	brne	.+6      	; 0x5c2 <__vector_47+0x68>
     5bc:	83 e0       	ldi	r24, 0x03	; 3
     5be:	0e 94 19 13 	call	0x2632	; 0x2632 <ColoreLED1>
     5c2:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <Nstep>
     5c6:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <Nstep+0x1>
     5ca:	8c 33       	cpi	r24, 0x3C	; 60
     5cc:	9f 40       	sbci	r25, 0x0F	; 15
     5ce:	ac f4       	brge	.+42     	; 0x5fa <__vector_47+0xa0>
     5d0:	60 91 db 02 	lds	r22, 0x02DB	; 0x8002db <statoRilascio>
     5d4:	70 e0       	ldi	r23, 0x00	; 0
     5d6:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <step>
     5da:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <step+0x1>
     5de:	88 df       	rcall	.-240    	; 0x4f0 <one_step>
     5e0:	90 93 e1 02 	sts	0x02E1, r25	; 0x8002e1 <step+0x1>
     5e4:	80 93 e0 02 	sts	0x02E0, r24	; 0x8002e0 <step>
     5e8:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <Nstep>
     5ec:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <Nstep+0x1>
     5f0:	01 96       	adiw	r24, 0x01	; 1
     5f2:	90 93 d9 02 	sts	0x02D9, r25	; 0x8002d9 <Nstep+0x1>
     5f6:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <Nstep>
     5fa:	20 91 d6 02 	lds	r18, 0x02D6	; 0x8002d6 <contatorekit>
     5fe:	30 91 d7 02 	lds	r19, 0x02D7	; 0x8002d7 <contatorekit+0x1>
     602:	80 91 e4 02 	lds	r24, 0x02E4	; 0x8002e4 <varF1>
     606:	90 91 e5 02 	lds	r25, 0x02E5	; 0x8002e5 <varF1+0x1>
     60a:	82 17       	cp	r24, r18
     60c:	93 07       	cpc	r25, r19
     60e:	30 f4       	brcc	.+12     	; 0x61c <__vector_47+0xc2>
     610:	81 e0       	ldi	r24, 0x01	; 1
     612:	80 93 db 02 	sts	0x02DB, r24	; 0x8002db <statoRilascio>
     616:	86 e0       	ldi	r24, 0x06	; 6
     618:	0e 94 19 13 	call	0x2632	; 0x2632 <ColoreLED1>
     61c:	80 91 d6 02 	lds	r24, 0x02D6	; 0x8002d6 <contatorekit>
     620:	90 91 d7 02 	lds	r25, 0x02D7	; 0x8002d7 <contatorekit+0x1>
     624:	01 96       	adiw	r24, 0x01	; 1
     626:	90 93 d7 02 	sts	0x02D7, r25	; 0x8002d7 <contatorekit+0x1>
     62a:	80 93 d6 02 	sts	0x02D6, r24	; 0x8002d6 <contatorekit>
     62e:	21 c0       	rjmp	.+66     	; 0x672 <__vector_47+0x118>
     630:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <Nstep>
     634:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <Nstep+0x1>
     638:	8c 3d       	cpi	r24, 0xDC	; 220
     63a:	9e 41       	sbci	r25, 0x1E	; 30
     63c:	a4 f4       	brge	.+40     	; 0x666 <__vector_47+0x10c>
     63e:	70 e0       	ldi	r23, 0x00	; 0
     640:	80 91 e0 02 	lds	r24, 0x02E0	; 0x8002e0 <step>
     644:	90 91 e1 02 	lds	r25, 0x02E1	; 0x8002e1 <step+0x1>
     648:	53 df       	rcall	.-346    	; 0x4f0 <one_step>
     64a:	90 93 e1 02 	sts	0x02E1, r25	; 0x8002e1 <step+0x1>
     64e:	80 93 e0 02 	sts	0x02E0, r24	; 0x8002e0 <step>
     652:	80 91 d8 02 	lds	r24, 0x02D8	; 0x8002d8 <Nstep>
     656:	90 91 d9 02 	lds	r25, 0x02D9	; 0x8002d9 <Nstep+0x1>
     65a:	01 96       	adiw	r24, 0x01	; 1
     65c:	90 93 d9 02 	sts	0x02D9, r25	; 0x8002d9 <Nstep+0x1>
     660:	80 93 d8 02 	sts	0x02D8, r24	; 0x8002d8 <Nstep>
     664:	06 c0       	rjmp	.+12     	; 0x672 <__vector_47+0x118>
     666:	18 b8       	out	0x08, r1	; 8
     668:	8f ef       	ldi	r24, 0xFF	; 255
     66a:	80 93 db 02 	sts	0x02DB, r24	; 0x8002db <statoRilascio>
     66e:	10 92 21 01 	sts	0x0121, r1	; 0x800121 <__TEXT_REGION_LENGTH__+0x700121>
     672:	ff 91       	pop	r31
     674:	ef 91       	pop	r30
     676:	bf 91       	pop	r27
     678:	af 91       	pop	r26
     67a:	9f 91       	pop	r25
     67c:	8f 91       	pop	r24
     67e:	7f 91       	pop	r23
     680:	6f 91       	pop	r22
     682:	5f 91       	pop	r21
     684:	4f 91       	pop	r20
     686:	3f 91       	pop	r19
     688:	2f 91       	pop	r18
     68a:	0f 90       	pop	r0
     68c:	0b be       	out	0x3b, r0	; 59
     68e:	0f 90       	pop	r0
     690:	0f be       	out	0x3f, r0	; 63
     692:	0f 90       	pop	r0
     694:	1f 90       	pop	r1
     696:	18 95       	reti

00000698 <initRilKit>:
     698:	87 b1       	in	r24, 0x07	; 7
     69a:	8f 63       	ori	r24, 0x3F	; 63
     69c:	87 b9       	out	0x07, r24	; 7
     69e:	08 95       	ret

000006a0 <rilasciokit>:
     6a0:	0f 93       	push	r16
     6a2:	1f 93       	push	r17
     6a4:	cf 93       	push	r28
     6a6:	df 93       	push	r29
     6a8:	8c 01       	movw	r16, r24
     6aa:	86 e0       	ldi	r24, 0x06	; 6
     6ac:	0e 94 19 13 	call	0x2632	; 0x2632 <ColoreLED1>
     6b0:	81 e0       	ldi	r24, 0x01	; 1
     6b2:	80 93 d2 02 	sts	0x02D2, r24	; 0x8002d2 <statoGenRil>
     6b6:	10 16       	cp	r1, r16
     6b8:	11 06       	cpc	r1, r17
     6ba:	3c f4       	brge	.+14     	; 0x6ca <rilasciokit+0x2a>
     6bc:	c0 e0       	ldi	r28, 0x00	; 0
     6be:	d0 e0       	ldi	r29, 0x00	; 0
     6c0:	e1 de       	rcall	.-574    	; 0x484 <initTimerkit>
     6c2:	21 96       	adiw	r28, 0x01	; 1
     6c4:	0c 17       	cp	r16, r28
     6c6:	1d 07       	cpc	r17, r29
     6c8:	d9 f7       	brne	.-10     	; 0x6c0 <rilasciokit+0x20>
     6ca:	10 92 d2 02 	sts	0x02D2, r1	; 0x8002d2 <statoGenRil>
     6ce:	86 e0       	ldi	r24, 0x06	; 6
     6d0:	0e 94 19 13 	call	0x2632	; 0x2632 <ColoreLED1>
     6d4:	df 91       	pop	r29
     6d6:	cf 91       	pop	r28
     6d8:	1f 91       	pop	r17
     6da:	0f 91       	pop	r16
     6dc:	08 95       	ret

000006de <__vector_3>:
#include "Kit.h"
#include "BNO.h"
#include "TWI.h"
#include "ADC.h"

 ISR(INT2_vect){
     6de:	1f 92       	push	r1
     6e0:	0f 92       	push	r0
     6e2:	0f b6       	in	r0, 0x3f	; 63
     6e4:	0f 92       	push	r0
     6e6:	11 24       	eor	r1, r1
     6e8:	0b b6       	in	r0, 0x3b	; 59
     6ea:	0f 92       	push	r0
     6ec:	2f 93       	push	r18
     6ee:	3f 93       	push	r19
     6f0:	4f 93       	push	r20
     6f2:	5f 93       	push	r21
     6f4:	6f 93       	push	r22
     6f6:	7f 93       	push	r23
     6f8:	8f 93       	push	r24
     6fa:	9f 93       	push	r25
     6fc:	af 93       	push	r26
     6fe:	bf 93       	push	r27
     700:	ef 93       	push	r30
     702:	ff 93       	push	r31
	 fISR(nINT2);
     704:	82 e0       	ldi	r24, 0x02	; 2
     706:	0e 94 ea 18 	call	0x31d4	; 0x31d4 <fISR>
 }
     70a:	ff 91       	pop	r31
     70c:	ef 91       	pop	r30
     70e:	bf 91       	pop	r27
     710:	af 91       	pop	r26
     712:	9f 91       	pop	r25
     714:	8f 91       	pop	r24
     716:	7f 91       	pop	r23
     718:	6f 91       	pop	r22
     71a:	5f 91       	pop	r21
     71c:	4f 91       	pop	r20
     71e:	3f 91       	pop	r19
     720:	2f 91       	pop	r18
     722:	0f 90       	pop	r0
     724:	0b be       	out	0x3b, r0	; 59
     726:	0f 90       	pop	r0
     728:	0f be       	out	0x3f, r0	; 63
     72a:	0f 90       	pop	r0
     72c:	1f 90       	pop	r1
     72e:	18 95       	reti

00000730 <__vector_4>:
 ISR(INT3_vect){
     730:	1f 92       	push	r1
     732:	0f 92       	push	r0
     734:	0f b6       	in	r0, 0x3f	; 63
     736:	0f 92       	push	r0
     738:	11 24       	eor	r1, r1
     73a:	0b b6       	in	r0, 0x3b	; 59
     73c:	0f 92       	push	r0
     73e:	2f 93       	push	r18
     740:	3f 93       	push	r19
     742:	4f 93       	push	r20
     744:	5f 93       	push	r21
     746:	6f 93       	push	r22
     748:	7f 93       	push	r23
     74a:	8f 93       	push	r24
     74c:	9f 93       	push	r25
     74e:	af 93       	push	r26
     750:	bf 93       	push	r27
     752:	ef 93       	push	r30
     754:	ff 93       	push	r31
 	fISR(nINT3);
     756:	83 e0       	ldi	r24, 0x03	; 3
     758:	0e 94 ea 18 	call	0x31d4	; 0x31d4 <fISR>
 }
     75c:	ff 91       	pop	r31
     75e:	ef 91       	pop	r30
     760:	bf 91       	pop	r27
     762:	af 91       	pop	r26
     764:	9f 91       	pop	r25
     766:	8f 91       	pop	r24
     768:	7f 91       	pop	r23
     76a:	6f 91       	pop	r22
     76c:	5f 91       	pop	r21
     76e:	4f 91       	pop	r20
     770:	3f 91       	pop	r19
     772:	2f 91       	pop	r18
     774:	0f 90       	pop	r0
     776:	0b be       	out	0x3b, r0	; 59
     778:	0f 90       	pop	r0
     77a:	0f be       	out	0x3f, r0	; 63
     77c:	0f 90       	pop	r0
     77e:	1f 90       	pop	r1
     780:	18 95       	reti

00000782 <__vector_5>:
 ISR(INT4_vect){
     782:	1f 92       	push	r1
     784:	0f 92       	push	r0
     786:	0f b6       	in	r0, 0x3f	; 63
     788:	0f 92       	push	r0
     78a:	11 24       	eor	r1, r1
     78c:	0b b6       	in	r0, 0x3b	; 59
     78e:	0f 92       	push	r0
     790:	2f 93       	push	r18
     792:	3f 93       	push	r19
     794:	4f 93       	push	r20
     796:	5f 93       	push	r21
     798:	6f 93       	push	r22
     79a:	7f 93       	push	r23
     79c:	8f 93       	push	r24
     79e:	9f 93       	push	r25
     7a0:	af 93       	push	r26
     7a2:	bf 93       	push	r27
     7a4:	ef 93       	push	r30
     7a6:	ff 93       	push	r31
 	fISR(nINT4);
     7a8:	81 e0       	ldi	r24, 0x01	; 1
     7aa:	0e 94 ea 18 	call	0x31d4	; 0x31d4 <fISR>
 }
     7ae:	ff 91       	pop	r31
     7b0:	ef 91       	pop	r30
     7b2:	bf 91       	pop	r27
     7b4:	af 91       	pop	r26
     7b6:	9f 91       	pop	r25
     7b8:	8f 91       	pop	r24
     7ba:	7f 91       	pop	r23
     7bc:	6f 91       	pop	r22
     7be:	5f 91       	pop	r21
     7c0:	4f 91       	pop	r20
     7c2:	3f 91       	pop	r19
     7c4:	2f 91       	pop	r18
     7c6:	0f 90       	pop	r0
     7c8:	0b be       	out	0x3b, r0	; 59
     7ca:	0f 90       	pop	r0
     7cc:	0f be       	out	0x3f, r0	; 63
     7ce:	0f 90       	pop	r0
     7d0:	1f 90       	pop	r1
     7d2:	18 95       	reti

000007d4 <__vector_6>:
 ISR(INT5_vect){
     7d4:	1f 92       	push	r1
     7d6:	0f 92       	push	r0
     7d8:	0f b6       	in	r0, 0x3f	; 63
     7da:	0f 92       	push	r0
     7dc:	11 24       	eor	r1, r1
     7de:	0b b6       	in	r0, 0x3b	; 59
     7e0:	0f 92       	push	r0
     7e2:	2f 93       	push	r18
     7e4:	3f 93       	push	r19
     7e6:	4f 93       	push	r20
     7e8:	5f 93       	push	r21
     7ea:	6f 93       	push	r22
     7ec:	7f 93       	push	r23
     7ee:	8f 93       	push	r24
     7f0:	9f 93       	push	r25
     7f2:	af 93       	push	r26
     7f4:	bf 93       	push	r27
     7f6:	ef 93       	push	r30
     7f8:	ff 93       	push	r31
 	fISR(nINT5);
     7fa:	80 e0       	ldi	r24, 0x00	; 0
     7fc:	0e 94 ea 18 	call	0x31d4	; 0x31d4 <fISR>
 }
     800:	ff 91       	pop	r31
     802:	ef 91       	pop	r30
     804:	bf 91       	pop	r27
     806:	af 91       	pop	r26
     808:	9f 91       	pop	r25
     80a:	8f 91       	pop	r24
     80c:	7f 91       	pop	r23
     80e:	6f 91       	pop	r22
     810:	5f 91       	pop	r21
     812:	4f 91       	pop	r20
     814:	3f 91       	pop	r19
     816:	2f 91       	pop	r18
     818:	0f 90       	pop	r0
     81a:	0b be       	out	0x3b, r0	; 59
     81c:	0f 90       	pop	r0
     81e:	0f be       	out	0x3f, r0	; 63
     820:	0f 90       	pop	r0
     822:	1f 90       	pop	r1
     824:	18 95       	reti

00000826 <main>:

int main(void)
{	
     826:	cf 93       	push	r28
     828:	df 93       	push	r29
     82a:	cd b7       	in	r28, 0x3d	; 61
     82c:	de b7       	in	r29, 0x3e	; 62
     82e:	63 97       	sbiw	r28, 0x13	; 19
     830:	0f b6       	in	r0, 0x3f	; 63
     832:	f8 94       	cli
     834:	de bf       	out	0x3e, r29	; 62
     836:	0f be       	out	0x3f, r0	; 63
     838:	cd bf       	out	0x3d, r28	; 61
	ColoreLED(SPENTO);
     83a:	86 e0       	ldi	r24, 0x06	; 6
     83c:	0e 94 bb 12 	call	0x2576	; 0x2576 <ColoreLED>
	ColoreLED1(SPENTO);
     840:	86 e0       	ldi	r24, 0x06	; 6
     842:	0e 94 19 13 	call	0x2632	; 0x2632 <ColoreLED1>
	Serial_Init();
     846:	0e 94 4a 1e 	call	0x3c94	; 0x3c94 <Serial_Init>
	//Serial2_Init();
	Serial_Send_String("init \n");
     84a:	86 e0       	ldi	r24, 0x06	; 6
     84c:	92 e0       	ldi	r25, 0x02	; 2
     84e:	0e 94 6d 1e 	call	0x3cda	; 0x3cda <Serial_Send_String>
	TWI_init();
     852:	0e 94 7b 1f 	call	0x3ef6	; 0x3ef6 <TWI_init>
	BNO_init();
     856:	c2 dc       	rcall	.-1660   	; 0x1dc <BNO_init>
	initPulsanti();
     858:	0e 94 b9 1d 	call	0x3b72	; 0x3b72 <initPulsanti>
	initRilKit();
     85c:	1d df       	rcall	.-454    	; 0x698 <initRilKit>
 	init_PID();
     85e:	0e 94 c7 1a 	call	0x358e	; 0x358e <init_PID>
 	start_PID();
     862:	0e 94 d5 19 	call	0x33aa	; 0x33aa <start_PID>
 	InitADC();
     866:	7b dc       	rcall	.-1802   	; 0x15e <InitADC>
	
 	LedGara=1;
     868:	81 e0       	ldi	r24, 0x01	; 1
     86a:	80 93 da 02 	sts	0x02DA, r24	; 0x8002da <LedGara>
 	giriAvanti=1.2;
     86e:	4a e9       	ldi	r20, 0x9A	; 154
     870:	59 e9       	ldi	r21, 0x99	; 153
     872:	69 e9       	ldi	r22, 0x99	; 153
     874:	7f e3       	ldi	r23, 0x3F	; 63
     876:	40 93 3c 03 	sts	0x033C, r20	; 0x80033c <giriAvanti>
     87a:	50 93 3d 03 	sts	0x033D, r21	; 0x80033d <giriAvanti+0x1>
     87e:	60 93 3e 03 	sts	0x033E, r22	; 0x80033e <giriAvanti+0x2>
     882:	70 93 3f 03 	sts	0x033F, r23	; 0x80033f <giriAvanti+0x3>
 	ultimoGira=180;
     886:	24 eb       	ldi	r18, 0xB4	; 180
     888:	30 e0       	ldi	r19, 0x00	; 0
     88a:	30 93 1b 03 	sts	0x031B, r19	; 0x80031b <ultimoGira+0x1>
     88e:	20 93 1a 03 	sts	0x031A, r18	; 0x80031a <ultimoGira>
 	statokit=1;
     892:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <statokit>
 	uint8_t presenzaMuroSinistra=0;//1 se è presente muro a sx
 	uint8_t presenzaMuroDestra=0;//1 se è presente muro a dx
 	uint8_t presenzaMuroAvanti=0;//1 se è presente muro av
 	countFinecorsa=0;
     896:	10 92 f8 02 	sts	0x02F8, r1	; 0x8002f8 <countFinecorsa+0x1>
     89a:	10 92 f7 02 	sts	0x02F7, r1	; 0x8002f7 <countFinecorsa>
 	int ndestre=5;
	uint8_t no_avanti=0, allinea=0, no_destra=0;
	unsigned long millis_allinea;
	unsigned int tempo_allinea;
	uint8_t FD, FS;
	resetta_distanza();
     89e:	0e 94 d9 19 	call	0x33b2	; 0x33b2 <resetta_distanza>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     8a2:	2f ef       	ldi	r18, 0xFF	; 255
     8a4:	89 e6       	ldi	r24, 0x69	; 105
     8a6:	98 e1       	ldi	r25, 0x18	; 24
     8a8:	21 50       	subi	r18, 0x01	; 1
     8aa:	80 40       	sbci	r24, 0x00	; 0
     8ac:	90 40       	sbci	r25, 0x00	; 0
     8ae:	e1 f7       	brne	.-8      	; 0x8a8 <main+0x82>
     8b0:	00 c0       	rjmp	.+0      	; 0x8b2 <main+0x8c>
     8b2:	00 00       	nop
	_delay_ms(500);
	reset_millis();
     8b4:	0e 94 f3 1b 	call	0x37e6	; 0x37e6 <reset_millis>
	init_asseY=readAxis(asseY);
     8b8:	82 e0       	ldi	r24, 0x02	; 2
     8ba:	90 e0       	ldi	r25, 0x00	; 0
     8bc:	27 dd       	rcall	.-1458   	; 0x30c <readAxis>
     8be:	60 93 a1 02 	sts	0x02A1, r22	; 0x8002a1 <init_asseY>
     8c2:	70 93 a2 02 	sts	0x02A2, r23	; 0x8002a2 <init_asseY+0x1>
     8c6:	80 93 a3 02 	sts	0x02A3, r24	; 0x8002a3 <init_asseY+0x2>
     8ca:	90 93 a4 02 	sts	0x02A4, r25	; 0x8002a4 <init_asseY+0x3>
	correzzione_asseZ=readAxis(asseZ);
     8ce:	81 e0       	ldi	r24, 0x01	; 1
     8d0:	90 e0       	ldi	r25, 0x00	; 0
     8d2:	1c dd       	rcall	.-1480   	; 0x30c <readAxis>
     8d4:	60 93 a5 02 	sts	0x02A5, r22	; 0x8002a5 <correzzione_asseZ>
     8d8:	70 93 a6 02 	sts	0x02A6, r23	; 0x8002a6 <correzzione_asseZ+0x1>
     8dc:	80 93 a7 02 	sts	0x02A7, r24	; 0x8002a7 <correzzione_asseZ+0x2>
     8e0:	90 93 a8 02 	sts	0x02A8, r25	; 0x8002a8 <correzzione_asseZ+0x3>
 	countFinecorsa=0;
 	float diDxAv, diSxAv,diDxDi,  diSxDi, diAvDx, diAvSx;	
	 float g_temp=0, g_temp1=0;
 	int contadestre=0;
 	int ndestre=5;
	uint8_t no_avanti=0, allinea=0, no_destra=0;
     8e4:	10 e0       	ldi	r17, 0x00	; 0
     8e6:	00 e0       	ldi	r16, 0x00	; 0
     8e8:	21 2c       	mov	r2, r1
 	uint8_t presenzaMuroSinistra=0;//1 se è presente muro a sx
 	uint8_t presenzaMuroDestra=0;//1 se è presente muro a dx
 	uint8_t presenzaMuroAvanti=0;//1 se è presente muro av
 	countFinecorsa=0;
 	float diDxAv, diSxAv,diDxDi,  diSxDi, diAvDx, diAvSx;	
	 float g_temp=0, g_temp1=0;
     8ea:	1e 86       	std	Y+14, r1	; 0x0e
     8ec:	1f 86       	std	Y+15, r1	; 0x0f
     8ee:	18 8a       	std	Y+16, r1	; 0x10
     8f0:	19 8a       	std	Y+17, r1	; 0x11
		if(ColoreCasella()==Nero){
			dritto(30,-1.2);
			no_avanti=1;
			contadestre=0;
			//if(ultimoGira==90){
				no_destra=1;
     8f2:	33 24       	eor	r3, r3
     8f4:	33 94       	inc	r3
     8f6:	3d 86       	std	Y+13, r3	; 0x0d
					tempo_allinea=1000;
					millis_allinea=millis();
				}
				if(finecorsaDietroSx() && FS==0){
					FS=1;
					tempo_allinea=1000;
     8f8:	80 e0       	ldi	r24, 0x00	; 0
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	9b 8b       	std	Y+19, r25	; 0x13
     8fe:	8a 8b       	std	Y+18, r24	; 0x12
	init_asseY=readAxis(asseY);
	correzzione_asseZ=readAxis(asseZ);

  	while (1){		  
  		//Serial_Send_String("main\n");
		 ColoreLED(WHITE);
     900:	83 e0       	ldi	r24, 0x03	; 3
     902:	0e 94 bb 12 	call	0x2576	; 0x2576 <ColoreLED>
		if(ColoreCasella()==Nero){
     906:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <ColoreCasella>
     90a:	81 30       	cpi	r24, 0x01	; 1
     90c:	71 f4       	brne	.+28     	; 0x92a <main+0x104>
			dritto(30,-1.2);
     90e:	2a e9       	ldi	r18, 0x9A	; 154
     910:	39 e9       	ldi	r19, 0x99	; 153
     912:	49 e9       	ldi	r20, 0x99	; 153
     914:	5f eb       	ldi	r21, 0xBF	; 191
     916:	60 e0       	ldi	r22, 0x00	; 0
     918:	70 e0       	ldi	r23, 0x00	; 0
     91a:	80 ef       	ldi	r24, 0xF0	; 240
     91c:	91 e4       	ldi	r25, 0x41	; 65
     91e:	0e 94 c1 1b 	call	0x3782	; 0x3782 <dritto>
			no_avanti=1;
			contadestre=0;
			//if(ultimoGira==90){
				no_destra=1;
     922:	13 2d       	mov	r17, r3
  	while (1){		  
  		//Serial_Send_String("main\n");
		 ColoreLED(WHITE);
		if(ColoreCasella()==Nero){
			dritto(30,-1.2);
			no_avanti=1;
     924:	23 2c       	mov	r2, r3
			contadestre=0;
     926:	1b 8a       	std	Y+19, r1	; 0x13
     928:	1a 8a       	std	Y+18, r1	; 0x12
			//if(ultimoGira==90){
				no_destra=1;
			//}
		}
    	diDxAv=DistanzaIR(DestraAvanti);
     92a:	82 e0       	ldi	r24, 0x02	; 2
     92c:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
     930:	6b 01       	movw	r12, r22
     932:	7c 01       	movw	r14, r24
    	diDxDi=DistanzaIR(DestraDietro);
     934:	83 e0       	ldi	r24, 0x03	; 3
     936:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
     93a:	2b 01       	movw	r4, r22
     93c:	3c 01       	movw	r6, r24
   		diSxAv=DistanzaIR(SinistraAvanti);
     93e:	84 e0       	ldi	r24, 0x04	; 4
     940:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
     944:	4b 01       	movw	r8, r22
     946:	5c 01       	movw	r10, r24
  		diSxDi=DistanzaIR(SinistraDietro);
     948:	85 e0       	ldi	r24, 0x05	; 5
     94a:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
     94e:	69 83       	std	Y+1, r22	; 0x01
     950:	7a 83       	std	Y+2, r23	; 0x02
     952:	8b 83       	std	Y+3, r24	; 0x03
     954:	9c 83       	std	Y+4, r25	; 0x04
		ColoreLED(RED);
     956:	80 e0       	ldi	r24, 0x00	; 0
     958:	0e 94 bb 12 	call	0x2576	; 0x2576 <ColoreLED>
		uint8_t mov=1;
		if((diDxAv>=20)&&(diDxDi<20)){
     95c:	20 e0       	ldi	r18, 0x00	; 0
     95e:	30 e0       	ldi	r19, 0x00	; 0
     960:	40 ea       	ldi	r20, 0xA0	; 160
     962:	51 e4       	ldi	r21, 0x41	; 65
     964:	c7 01       	movw	r24, r14
     966:	b6 01       	movw	r22, r12
     968:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
     96c:	88 23       	and	r24, r24
     96e:	04 f1       	brlt	.+64     	; 0x9b0 <main+0x18a>
     970:	20 e0       	ldi	r18, 0x00	; 0
     972:	30 e0       	ldi	r19, 0x00	; 0
     974:	40 ea       	ldi	r20, 0xA0	; 160
     976:	51 e4       	ldi	r21, 0x41	; 65
     978:	c3 01       	movw	r24, r6
     97a:	b2 01       	movw	r22, r4
     97c:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     980:	88 23       	and	r24, r24
     982:	b4 f4       	brge	.+44     	; 0x9b0 <main+0x18a>
			set_giri(giriAvanti);
     984:	60 91 3c 03 	lds	r22, 0x033C	; 0x80033c <giriAvanti>
     988:	70 91 3d 03 	lds	r23, 0x033D	; 0x80033d <giriAvanti+0x1>
     98c:	80 91 3e 03 	lds	r24, 0x033E	; 0x80033e <giriAvanti+0x2>
     990:	90 91 3f 03 	lds	r25, 0x033F	; 0x80033f <giriAvanti+0x3>
     994:	0e 94 8a 1b 	call	0x3714	; 0x3714 <set_giri>
			while(diDxDi<20) diDxDi=DistanzaIR(DestraDietro);
     998:	83 e0       	ldi	r24, 0x03	; 3
     99a:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
     99e:	20 e0       	ldi	r18, 0x00	; 0
     9a0:	30 e0       	ldi	r19, 0x00	; 0
     9a2:	40 ea       	ldi	r20, 0xA0	; 160
     9a4:	51 e4       	ldi	r21, 0x41	; 65
     9a6:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     9aa:	88 23       	and	r24, r24
     9ac:	ac f3       	brlt	.-22     	; 0x998 <main+0x172>
     9ae:	fa c2       	rjmp	.+1524   	; 0xfa4 <main+0x77e>
		}
		else if((diSxAv>=20)&&(diSxDi<20)){
     9b0:	20 e0       	ldi	r18, 0x00	; 0
     9b2:	30 e0       	ldi	r19, 0x00	; 0
     9b4:	40 ea       	ldi	r20, 0xA0	; 160
     9b6:	51 e4       	ldi	r21, 0x41	; 65
     9b8:	c5 01       	movw	r24, r10
     9ba:	b4 01       	movw	r22, r8
     9bc:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
     9c0:	88 23       	and	r24, r24
     9c2:	14 f1       	brlt	.+68     	; 0xa08 <main+0x1e2>
     9c4:	20 e0       	ldi	r18, 0x00	; 0
     9c6:	30 e0       	ldi	r19, 0x00	; 0
     9c8:	40 ea       	ldi	r20, 0xA0	; 160
     9ca:	51 e4       	ldi	r21, 0x41	; 65
     9cc:	69 81       	ldd	r22, Y+1	; 0x01
     9ce:	7a 81       	ldd	r23, Y+2	; 0x02
     9d0:	8b 81       	ldd	r24, Y+3	; 0x03
     9d2:	9c 81       	ldd	r25, Y+4	; 0x04
     9d4:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     9d8:	88 23       	and	r24, r24
     9da:	b4 f4       	brge	.+44     	; 0xa08 <main+0x1e2>
			set_giri(giriAvanti);
     9dc:	60 91 3c 03 	lds	r22, 0x033C	; 0x80033c <giriAvanti>
     9e0:	70 91 3d 03 	lds	r23, 0x033D	; 0x80033d <giriAvanti+0x1>
     9e4:	80 91 3e 03 	lds	r24, 0x033E	; 0x80033e <giriAvanti+0x2>
     9e8:	90 91 3f 03 	lds	r25, 0x033F	; 0x80033f <giriAvanti+0x3>
     9ec:	0e 94 8a 1b 	call	0x3714	; 0x3714 <set_giri>
			while(diSxDi<20) diSxDi=DistanzaIR(SinistraDietro);
     9f0:	85 e0       	ldi	r24, 0x05	; 5
     9f2:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
     9f6:	20 e0       	ldi	r18, 0x00	; 0
     9f8:	30 e0       	ldi	r19, 0x00	; 0
     9fa:	40 ea       	ldi	r20, 0xA0	; 160
     9fc:	51 e4       	ldi	r21, 0x41	; 65
     9fe:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     a02:	88 23       	and	r24, r24
     a04:	ac f3       	brlt	.-22     	; 0x9f0 <main+0x1ca>
     a06:	ce c2       	rjmp	.+1436   	; 0xfa4 <main+0x77e>
		}
		else if((diDxAv<20)&&(diDxDi>=20)){
     a08:	20 e0       	ldi	r18, 0x00	; 0
     a0a:	30 e0       	ldi	r19, 0x00	; 0
     a0c:	40 ea       	ldi	r20, 0xA0	; 160
     a0e:	51 e4       	ldi	r21, 0x41	; 65
     a10:	c7 01       	movw	r24, r14
     a12:	b6 01       	movw	r22, r12
     a14:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     a18:	88 23       	and	r24, r24
     a1a:	1c f5       	brge	.+70     	; 0xa62 <main+0x23c>
     a1c:	20 e0       	ldi	r18, 0x00	; 0
     a1e:	30 e0       	ldi	r19, 0x00	; 0
     a20:	40 ea       	ldi	r20, 0xA0	; 160
     a22:	51 e4       	ldi	r21, 0x41	; 65
     a24:	c3 01       	movw	r24, r6
     a26:	b2 01       	movw	r22, r4
     a28:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
     a2c:	88 23       	and	r24, r24
     a2e:	cc f0       	brlt	.+50     	; 0xa62 <main+0x23c>
			set_giri(-giriAvanti);
     a30:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <giriAvanti>
     a34:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <giriAvanti+0x1>
     a38:	a0 91 3e 03 	lds	r26, 0x033E	; 0x80033e <giriAvanti+0x2>
     a3c:	b0 91 3f 03 	lds	r27, 0x033F	; 0x80033f <giriAvanti+0x3>
     a40:	bc 01       	movw	r22, r24
     a42:	cd 01       	movw	r24, r26
     a44:	90 58       	subi	r25, 0x80	; 128
     a46:	0e 94 8a 1b 	call	0x3714	; 0x3714 <set_giri>
			while(diDxAv<20) diDxAv=DistanzaIR(DestraAvanti);
     a4a:	82 e0       	ldi	r24, 0x02	; 2
     a4c:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
     a50:	20 e0       	ldi	r18, 0x00	; 0
     a52:	30 e0       	ldi	r19, 0x00	; 0
     a54:	40 ea       	ldi	r20, 0xA0	; 160
     a56:	51 e4       	ldi	r21, 0x41	; 65
     a58:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     a5c:	88 23       	and	r24, r24
     a5e:	ac f3       	brlt	.-22     	; 0xa4a <main+0x224>
     a60:	a1 c2       	rjmp	.+1346   	; 0xfa4 <main+0x77e>
		}
		else if((diSxAv<20)&&(diSxDi>=20)){
     a62:	20 e0       	ldi	r18, 0x00	; 0
     a64:	30 e0       	ldi	r19, 0x00	; 0
     a66:	40 ea       	ldi	r20, 0xA0	; 160
     a68:	51 e4       	ldi	r21, 0x41	; 65
     a6a:	c5 01       	movw	r24, r10
     a6c:	b4 01       	movw	r22, r8
     a6e:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     a72:	88 23       	and	r24, r24
     a74:	c4 f5       	brge	.+112    	; 0xae6 <main+0x2c0>
     a76:	20 e0       	ldi	r18, 0x00	; 0
     a78:	30 e0       	ldi	r19, 0x00	; 0
     a7a:	40 ea       	ldi	r20, 0xA0	; 160
     a7c:	51 e4       	ldi	r21, 0x41	; 65
     a7e:	69 81       	ldd	r22, Y+1	; 0x01
     a80:	7a 81       	ldd	r23, Y+2	; 0x02
     a82:	8b 81       	ldd	r24, Y+3	; 0x03
     a84:	9c 81       	ldd	r25, Y+4	; 0x04
     a86:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
     a8a:	88 23       	and	r24, r24
     a8c:	64 f1       	brlt	.+88     	; 0xae6 <main+0x2c0>
			set_giri(-giriAvanti);
     a8e:	80 91 3c 03 	lds	r24, 0x033C	; 0x80033c <giriAvanti>
     a92:	90 91 3d 03 	lds	r25, 0x033D	; 0x80033d <giriAvanti+0x1>
     a96:	a0 91 3e 03 	lds	r26, 0x033E	; 0x80033e <giriAvanti+0x2>
     a9a:	b0 91 3f 03 	lds	r27, 0x033F	; 0x80033f <giriAvanti+0x3>
     a9e:	bc 01       	movw	r22, r24
     aa0:	cd 01       	movw	r24, r26
     aa2:	90 58       	subi	r25, 0x80	; 128
     aa4:	0e 94 8a 1b 	call	0x3714	; 0x3714 <set_giri>
			while(diSxAv<20) diSxAv=DistanzaIR(SinistraAvanti);
     aa8:	84 e0       	ldi	r24, 0x04	; 4
     aaa:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
     aae:	20 e0       	ldi	r18, 0x00	; 0
     ab0:	30 e0       	ldi	r19, 0x00	; 0
     ab2:	40 ea       	ldi	r20, 0xA0	; 160
     ab4:	51 e4       	ldi	r21, 0x41	; 65
     ab6:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     aba:	88 23       	and	r24, r24
     abc:	ac f3       	brlt	.-22     	; 0xaa8 <main+0x282>
		
		if(mov==1){
			mov=0;
			resetta_distanza();
			while(ABS(distanzaPercorsa())<6){
				rilevaVittima();
     abe:	72 c2       	rjmp	.+1252   	; 0xfa4 <main+0x77e>
     ac0:	83 d6       	rcall	.+3334   	; 0x17c8 <rilevaVittima>
				set_giri(1);
     ac2:	60 e0       	ldi	r22, 0x00	; 0
     ac4:	70 e0       	ldi	r23, 0x00	; 0
     ac6:	80 e8       	ldi	r24, 0x80	; 128
     ac8:	9f e3       	ldi	r25, 0x3F	; 63
     aca:	0e 94 8a 1b 	call	0x3714	; 0x3714 <set_giri>
		}
		
		if(mov==1){
			mov=0;
			resetta_distanza();
			while(ABS(distanzaPercorsa())<6){
     ace:	0e 94 48 1b 	call	0x3690	; 0x3690 <distanzaPercorsa>
     ad2:	0e 94 33 1e 	call	0x3c66	; 0x3c66 <ABS>
     ad6:	20 e0       	ldi	r18, 0x00	; 0
     ad8:	30 e0       	ldi	r19, 0x00	; 0
     ada:	40 ec       	ldi	r20, 0xC0	; 192
     adc:	50 e4       	ldi	r21, 0x40	; 64
     ade:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     ae2:	88 23       	and	r24, r24
     ae4:	6c f3       	brlt	.-38     	; 0xac0 <main+0x29a>
				rilevaVittima();
				set_giri(1);
			}
		}

		StopMotori();
     ae6:	0e 94 a9 1b 	call	0x3752	; 0x3752 <StopMotori>
		ColoreLED(WHITE);
     aea:	83 e0       	ldi	r24, 0x03	; 3
     aec:	0e 94 bb 12 	call	0x2576	; 0x2576 <ColoreLED>
		diDxAv=DistanzaIR(DestraAvanti);
     af0:	82 e0       	ldi	r24, 0x02	; 2
     af2:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
     af6:	69 83       	std	Y+1, r22	; 0x01
     af8:	7a 83       	std	Y+2, r23	; 0x02
     afa:	8b 83       	std	Y+3, r24	; 0x03
     afc:	9c 83       	std	Y+4, r25	; 0x04
		diDxDi=DistanzaIR(DestraDietro);
     afe:	83 e0       	ldi	r24, 0x03	; 3
     b00:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
     b04:	69 87       	std	Y+9, r22	; 0x09
     b06:	7a 87       	std	Y+10, r23	; 0x0a
     b08:	8b 87       	std	Y+11, r24	; 0x0b
     b0a:	9c 87       	std	Y+12, r25	; 0x0c
		diSxAv=DistanzaIR(SinistraAvanti);
     b0c:	84 e0       	ldi	r24, 0x04	; 4
     b0e:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
     b12:	6b 01       	movw	r12, r22
     b14:	7c 01       	movw	r14, r24
		diSxDi=DistanzaIR(SinistraDietro);
     b16:	85 e0       	ldi	r24, 0x05	; 5
     b18:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
     b1c:	6d 83       	std	Y+5, r22	; 0x05
     b1e:	7e 83       	std	Y+6, r23	; 0x06
     b20:	8f 83       	std	Y+7, r24	; 0x07
     b22:	98 87       	std	Y+8, r25	; 0x08
		diAvDx=DistanzaIR(AvantiDestra);
     b24:	83 2d       	mov	r24, r3
     b26:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
     b2a:	4b 01       	movw	r8, r22
     b2c:	5c 01       	movw	r10, r24
		diAvSx=DistanzaIR(AvantiSinistra);
     b2e:	80 e0       	ldi	r24, 0x00	; 0
     b30:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
     b34:	2b 01       	movw	r4, r22
     b36:	3c 01       	movw	r6, r24
			presenzaMuroDestra=1;
		}
		if (((diAvSx+diAvDx)/2) <=20.0){
			presenzaMuroAvanti=1;
		}
  		if ((no_destra==0)&&(contadestre<ndestre)&&((diDxAv>20)||(diDxDi>20))){
     b38:	11 11       	cpse	r17, r1
     b3a:	49 c0       	rjmp	.+146    	; 0xbce <main+0x3a8>
     b3c:	8a 89       	ldd	r24, Y+18	; 0x12
     b3e:	9b 89       	ldd	r25, Y+19	; 0x13
     b40:	05 97       	sbiw	r24, 0x05	; 5
     b42:	0c f0       	brlt	.+2      	; 0xb46 <main+0x320>
     b44:	44 c0       	rjmp	.+136    	; 0xbce <main+0x3a8>
     b46:	20 e0       	ldi	r18, 0x00	; 0
     b48:	30 e0       	ldi	r19, 0x00	; 0
     b4a:	40 ea       	ldi	r20, 0xA0	; 160
     b4c:	51 e4       	ldi	r21, 0x41	; 65
     b4e:	69 81       	ldd	r22, Y+1	; 0x01
     b50:	7a 81       	ldd	r23, Y+2	; 0x02
     b52:	8b 81       	ldd	r24, Y+3	; 0x03
     b54:	9c 81       	ldd	r25, Y+4	; 0x04
     b56:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
     b5a:	18 16       	cp	r1, r24
     b5c:	64 f0       	brlt	.+24     	; 0xb76 <main+0x350>
     b5e:	20 e0       	ldi	r18, 0x00	; 0
     b60:	30 e0       	ldi	r19, 0x00	; 0
     b62:	40 ea       	ldi	r20, 0xA0	; 160
     b64:	51 e4       	ldi	r21, 0x41	; 65
     b66:	69 85       	ldd	r22, Y+9	; 0x09
     b68:	7a 85       	ldd	r23, Y+10	; 0x0a
     b6a:	8b 85       	ldd	r24, Y+11	; 0x0b
     b6c:	9c 85       	ldd	r25, Y+12	; 0x0c
     b6e:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
     b72:	18 16       	cp	r1, r24
     b74:	64 f5       	brge	.+88     	; 0xbce <main+0x3a8>
  			ColoreLED(BLUE);
     b76:	83 2d       	mov	r24, r3
     b78:	0e 94 bb 12 	call	0x2576	; 0x2576 <ColoreLED>
  			
  			Serial_Send_String("mainiDx\n");
     b7c:	8d e0       	ldi	r24, 0x0D	; 13
     b7e:	92 e0       	ldi	r25, 0x02	; 2
     b80:	0e 94 6d 1e 	call	0x3cda	; 0x3cda <Serial_Send_String>
  			Gira(90);
     b84:	60 e0       	ldi	r22, 0x00	; 0
     b86:	70 e0       	ldi	r23, 0x00	; 0
     b88:	84 eb       	ldi	r24, 0xB4	; 180
     b8a:	92 e4       	ldi	r25, 0x42	; 66
     b8c:	2a d2       	rcall	.+1108   	; 0xfe2 <Gira>
  			contadestre++;
     b8e:	8a 89       	ldd	r24, Y+18	; 0x12
     b90:	9b 89       	ldd	r25, Y+19	; 0x13
     b92:	01 96       	adiw	r24, 0x01	; 1
     b94:	9b 8b       	std	Y+19, r25	; 0x13
     b96:	8a 8b       	std	Y+18, r24	; 0x12
  			if (presenzaMuroSinistra==1){
     b98:	2d 81       	ldd	r18, Y+5	; 0x05
     b9a:	3e 81       	ldd	r19, Y+6	; 0x06
     b9c:	4f 81       	ldd	r20, Y+7	; 0x07
     b9e:	58 85       	ldd	r21, Y+8	; 0x08
     ba0:	c7 01       	movw	r24, r14
     ba2:	b6 01       	movw	r22, r12
     ba4:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
     ba8:	20 e0       	ldi	r18, 0x00	; 0
     baa:	30 e0       	ldi	r19, 0x00	; 0
     bac:	40 e0       	ldi	r20, 0x00	; 0
     bae:	5f e3       	ldi	r21, 0x3F	; 63
     bb0:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
     bb4:	20 e0       	ldi	r18, 0x00	; 0
     bb6:	30 e0       	ldi	r19, 0x00	; 0
     bb8:	40 ea       	ldi	r20, 0xA0	; 160
     bba:	51 e4       	ldi	r21, 0x41	; 65
     bbc:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     bc0:	18 16       	cp	r1, r24
     bc2:	0c f0       	brlt	.+2      	; 0xbc6 <main+0x3a0>
				 allinea=1;
     bc4:	03 2d       	mov	r16, r3
				 presenzaMuroSinistra=0;
  			}
  			ColoreLED(SPENTO);
     bc6:	86 e0       	ldi	r24, 0x06	; 6
     bc8:	0e 94 bb 12 	call	0x2576	; 0x2576 <ColoreLED>
     bcc:	a0 c0       	rjmp	.+320    	; 0xd0e <main+0x4e8>
  		}else if(diAvDx<=10 || diAvSx<=10 || no_avanti==1 || no_destra==1){
     bce:	20 e0       	ldi	r18, 0x00	; 0
     bd0:	30 e0       	ldi	r19, 0x00	; 0
     bd2:	40 e2       	ldi	r20, 0x20	; 32
     bd4:	51 e4       	ldi	r21, 0x41	; 65
     bd6:	c5 01       	movw	r24, r10
     bd8:	b4 01       	movw	r22, r8
     bda:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     bde:	18 16       	cp	r1, r24
     be0:	84 f4       	brge	.+32     	; 0xc02 <main+0x3dc>
     be2:	20 e0       	ldi	r18, 0x00	; 0
     be4:	30 e0       	ldi	r19, 0x00	; 0
     be6:	40 e2       	ldi	r20, 0x20	; 32
     be8:	51 e4       	ldi	r21, 0x41	; 65
     bea:	c3 01       	movw	r24, r6
     bec:	b2 01       	movw	r22, r4
     bee:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     bf2:	18 16       	cp	r1, r24
     bf4:	34 f4       	brge	.+12     	; 0xc02 <main+0x3dc>
     bf6:	91 e0       	ldi	r25, 0x01	; 1
     bf8:	29 16       	cp	r2, r25
     bfa:	19 f0       	breq	.+6      	; 0xc02 <main+0x3dc>
     bfc:	11 30       	cpi	r17, 0x01	; 1
     bfe:	09 f0       	breq	.+2      	; 0xc02 <main+0x3dc>
     c00:	86 c0       	rjmp	.+268    	; 0xd0e <main+0x4e8>
			ColoreLED(YELLOW);
     c02:	82 e0       	ldi	r24, 0x02	; 2
     c04:	0e 94 bb 12 	call	0x2576	; 0x2576 <ColoreLED>
			no_destra=0;
			no_avanti=0;
  			contadestre=0;
  			if((diSxAv>18.0) && (diSxDi>18.0)){
     c08:	20 e0       	ldi	r18, 0x00	; 0
     c0a:	30 e0       	ldi	r19, 0x00	; 0
     c0c:	40 e9       	ldi	r20, 0x90	; 144
     c0e:	51 e4       	ldi	r21, 0x41	; 65
     c10:	c7 01       	movw	r24, r14
     c12:	b6 01       	movw	r22, r12
     c14:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
     c18:	18 16       	cp	r1, r24
     c1a:	7c f5       	brge	.+94     	; 0xc7a <main+0x454>
     c1c:	20 e0       	ldi	r18, 0x00	; 0
     c1e:	30 e0       	ldi	r19, 0x00	; 0
     c20:	40 e9       	ldi	r20, 0x90	; 144
     c22:	51 e4       	ldi	r21, 0x41	; 65
     c24:	6d 81       	ldd	r22, Y+5	; 0x05
     c26:	7e 81       	ldd	r23, Y+6	; 0x06
     c28:	8f 81       	ldd	r24, Y+7	; 0x07
     c2a:	98 85       	ldd	r25, Y+8	; 0x08
     c2c:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
     c30:	18 16       	cp	r1, r24
     c32:	1c f5       	brge	.+70     	; 0xc7a <main+0x454>
 				 Serial_Send_String("gira -90\n");		
     c34:	86 e1       	ldi	r24, 0x16	; 22
     c36:	92 e0       	ldi	r25, 0x02	; 2
     c38:	0e 94 6d 1e 	call	0x3cda	; 0x3cda <Serial_Send_String>
  				 Gira(-90);
     c3c:	60 e0       	ldi	r22, 0x00	; 0
     c3e:	70 e0       	ldi	r23, 0x00	; 0
     c40:	84 eb       	ldi	r24, 0xB4	; 180
     c42:	92 ec       	ldi	r25, 0xC2	; 194
     c44:	ce d1       	rcall	.+924    	; 0xfe2 <Gira>
				 if (presenzaMuroDestra==1){
     c46:	29 85       	ldd	r18, Y+9	; 0x09
     c48:	3a 85       	ldd	r19, Y+10	; 0x0a
     c4a:	4b 85       	ldd	r20, Y+11	; 0x0b
     c4c:	5c 85       	ldd	r21, Y+12	; 0x0c
     c4e:	69 81       	ldd	r22, Y+1	; 0x01
     c50:	7a 81       	ldd	r23, Y+2	; 0x02
     c52:	8b 81       	ldd	r24, Y+3	; 0x03
     c54:	9c 81       	ldd	r25, Y+4	; 0x04
     c56:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
     c5a:	20 e0       	ldi	r18, 0x00	; 0
     c5c:	30 e0       	ldi	r19, 0x00	; 0
     c5e:	40 e0       	ldi	r20, 0x00	; 0
     c60:	5f e3       	ldi	r21, 0x3F	; 63
     c62:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
     c66:	20 e0       	ldi	r18, 0x00	; 0
     c68:	30 e0       	ldi	r19, 0x00	; 0
     c6a:	40 ea       	ldi	r20, 0xA0	; 160
     c6c:	51 e4       	ldi	r21, 0x41	; 65
     c6e:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     c72:	18 16       	cp	r1, r24
     c74:	0c f4       	brge	.+2      	; 0xc78 <main+0x452>
     c76:	41 c0       	rjmp	.+130    	; 0xcfa <main+0x4d4>
     c78:	98 c1       	rjmp	.+816    	; 0xfaa <main+0x784>
					allinea=1;
					presenzaMuroDestra=0;
				}
  			}else{
				if(diDxAv>=diSxAv){	//verifica da che parte è meglio girare
     c7a:	a7 01       	movw	r20, r14
     c7c:	96 01       	movw	r18, r12
     c7e:	69 81       	ldd	r22, Y+1	; 0x01
     c80:	7a 81       	ldd	r23, Y+2	; 0x02
     c82:	8b 81       	ldd	r24, Y+3	; 0x03
     c84:	9c 81       	ldd	r25, Y+4	; 0x04
     c86:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
     c8a:	88 23       	and	r24, r24
     c8c:	8c f0       	brlt	.+34     	; 0xcb0 <main+0x48a>
  					Serial_Send_String("180-Or\n");
     c8e:	80 e2       	ldi	r24, 0x20	; 32
     c90:	92 e0       	ldi	r25, 0x02	; 2
  					Gira(90);
     c92:	0e 94 6d 1e 	call	0x3cda	; 0x3cda <Serial_Send_String>
     c96:	60 e0       	ldi	r22, 0x00	; 0
     c98:	70 e0       	ldi	r23, 0x00	; 0
  					rilevaVittima();
     c9a:	84 eb       	ldi	r24, 0xB4	; 180
     c9c:	92 e4       	ldi	r25, 0x42	; 66
  					Gira(90);
     c9e:	a1 d1       	rcall	.+834    	; 0xfe2 <Gira>
     ca0:	93 d5       	rcall	.+2854   	; 0x17c8 <rilevaVittima>
     ca2:	60 e0       	ldi	r22, 0x00	; 0
     ca4:	70 e0       	ldi	r23, 0x00	; 0
     ca6:	84 eb       	ldi	r24, 0xB4	; 180
  					parallelototale();
     ca8:	92 e4       	ldi	r25, 0x42	; 66
     caa:	9b d1       	rcall	.+822    	; 0xfe2 <Gira>
  				}else{
  					Serial_Send_String("180-AntOr\n");
     cac:	33 d4       	rcall	.+2150   	; 0x1514 <parallelototale>
     cae:	10 c0       	rjmp	.+32     	; 0xcd0 <main+0x4aa>
     cb0:	88 e2       	ldi	r24, 0x28	; 40
  					Gira(-90);
     cb2:	92 e0       	ldi	r25, 0x02	; 2
     cb4:	0e 94 6d 1e 	call	0x3cda	; 0x3cda <Serial_Send_String>
     cb8:	60 e0       	ldi	r22, 0x00	; 0
     cba:	70 e0       	ldi	r23, 0x00	; 0
     cbc:	84 eb       	ldi	r24, 0xB4	; 180
  					rilevaVittima();
     cbe:	92 ec       	ldi	r25, 0xC2	; 194
     cc0:	90 d1       	rcall	.+800    	; 0xfe2 <Gira>
  					Gira(-90);
     cc2:	82 d5       	rcall	.+2820   	; 0x17c8 <rilevaVittima>
     cc4:	60 e0       	ldi	r22, 0x00	; 0
     cc6:	70 e0       	ldi	r23, 0x00	; 0
     cc8:	84 eb       	ldi	r24, 0xB4	; 180
     cca:	92 ec       	ldi	r25, 0xC2	; 194
     ccc:	8a d1       	rcall	.+788    	; 0xfe2 <Gira>
  					parallelototale();
     cce:	22 d4       	rcall	.+2116   	; 0x1514 <parallelototale>
     cd0:	a3 01       	movw	r20, r6
  				}
				if(presenzaMuroAvanti==1){
     cd2:	92 01       	movw	r18, r4
     cd4:	c5 01       	movw	r24, r10
     cd6:	b4 01       	movw	r22, r8
     cd8:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
     cdc:	20 e0       	ldi	r18, 0x00	; 0
     cde:	30 e0       	ldi	r19, 0x00	; 0
     ce0:	40 e0       	ldi	r20, 0x00	; 0
     ce2:	5f e3       	ldi	r21, 0x3F	; 63
     ce4:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
     ce8:	20 e0       	ldi	r18, 0x00	; 0
     cea:	30 e0       	ldi	r19, 0x00	; 0
     cec:	40 ea       	ldi	r20, 0xA0	; 160
     cee:	51 e4       	ldi	r21, 0x41	; 65
     cf0:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     cf4:	18 16       	cp	r1, r24
     cf6:	0c f0       	brlt	.+2      	; 0xcfa <main+0x4d4>
     cf8:	58 c1       	rjmp	.+688    	; 0xfaa <main+0x784>
     cfa:	86 e0       	ldi	r24, 0x06	; 6
					presenzaMuroAvanti=0;
					allinea=1;	
				}
			}
			ColoreLED(SPENTO);
     cfc:	0e 94 bb 12 	call	0x2576	; 0x2576 <ColoreLED>
     d00:	01 30       	cpi	r16, 0x01	; 1
  		}
		  presenzaMuroDestra=0;
		  presenzaMuroSinistra=0;
		  presenzaMuroAvanti=0;
		if(allinea==1){
     d02:	49 f0       	breq	.+18     	; 0xd16 <main+0x4f0>
     d04:	10 e0       	ldi	r17, 0x00	; 0
  			}
  			ColoreLED(SPENTO);
  		}else if(diAvDx<=10 || diAvSx<=10 || no_avanti==1 || no_destra==1){
			ColoreLED(YELLOW);
			no_destra=0;
			no_avanti=0;
     d06:	21 2c       	mov	r2, r1
  			contadestre=0;
     d08:	1b 8a       	std	Y+19, r1	; 0x13
     d0a:	1a 8a       	std	Y+18, r1	; 0x12
     d0c:	38 c1       	rjmp	.+624    	; 0xf7e <main+0x758>
			ColoreLED(SPENTO);
  		}
		  presenzaMuroDestra=0;
		  presenzaMuroSinistra=0;
		  presenzaMuroAvanti=0;
		if(allinea==1){
     d0e:	01 30       	cpi	r16, 0x01	; 1
     d10:	09 f0       	breq	.+2      	; 0xd14 <main+0x4ee>
     d12:	23 c1       	rjmp	.+582    	; 0xf5a <main+0x734>
     d14:	04 c0       	rjmp	.+8      	; 0xd1e <main+0x4f8>
				 presenzaMuroSinistra=0;
  			}
  			ColoreLED(SPENTO);
  		}else if(diAvDx<=10 || diAvSx<=10 || no_avanti==1 || no_destra==1){
			ColoreLED(YELLOW);
			no_destra=0;
     d16:	10 e0       	ldi	r17, 0x00	; 0
			no_avanti=0;
     d18:	21 2c       	mov	r2, r1
  			contadestre=0;
     d1a:	1b 8a       	std	Y+19, r1	; 0x13
     d1c:	1a 8a       	std	Y+18, r1	; 0x12
  		}
		  presenzaMuroDestra=0;
		  presenzaMuroSinistra=0;
		  presenzaMuroAvanti=0;
		if(allinea==1){
			ColoreLED(GREEN);
     d1e:	85 e0       	ldi	r24, 0x05	; 5
     d20:	0e 94 bb 12 	call	0x2576	; 0x2576 <ColoreLED>
			allinea=0;
			parallelototale();
     d24:	f7 d3       	rcall	.+2030   	; 0x1514 <parallelototale>
     d26:	6d ec       	ldi	r22, 0xCD	; 205
			set_giri(-0.8);
     d28:	7c ec       	ldi	r23, 0xCC	; 204
     d2a:	8c e4       	ldi	r24, 0x4C	; 76
     d2c:	9f eb       	ldi	r25, 0xBF	; 191
     d2e:	0e 94 8a 1b 	call	0x3714	; 0x3714 <set_giri>
     d32:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <millis>
			FD=0;
			FS=0;
			millis_allinea=millis();
     d36:	4b 01       	movw	r8, r22
     d38:	5c 01       	movw	r10, r24
     d3a:	d1 2c       	mov	r13, r1
			ColoreLED(GREEN);
			allinea=0;
			parallelototale();
			set_giri(-0.8);
			FD=0;
			FS=0;
     d3c:	00 e0       	ldi	r16, 0x00	; 0
		if(allinea==1){
			ColoreLED(GREEN);
			allinea=0;
			parallelototale();
			set_giri(-0.8);
			FD=0;
     d3e:	0f 2e       	mov	r0, r31
			FS=0;
			millis_allinea=millis();
			tempo_allinea=5000;
     d40:	f8 e8       	ldi	r31, 0x88	; 136
     d42:	ef 2e       	mov	r14, r31
     d44:	f0 2d       	mov	r31, r0
     d46:	0f 2e       	mov	r0, r31
     d48:	f3 e1       	ldi	r31, 0x13	; 19
     d4a:	ff 2e       	mov	r15, r31
     d4c:	f0 2d       	mov	r31, r0
     d4e:	8a 89       	ldd	r24, Y+18	; 0x12
     d50:	9b 89       	ldd	r25, Y+19	; 0x13
     d52:	9a 83       	std	Y+2, r25	; 0x02
     d54:	89 83       	std	Y+1, r24	; 0x01
     d56:	dd 82       	std	Y+5, r13	; 0x05
     d58:	c4 c0       	rjmp	.+392    	; 0xee2 <main+0x6bc>
			while(millis()-millis_allinea<tempo_allinea){
     d5a:	0e 94 7b 1d 	call	0x3af6	; 0x3af6 <finecorsaDietroDx>
				if(finecorsaDietroDx() && FD==0){
     d5e:	88 23       	and	r24, r24
     d60:	99 f0       	breq	.+38     	; 0xd88 <main+0x562>
     d62:	01 11       	cpse	r16, r1
     d64:	11 c0       	rjmp	.+34     	; 0xd88 <main+0x562>
     d66:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <millis>
					FD=1;
					tempo_allinea=1000;
					millis_allinea=millis();
     d6a:	4b 01       	movw	r8, r22
     d6c:	5c 01       	movw	r10, r24
     d6e:	0e 94 9a 1d 	call	0x3b34	; 0x3b34 <finecorsaDietroSx>
				}
				if(finecorsaDietroSx() && FS==0){
     d72:	81 11       	cpse	r24, r1
     d74:	29 c1       	rjmp	.+594    	; 0xfc8 <main+0x7a2>
     d76:	0f 2e       	mov	r0, r31
			millis_allinea=millis();
			tempo_allinea=5000;
			while(millis()-millis_allinea<tempo_allinea){
				if(finecorsaDietroDx() && FD==0){
					FD=1;
					tempo_allinea=1000;
     d78:	f8 ee       	ldi	r31, 0xE8	; 232
     d7a:	ef 2e       	mov	r14, r31
     d7c:	f0 2d       	mov	r31, r0
     d7e:	0f 2e       	mov	r0, r31
     d80:	f3 e0       	ldi	r31, 0x03	; 3
     d82:	ff 2e       	mov	r15, r31
     d84:	f0 2d       	mov	r31, r0
     d86:	1b c0       	rjmp	.+54     	; 0xdbe <main+0x598>
     d88:	0e 94 9a 1d 	call	0x3b34	; 0x3b34 <finecorsaDietroSx>
					millis_allinea=millis();
				}
				if(finecorsaDietroSx() && FS==0){
     d8c:	88 23       	and	r24, r24
     d8e:	a1 f0       	breq	.+40     	; 0xdb8 <main+0x592>
     d90:	9d 81       	ldd	r25, Y+5	; 0x05
     d92:	91 11       	cpse	r25, r1
     d94:	11 c0       	rjmp	.+34     	; 0xdb8 <main+0x592>
     d96:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <millis>
					FS=1;
					tempo_allinea=1000;
					millis_allinea=millis();
     d9a:	4b 01       	movw	r8, r22
     d9c:	5c 01       	movw	r10, r24
     d9e:	01 30       	cpi	r16, 0x01	; 1
				}
				if(FD==1 && FS==1){
     da0:	b9 f0       	breq	.+46     	; 0xdd0 <main+0x5aa>
     da2:	2d 85       	ldd	r18, Y+13	; 0x0d
					FD=1;
					tempo_allinea=1000;
					millis_allinea=millis();
				}
				if(finecorsaDietroSx() && FS==0){
					FS=1;
     da4:	2d 83       	std	Y+5, r18	; 0x05
     da6:	0f 2e       	mov	r0, r31
					tempo_allinea=1000;
     da8:	f8 ee       	ldi	r31, 0xE8	; 232
     daa:	ef 2e       	mov	r14, r31
     dac:	f0 2d       	mov	r31, r0
     dae:	0f 2e       	mov	r0, r31
     db0:	f3 e0       	ldi	r31, 0x03	; 3
     db2:	ff 2e       	mov	r15, r31
     db4:	f0 2d       	mov	r31, r0
     db6:	95 c0       	rjmp	.+298    	; 0xee2 <main+0x6bc>
     db8:	01 30       	cpi	r16, 0x01	; 1
					millis_allinea=millis();
				}
				if(FD==1 && FS==1){
     dba:	09 f0       	breq	.+2      	; 0xdbe <main+0x598>
     dbc:	92 c0       	rjmp	.+292    	; 0xee2 <main+0x6bc>
     dbe:	8d 81       	ldd	r24, Y+5	; 0x05
     dc0:	81 30       	cpi	r24, 0x01	; 1
     dc2:	09 f0       	breq	.+2      	; 0xdc6 <main+0x5a0>
     dc4:	8d c0       	rjmp	.+282    	; 0xee0 <main+0x6ba>
     dc6:	89 81       	ldd	r24, Y+1	; 0x01
     dc8:	9a 81       	ldd	r25, Y+2	; 0x02
     dca:	9b 8b       	std	Y+19, r25	; 0x13
     dcc:	8a 8b       	std	Y+18, r24	; 0x12
     dce:	04 c0       	rjmp	.+8      	; 0xdd8 <main+0x5b2>
     dd0:	89 81       	ldd	r24, Y+1	; 0x01
     dd2:	9a 81       	ldd	r25, Y+2	; 0x02
     dd4:	9b 8b       	std	Y+19, r25	; 0x13
     dd6:	8a 8b       	std	Y+18, r24	; 0x12
					g_temp=readAxis(asseZ);
     dd8:	81 e0       	ldi	r24, 0x01	; 1
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	97 da       	rcall	.-2770   	; 0x30c <readAxis>
     dde:	6b 01       	movw	r12, r22
     de0:	7c 01       	movw	r14, r24
     de2:	20 e0       	ldi	r18, 0x00	; 0
					if(g_temp>315 || g_temp <=45) g_temp1=0;
     de4:	30 e8       	ldi	r19, 0x80	; 128
     de6:	4d e9       	ldi	r20, 0x9D	; 157
     de8:	53 e4       	ldi	r21, 0x43	; 67
     dea:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
     dee:	18 16       	cp	r1, r24
     df0:	0c f4       	brge	.+2      	; 0xdf4 <main+0x5ce>
     df2:	4e c0       	rjmp	.+156    	; 0xe90 <main+0x66a>
     df4:	20 e0       	ldi	r18, 0x00	; 0
     df6:	30 e0       	ldi	r19, 0x00	; 0
     df8:	44 e3       	ldi	r20, 0x34	; 52
     dfa:	52 e4       	ldi	r21, 0x42	; 66
     dfc:	c7 01       	movw	r24, r14
     dfe:	b6 01       	movw	r22, r12
     e00:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     e04:	18 16       	cp	r1, r24
     e06:	0c f0       	brlt	.+2      	; 0xe0a <main+0x5e4>
     e08:	48 c0       	rjmp	.+144    	; 0xe9a <main+0x674>
     e0a:	20 e0       	ldi	r18, 0x00	; 0
					else if(g_temp>45 && g_temp<=135) g_temp1=90;
     e0c:	30 e0       	ldi	r19, 0x00	; 0
     e0e:	44 e3       	ldi	r20, 0x34	; 52
     e10:	52 e4       	ldi	r21, 0x42	; 66
     e12:	c7 01       	movw	r24, r14
     e14:	b6 01       	movw	r22, r12
     e16:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
     e1a:	18 16       	cp	r1, r24
     e1c:	54 f4       	brge	.+20     	; 0xe32 <main+0x60c>
     e1e:	20 e0       	ldi	r18, 0x00	; 0
     e20:	30 e0       	ldi	r19, 0x00	; 0
     e22:	47 e0       	ldi	r20, 0x07	; 7
     e24:	53 e4       	ldi	r21, 0x43	; 67
     e26:	c7 01       	movw	r24, r14
     e28:	b6 01       	movw	r22, r12
     e2a:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     e2e:	18 16       	cp	r1, r24
     e30:	cc f5       	brge	.+114    	; 0xea4 <main+0x67e>
     e32:	20 e0       	ldi	r18, 0x00	; 0
					else if(g_temp>135 && g_temp<=225) g_temp1=180;
     e34:	30 e0       	ldi	r19, 0x00	; 0
     e36:	47 e0       	ldi	r20, 0x07	; 7
     e38:	53 e4       	ldi	r21, 0x43	; 67
     e3a:	c7 01       	movw	r24, r14
     e3c:	b6 01       	movw	r22, r12
     e3e:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
     e42:	18 16       	cp	r1, r24
     e44:	54 f4       	brge	.+20     	; 0xe5a <main+0x634>
     e46:	20 e0       	ldi	r18, 0x00	; 0
     e48:	30 e0       	ldi	r19, 0x00	; 0
     e4a:	41 e6       	ldi	r20, 0x61	; 97
     e4c:	53 e4       	ldi	r21, 0x43	; 67
     e4e:	c7 01       	movw	r24, r14
     e50:	b6 01       	movw	r22, r12
     e52:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     e56:	18 16       	cp	r1, r24
     e58:	64 f5       	brge	.+88     	; 0xeb2 <main+0x68c>
     e5a:	20 e0       	ldi	r18, 0x00	; 0
					else if(g_temp>225 && g_temp<=315) g_temp1=270;
     e5c:	30 e0       	ldi	r19, 0x00	; 0
     e5e:	41 e6       	ldi	r20, 0x61	; 97
     e60:	53 e4       	ldi	r21, 0x43	; 67
     e62:	c7 01       	movw	r24, r14
     e64:	b6 01       	movw	r22, r12
     e66:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
     e6a:	18 16       	cp	r1, r24
     e6c:	44 f5       	brge	.+80     	; 0xebe <main+0x698>
     e6e:	20 e0       	ldi	r18, 0x00	; 0
     e70:	30 e8       	ldi	r19, 0x80	; 128
     e72:	4d e9       	ldi	r20, 0x9D	; 157
     e74:	53 e4       	ldi	r21, 0x43	; 67
     e76:	c7 01       	movw	r24, r14
     e78:	b6 01       	movw	r22, r12
     e7a:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     e7e:	18 16       	cp	r1, r24
     e80:	f4 f0       	brlt	.+60     	; 0xebe <main+0x698>
     e82:	1e 86       	std	Y+14, r1	; 0x0e
     e84:	1f 86       	std	Y+15, r1	; 0x0f
     e86:	97 e8       	ldi	r25, 0x87	; 135
     e88:	98 8b       	std	Y+16, r25	; 0x10
     e8a:	23 e4       	ldi	r18, 0x43	; 67
     e8c:	29 8b       	std	Y+17, r18	; 0x11
     e8e:	17 c0       	rjmp	.+46     	; 0xebe <main+0x698>
     e90:	1e 86       	std	Y+14, r1	; 0x0e
					tempo_allinea=1000;
					millis_allinea=millis();
				}
				if(FD==1 && FS==1){
					g_temp=readAxis(asseZ);
					if(g_temp>315 || g_temp <=45) g_temp1=0;
     e92:	1f 86       	std	Y+15, r1	; 0x0f
     e94:	18 8a       	std	Y+16, r1	; 0x10
     e96:	19 8a       	std	Y+17, r1	; 0x11
     e98:	12 c0       	rjmp	.+36     	; 0xebe <main+0x698>
     e9a:	1e 86       	std	Y+14, r1	; 0x0e
     e9c:	1f 86       	std	Y+15, r1	; 0x0f
     e9e:	18 8a       	std	Y+16, r1	; 0x10
     ea0:	19 8a       	std	Y+17, r1	; 0x11
     ea2:	0d c0       	rjmp	.+26     	; 0xebe <main+0x698>
     ea4:	1e 86       	std	Y+14, r1	; 0x0e
					else if(g_temp>45 && g_temp<=135) g_temp1=90;
     ea6:	1f 86       	std	Y+15, r1	; 0x0f
     ea8:	84 eb       	ldi	r24, 0xB4	; 180
     eaa:	88 8b       	std	Y+16, r24	; 0x10
     eac:	92 e4       	ldi	r25, 0x42	; 66
     eae:	99 8b       	std	Y+17, r25	; 0x11
     eb0:	06 c0       	rjmp	.+12     	; 0xebe <main+0x698>
     eb2:	1e 86       	std	Y+14, r1	; 0x0e
					else if(g_temp>135 && g_temp<=225) g_temp1=180;
     eb4:	1f 86       	std	Y+15, r1	; 0x0f
     eb6:	24 e3       	ldi	r18, 0x34	; 52
     eb8:	28 8b       	std	Y+16, r18	; 0x10
     eba:	83 e4       	ldi	r24, 0x43	; 67
     ebc:	89 8b       	std	Y+17, r24	; 0x11
     ebe:	2e 85       	ldd	r18, Y+14	; 0x0e
					else if(g_temp>225 && g_temp<=315) g_temp1=270;
					correzzione_asseZ=g_temp-g_temp1;
     ec0:	3f 85       	ldd	r19, Y+15	; 0x0f
     ec2:	48 89       	ldd	r20, Y+16	; 0x10
     ec4:	59 89       	ldd	r21, Y+17	; 0x11
     ec6:	c7 01       	movw	r24, r14
     ec8:	b6 01       	movw	r22, r12
     eca:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
     ece:	60 93 a5 02 	sts	0x02A5, r22	; 0x8002a5 <correzzione_asseZ>
     ed2:	70 93 a6 02 	sts	0x02A6, r23	; 0x8002a6 <correzzione_asseZ+0x1>
     ed6:	80 93 a7 02 	sts	0x02A7, r24	; 0x8002a7 <correzzione_asseZ+0x2>
     eda:	90 93 a8 02 	sts	0x02A8, r25	; 0x8002a8 <correzzione_asseZ+0x3>
     ede:	16 c0       	rjmp	.+44     	; 0xf0c <main+0x6e6>
					break;
     ee0:	0d 85       	ldd	r16, Y+13	; 0x0d
     ee2:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <millis>
			set_giri(-0.8);
			FD=0;
			FS=0;
			millis_allinea=millis();
			tempo_allinea=5000;
			while(millis()-millis_allinea<tempo_allinea){
     ee6:	dc 01       	movw	r26, r24
     ee8:	cb 01       	movw	r24, r22
     eea:	88 19       	sub	r24, r8
     eec:	99 09       	sbc	r25, r9
     eee:	aa 09       	sbc	r26, r10
     ef0:	bb 09       	sbc	r27, r11
     ef2:	27 01       	movw	r4, r14
     ef4:	61 2c       	mov	r6, r1
     ef6:	71 2c       	mov	r7, r1
     ef8:	84 15       	cp	r24, r4
     efa:	95 05       	cpc	r25, r5
     efc:	a6 05       	cpc	r26, r6
     efe:	b7 05       	cpc	r27, r7
     f00:	08 f4       	brcc	.+2      	; 0xf04 <main+0x6de>
     f02:	2b cf       	rjmp	.-426    	; 0xd5a <main+0x534>
     f04:	89 81       	ldd	r24, Y+1	; 0x01
     f06:	9a 81       	ldd	r25, Y+2	; 0x02
     f08:	9b 8b       	std	Y+19, r25	; 0x13
     f0a:	8a 8b       	std	Y+18, r24	; 0x12
     f0c:	20 e0       	ldi	r18, 0x00	; 0
					else if(g_temp>225 && g_temp<=315) g_temp1=270;
					correzzione_asseZ=g_temp-g_temp1;
					break;
				}
			}
			dritto(0.5,-1.5);
     f0e:	30 e0       	ldi	r19, 0x00	; 0
     f10:	40 ec       	ldi	r20, 0xC0	; 192
     f12:	5f eb       	ldi	r21, 0xBF	; 191
     f14:	60 e0       	ldi	r22, 0x00	; 0
     f16:	70 e0       	ldi	r23, 0x00	; 0
     f18:	80 e0       	ldi	r24, 0x00	; 0
     f1a:	9f e3       	ldi	r25, 0x3F	; 63
     f1c:	0e 94 c1 1b 	call	0x3782	; 0x3782 <dritto>
			resetta_distanza();
     f20:	0e 94 d9 19 	call	0x33b2	; 0x33b2 <resetta_distanza>
			set_giri(1);
     f24:	60 e0       	ldi	r22, 0x00	; 0
     f26:	70 e0       	ldi	r23, 0x00	; 0
     f28:	80 e8       	ldi	r24, 0x80	; 128
     f2a:	9f e3       	ldi	r25, 0x3F	; 63
     f2c:	0e 94 8a 1b 	call	0x3714	; 0x3714 <set_giri>
			while(distanzaPercorsa()<3){
     f30:	07 c0       	rjmp	.+14     	; 0xf40 <main+0x71a>
				rilevaVittima();
     f32:	4a d4       	rcall	.+2196   	; 0x17c8 <rilevaVittima>
     f34:	60 e0       	ldi	r22, 0x00	; 0
				set_giri(1);
     f36:	70 e0       	ldi	r23, 0x00	; 0
     f38:	80 e8       	ldi	r24, 0x80	; 128
     f3a:	9f e3       	ldi	r25, 0x3F	; 63
     f3c:	0e 94 8a 1b 	call	0x3714	; 0x3714 <set_giri>
     f40:	0e 94 48 1b 	call	0x3690	; 0x3690 <distanzaPercorsa>
				}
			}
			dritto(0.5,-1.5);
			resetta_distanza();
			set_giri(1);
			while(distanzaPercorsa()<3){
     f44:	20 e0       	ldi	r18, 0x00	; 0
     f46:	30 e0       	ldi	r19, 0x00	; 0
     f48:	40 e4       	ldi	r20, 0x40	; 64
     f4a:	50 e4       	ldi	r21, 0x40	; 64
     f4c:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
     f50:	88 23       	and	r24, r24
     f52:	7c f3       	brlt	.-34     	; 0xf32 <main+0x70c>
				rilevaVittima();
				set_giri(1);
			}
			StopMotori();
     f54:	0e 94 a9 1b 	call	0x3752	; 0x3752 <StopMotori>
		}
   		if (contadestre>=ndestre){
     f58:	00 e0       	ldi	r16, 0x00	; 0
     f5a:	8a 89       	ldd	r24, Y+18	; 0x12
     f5c:	9b 89       	ldd	r25, Y+19	; 0x13
   			Avanti30cm(giriAvanti);
     f5e:	05 97       	sbiw	r24, 0x05	; 5
     f60:	74 f0       	brlt	.+28     	; 0xf7e <main+0x758>
     f62:	60 91 3c 03 	lds	r22, 0x033C	; 0x80033c <giriAvanti>
     f66:	70 91 3d 03 	lds	r23, 0x033D	; 0x80033d <giriAvanti+0x1>
     f6a:	80 91 3e 03 	lds	r24, 0x033E	; 0x80033e <giriAvanti+0x2>
     f6e:	90 91 3f 03 	lds	r25, 0x033F	; 0x80033f <giriAvanti+0x3>
     f72:	0e 94 7d 21 	call	0x42fa	; 0x42fa <__fixsfsi>
			contadestre=0;
     f76:	cb 01       	movw	r24, r22
     f78:	c6 d5       	rcall	.+2956   	; 0x1b06 <Avanti30cm>
   		}
		parallelototale();
     f7a:	1b 8a       	std	Y+19, r1	; 0x13
     f7c:	1a 8a       	std	Y+18, r1	; 0x12
  		ColoreLED(SPENTO);
     f7e:	ca d2       	rcall	.+1428   	; 0x1514 <parallelototale>
     f80:	86 e0       	ldi	r24, 0x06	; 6
     f82:	0e 94 bb 12 	call	0x2576	; 0x2576 <ColoreLED>
  		rilevaVittima();
     f86:	20 d4       	rcall	.+2112   	; 0x17c8 <rilevaVittima>
  		Avanti30cm(giriAvanti);
     f88:	60 91 3c 03 	lds	r22, 0x033C	; 0x80033c <giriAvanti>
     f8c:	70 91 3d 03 	lds	r23, 0x033D	; 0x80033d <giriAvanti+0x1>
     f90:	80 91 3e 03 	lds	r24, 0x033E	; 0x80033e <giriAvanti+0x2>
     f94:	90 91 3f 03 	lds	r25, 0x033F	; 0x80033f <giriAvanti+0x3>
     f98:	0e 94 7d 21 	call	0x42fa	; 0x42fa <__fixsfsi>
     f9c:	cb 01       	movw	r24, r22
     f9e:	b3 d5       	rcall	.+2918   	; 0x1b06 <Avanti30cm>
     fa0:	13 d4       	rcall	.+2086   	; 0x17c8 <rilevaVittima>
 		rilevaVittima();
     fa2:	ae cc       	rjmp	.-1700   	; 0x900 <main+0xda>
     fa4:	0e 94 d9 19 	call	0x33b2	; 0x33b2 <resetta_distanza>
			mov=0;
		}
		
		if(mov==1){
			mov=0;
			resetta_distanza();
     fa8:	92 cd       	rjmp	.-1244   	; 0xace <main+0x2a8>
     faa:	86 e0       	ldi	r24, 0x06	; 6
			while(ABS(distanzaPercorsa())<6){
     fac:	0e 94 bb 12 	call	0x2576	; 0x2576 <ColoreLED>
				if(presenzaMuroAvanti==1){
					presenzaMuroAvanti=0;
					allinea=1;	
				}
			}
			ColoreLED(SPENTO);
     fb0:	10 e0       	ldi	r17, 0x00	; 0
     fb2:	21 2c       	mov	r2, r1
				 presenzaMuroSinistra=0;
  			}
  			ColoreLED(SPENTO);
  		}else if(diAvDx<=10 || diAvSx<=10 || no_avanti==1 || no_destra==1){
			ColoreLED(YELLOW);
			no_destra=0;
     fb4:	1b 8a       	std	Y+19, r1	; 0x13
			no_avanti=0;
     fb6:	1a 8a       	std	Y+18, r1	; 0x12
  			contadestre=0;
     fb8:	b2 ce       	rjmp	.-668    	; 0xd1e <main+0x4f8>
     fba:	89 81       	ldd	r24, Y+1	; 0x01
     fbc:	9a 81       	ldd	r25, Y+2	; 0x02
     fbe:	9b 8b       	std	Y+19, r25	; 0x13
     fc0:	8a 8b       	std	Y+18, r24	; 0x12
     fc2:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <millis>
					millis_allinea=millis();
				}
				if(finecorsaDietroSx() && FS==0){
					FS=1;
					tempo_allinea=1000;
					millis_allinea=millis();
     fc6:	08 cf       	rjmp	.-496    	; 0xdd8 <main+0x5b2>
     fc8:	9d 81       	ldd	r25, Y+5	; 0x05
     fca:	99 23       	and	r25, r25
				if(finecorsaDietroDx() && FD==0){
					FD=1;
					tempo_allinea=1000;
					millis_allinea=millis();
				}
				if(finecorsaDietroSx() && FS==0){
     fcc:	b1 f3       	breq	.-20     	; 0xfba <main+0x794>
     fce:	0d 85       	ldd	r16, Y+13	; 0x0d
     fd0:	0f 2e       	mov	r0, r31
			FS=0;
			millis_allinea=millis();
			tempo_allinea=5000;
			while(millis()-millis_allinea<tempo_allinea){
				if(finecorsaDietroDx() && FD==0){
					FD=1;
     fd2:	f8 ee       	ldi	r31, 0xE8	; 232
					tempo_allinea=1000;
     fd4:	ef 2e       	mov	r14, r31
     fd6:	f0 2d       	mov	r31, r0
     fd8:	0f 2e       	mov	r0, r31
     fda:	f3 e0       	ldi	r31, 0x03	; 3
     fdc:	ff 2e       	mov	r15, r31
     fde:	f0 2d       	mov	r31, r0
     fe0:	eb ce       	rjmp	.-554    	; 0xdb8 <main+0x592>

00000fe2 <Gira>:
		 float distanzaCorrente, distanzaAvSX, distanzaAvDX, distanzaDxAv, distanzaSxAv, correzione;
		 int dist_av, inc_av, dist_pr;
		 double integ, derg, propg, err, olderr,/* kpg, kdg=0.002, kig=0.0005,*/ corr, oldc, point, GA, GU, kg;//, limint=0.5;


void Gira(float Gradi){
     fe2:	4f 92       	push	r4
     fe4:	5f 92       	push	r5
     fe6:	6f 92       	push	r6
     fe8:	7f 92       	push	r7
     fea:	8f 92       	push	r8
     fec:	9f 92       	push	r9
     fee:	af 92       	push	r10
     ff0:	bf 92       	push	r11
     ff2:	cf 92       	push	r12
     ff4:	df 92       	push	r13
     ff6:	ef 92       	push	r14
     ff8:	ff 92       	push	r15
     ffa:	cf 93       	push	r28
     ffc:	df 93       	push	r29
     ffe:	00 d0       	rcall	.+0      	; 0x1000 <Gira+0x1e>
    1000:	1f 92       	push	r1
    1002:	cd b7       	in	r28, 0x3d	; 61
    1004:	de b7       	in	r29, 0x3e	; 62
    1006:	4b 01       	movw	r8, r22
    1008:	5c 01       	movw	r10, r24
	set_giri(0);
    100a:	60 e0       	ldi	r22, 0x00	; 0
    100c:	70 e0       	ldi	r23, 0x00	; 0
    100e:	cb 01       	movw	r24, r22
    1010:	0e 94 8a 1b 	call	0x3714	; 0x3714 <set_giri>
	GIniziali=gradiGiroscopio(asseZ);
    1014:	81 e0       	ldi	r24, 0x01	; 1
    1016:	90 e0       	ldi	r25, 0x00	; 0
    1018:	bb d9       	rcall	.-3210   	; 0x390 <gradiGiroscopio>
    101a:	6b 01       	movw	r12, r22
    101c:	7c 01       	movw	r14, r24
    101e:	60 93 89 03 	sts	0x0389, r22	; 0x800389 <GIniziali>
    1022:	70 93 8a 03 	sts	0x038A, r23	; 0x80038a <GIniziali+0x1>
    1026:	80 93 8b 03 	sts	0x038B, r24	; 0x80038b <GIniziali+0x2>
    102a:	90 93 8c 03 	sts	0x038C, r25	; 0x80038c <GIniziali+0x3>
	k=0;
    102e:	10 92 88 03 	sts	0x0388, r1	; 0x800388 <k+0x1>
    1032:	10 92 87 03 	sts	0x0387, r1	; 0x800387 <k>
	GUltimo=GIniziali;
    1036:	60 93 6f 03 	sts	0x036F, r22	; 0x80036f <GUltimo>
    103a:	70 93 70 03 	sts	0x0370, r23	; 0x800370 <GUltimo+0x1>
    103e:	80 93 71 03 	sts	0x0371, r24	; 0x800371 <GUltimo+0x2>
    1042:	90 93 72 03 	sts	0x0372, r25	; 0x800372 <GUltimo+0x3>
	if((int)Gradi%90==0){
    1046:	c5 01       	movw	r24, r10
    1048:	b4 01       	movw	r22, r8
    104a:	0e 94 7d 21 	call	0x42fa	; 0x42fa <__fixsfsi>
    104e:	cb 01       	movw	r24, r22
    1050:	6a e5       	ldi	r22, 0x5A	; 90
    1052:	70 e0       	ldi	r23, 0x00	; 0
    1054:	0e 94 db 22 	call	0x45b6	; 0x45b6 <__divmodhi4>
    1058:	89 2b       	or	r24, r25
    105a:	09 f0       	breq	.+2      	; 0x105e <Gira+0x7c>
    105c:	f5 c0       	rjmp	.+490    	; 0x1248 <Gira+0x266>
		Gr=Gradi-GIniziali;
    105e:	a7 01       	movw	r20, r14
    1060:	96 01       	movw	r18, r12
    1062:	c5 01       	movw	r24, r10
    1064:	b4 01       	movw	r22, r8
    1066:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    106a:	2b 01       	movw	r4, r22
    106c:	3c 01       	movw	r6, r24
    106e:	60 93 77 03 	sts	0x0377, r22	; 0x800377 <Gr>
    1072:	70 93 78 03 	sts	0x0378, r23	; 0x800378 <Gr+0x1>
    1076:	80 93 79 03 	sts	0x0379, r24	; 0x800379 <Gr+0x2>
    107a:	90 93 7a 03 	sts	0x037A, r25	; 0x80037a <Gr+0x3>
		if(GIniziali>45 && GIniziali<=135) Gr+=90;
    107e:	20 e0       	ldi	r18, 0x00	; 0
    1080:	30 e0       	ldi	r19, 0x00	; 0
    1082:	44 e3       	ldi	r20, 0x34	; 52
    1084:	52 e4       	ldi	r21, 0x42	; 66
    1086:	c7 01       	movw	r24, r14
    1088:	b6 01       	movw	r22, r12
    108a:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    108e:	18 16       	cp	r1, r24
    1090:	dc f4       	brge	.+54     	; 0x10c8 <Gira+0xe6>
    1092:	20 e0       	ldi	r18, 0x00	; 0
    1094:	30 e0       	ldi	r19, 0x00	; 0
    1096:	47 e0       	ldi	r20, 0x07	; 7
    1098:	53 e4       	ldi	r21, 0x43	; 67
    109a:	c7 01       	movw	r24, r14
    109c:	b6 01       	movw	r22, r12
    109e:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    10a2:	18 16       	cp	r1, r24
    10a4:	8c f0       	brlt	.+34     	; 0x10c8 <Gira+0xe6>
    10a6:	20 e0       	ldi	r18, 0x00	; 0
    10a8:	30 e0       	ldi	r19, 0x00	; 0
    10aa:	44 eb       	ldi	r20, 0xB4	; 180
    10ac:	52 e4       	ldi	r21, 0x42	; 66
    10ae:	c3 01       	movw	r24, r6
    10b0:	b2 01       	movw	r22, r4
    10b2:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    10b6:	60 93 77 03 	sts	0x0377, r22	; 0x800377 <Gr>
    10ba:	70 93 78 03 	sts	0x0378, r23	; 0x800378 <Gr+0x1>
    10be:	80 93 79 03 	sts	0x0379, r24	; 0x800379 <Gr+0x2>
    10c2:	90 93 7a 03 	sts	0x037A, r25	; 0x80037a <Gr+0x3>
    10c6:	49 c0       	rjmp	.+146    	; 0x115a <Gira+0x178>
		else if(GIniziali>135 && GIniziali<=225) Gr+=180;
    10c8:	20 e0       	ldi	r18, 0x00	; 0
    10ca:	30 e0       	ldi	r19, 0x00	; 0
    10cc:	47 e0       	ldi	r20, 0x07	; 7
    10ce:	53 e4       	ldi	r21, 0x43	; 67
    10d0:	c7 01       	movw	r24, r14
    10d2:	b6 01       	movw	r22, r12
    10d4:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    10d8:	18 16       	cp	r1, r24
    10da:	dc f4       	brge	.+54     	; 0x1112 <Gira+0x130>
    10dc:	20 e0       	ldi	r18, 0x00	; 0
    10de:	30 e0       	ldi	r19, 0x00	; 0
    10e0:	41 e6       	ldi	r20, 0x61	; 97
    10e2:	53 e4       	ldi	r21, 0x43	; 67
    10e4:	c7 01       	movw	r24, r14
    10e6:	b6 01       	movw	r22, r12
    10e8:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    10ec:	18 16       	cp	r1, r24
    10ee:	8c f0       	brlt	.+34     	; 0x1112 <Gira+0x130>
    10f0:	20 e0       	ldi	r18, 0x00	; 0
    10f2:	30 e0       	ldi	r19, 0x00	; 0
    10f4:	44 e3       	ldi	r20, 0x34	; 52
    10f6:	53 e4       	ldi	r21, 0x43	; 67
    10f8:	c3 01       	movw	r24, r6
    10fa:	b2 01       	movw	r22, r4
    10fc:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    1100:	60 93 77 03 	sts	0x0377, r22	; 0x800377 <Gr>
    1104:	70 93 78 03 	sts	0x0378, r23	; 0x800378 <Gr+0x1>
    1108:	80 93 79 03 	sts	0x0379, r24	; 0x800379 <Gr+0x2>
    110c:	90 93 7a 03 	sts	0x037A, r25	; 0x80037a <Gr+0x3>
    1110:	24 c0       	rjmp	.+72     	; 0x115a <Gira+0x178>
		else if(GIniziali>225 && GIniziali<=315) Gr+=270;
    1112:	20 e0       	ldi	r18, 0x00	; 0
    1114:	30 e0       	ldi	r19, 0x00	; 0
    1116:	41 e6       	ldi	r20, 0x61	; 97
    1118:	53 e4       	ldi	r21, 0x43	; 67
    111a:	c7 01       	movw	r24, r14
    111c:	b6 01       	movw	r22, r12
    111e:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    1122:	18 16       	cp	r1, r24
    1124:	d4 f4       	brge	.+52     	; 0x115a <Gira+0x178>
    1126:	20 e0       	ldi	r18, 0x00	; 0
    1128:	30 e8       	ldi	r19, 0x80	; 128
    112a:	4d e9       	ldi	r20, 0x9D	; 157
    112c:	53 e4       	ldi	r21, 0x43	; 67
    112e:	c7 01       	movw	r24, r14
    1130:	b6 01       	movw	r22, r12
    1132:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    1136:	18 16       	cp	r1, r24
    1138:	84 f0       	brlt	.+32     	; 0x115a <Gira+0x178>
    113a:	20 e0       	ldi	r18, 0x00	; 0
    113c:	30 e0       	ldi	r19, 0x00	; 0
    113e:	47 e8       	ldi	r20, 0x87	; 135
    1140:	53 e4       	ldi	r21, 0x43	; 67
    1142:	c3 01       	movw	r24, r6
    1144:	b2 01       	movw	r22, r4
    1146:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    114a:	60 93 77 03 	sts	0x0377, r22	; 0x800377 <Gr>
    114e:	70 93 78 03 	sts	0x0378, r23	; 0x800378 <Gr+0x1>
    1152:	80 93 79 03 	sts	0x0379, r24	; 0x800379 <Gr+0x2>
    1156:	90 93 7a 03 	sts	0x037A, r25	; 0x80037a <Gr+0x3>
		if(Gradi>=0){
    115a:	20 e0       	ldi	r18, 0x00	; 0
    115c:	30 e0       	ldi	r19, 0x00	; 0
    115e:	a9 01       	movw	r20, r18
    1160:	c5 01       	movw	r24, r10
    1162:	b4 01       	movw	r22, r8
    1164:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    1168:	88 23       	and	r24, r24
    116a:	1c f1       	brlt	.+70     	; 0x11b2 <Gira+0x1d0>
			if(Gr<0)Gr+=360;
    116c:	c0 90 77 03 	lds	r12, 0x0377	; 0x800377 <Gr>
    1170:	d0 90 78 03 	lds	r13, 0x0378	; 0x800378 <Gr+0x1>
    1174:	e0 90 79 03 	lds	r14, 0x0379	; 0x800379 <Gr+0x2>
    1178:	f0 90 7a 03 	lds	r15, 0x037A	; 0x80037a <Gr+0x3>
    117c:	20 e0       	ldi	r18, 0x00	; 0
    117e:	30 e0       	ldi	r19, 0x00	; 0
    1180:	a9 01       	movw	r20, r18
    1182:	c7 01       	movw	r24, r14
    1184:	b6 01       	movw	r22, r12
    1186:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    118a:	88 23       	and	r24, r24
    118c:	0c f0       	brlt	.+2      	; 0x1190 <Gira+0x1ae>
    118e:	54 c0       	rjmp	.+168    	; 0x1238 <Gira+0x256>
    1190:	20 e0       	ldi	r18, 0x00	; 0
    1192:	30 e0       	ldi	r19, 0x00	; 0
    1194:	44 eb       	ldi	r20, 0xB4	; 180
    1196:	53 e4       	ldi	r21, 0x43	; 67
    1198:	c7 01       	movw	r24, r14
    119a:	b6 01       	movw	r22, r12
    119c:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    11a0:	60 93 77 03 	sts	0x0377, r22	; 0x800377 <Gr>
    11a4:	70 93 78 03 	sts	0x0378, r23	; 0x800378 <Gr+0x1>
    11a8:	80 93 79 03 	sts	0x0379, r24	; 0x800379 <Gr+0x2>
    11ac:	90 93 7a 03 	sts	0x037A, r25	; 0x80037a <Gr+0x3>
    11b0:	43 c0       	rjmp	.+134    	; 0x1238 <Gira+0x256>
		}else{
			if(Gr<-360)Gr+=360;
    11b2:	c0 90 77 03 	lds	r12, 0x0377	; 0x800377 <Gr>
    11b6:	d0 90 78 03 	lds	r13, 0x0378	; 0x800378 <Gr+0x1>
    11ba:	e0 90 79 03 	lds	r14, 0x0379	; 0x800379 <Gr+0x2>
    11be:	f0 90 7a 03 	lds	r15, 0x037A	; 0x80037a <Gr+0x3>
    11c2:	20 e0       	ldi	r18, 0x00	; 0
    11c4:	30 e0       	ldi	r19, 0x00	; 0
    11c6:	44 eb       	ldi	r20, 0xB4	; 180
    11c8:	53 ec       	ldi	r21, 0xC3	; 195
    11ca:	c7 01       	movw	r24, r14
    11cc:	b6 01       	movw	r22, r12
    11ce:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    11d2:	88 23       	and	r24, r24
    11d4:	84 f4       	brge	.+32     	; 0x11f6 <Gira+0x214>
    11d6:	20 e0       	ldi	r18, 0x00	; 0
    11d8:	30 e0       	ldi	r19, 0x00	; 0
    11da:	44 eb       	ldi	r20, 0xB4	; 180
    11dc:	53 e4       	ldi	r21, 0x43	; 67
    11de:	c7 01       	movw	r24, r14
    11e0:	b6 01       	movw	r22, r12
    11e2:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    11e6:	60 93 77 03 	sts	0x0377, r22	; 0x800377 <Gr>
    11ea:	70 93 78 03 	sts	0x0378, r23	; 0x800378 <Gr+0x1>
    11ee:	80 93 79 03 	sts	0x0379, r24	; 0x800379 <Gr+0x2>
    11f2:	90 93 7a 03 	sts	0x037A, r25	; 0x80037a <Gr+0x3>
			if(Gr>0)Gr-=360;
    11f6:	c0 90 77 03 	lds	r12, 0x0377	; 0x800377 <Gr>
    11fa:	d0 90 78 03 	lds	r13, 0x0378	; 0x800378 <Gr+0x1>
    11fe:	e0 90 79 03 	lds	r14, 0x0379	; 0x800379 <Gr+0x2>
    1202:	f0 90 7a 03 	lds	r15, 0x037A	; 0x80037a <Gr+0x3>
    1206:	20 e0       	ldi	r18, 0x00	; 0
    1208:	30 e0       	ldi	r19, 0x00	; 0
    120a:	a9 01       	movw	r20, r18
    120c:	c7 01       	movw	r24, r14
    120e:	b6 01       	movw	r22, r12
    1210:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    1214:	18 16       	cp	r1, r24
    1216:	84 f4       	brge	.+32     	; 0x1238 <Gira+0x256>
    1218:	20 e0       	ldi	r18, 0x00	; 0
    121a:	30 e0       	ldi	r19, 0x00	; 0
    121c:	44 eb       	ldi	r20, 0xB4	; 180
    121e:	53 e4       	ldi	r21, 0x43	; 67
    1220:	c7 01       	movw	r24, r14
    1222:	b6 01       	movw	r22, r12
    1224:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    1228:	60 93 77 03 	sts	0x0377, r22	; 0x800377 <Gr>
    122c:	70 93 78 03 	sts	0x0378, r23	; 0x800378 <Gr+0x1>
    1230:	80 93 79 03 	sts	0x0379, r24	; 0x800379 <Gr+0x2>
    1234:	90 93 7a 03 	sts	0x037A, r25	; 0x80037a <Gr+0x3>
		}
		Gradi=Gr;
    1238:	80 90 77 03 	lds	r8, 0x0377	; 0x800377 <Gr>
    123c:	90 90 78 03 	lds	r9, 0x0378	; 0x800378 <Gr+0x1>
    1240:	a0 90 79 03 	lds	r10, 0x0379	; 0x800379 <Gr+0x2>
    1244:	b0 90 7a 03 	lds	r11, 0x037A	; 0x80037a <Gr+0x3>
	}
	if(Gradi>0)
    1248:	20 e0       	ldi	r18, 0x00	; 0
    124a:	30 e0       	ldi	r19, 0x00	; 0
    124c:	a9 01       	movw	r20, r18
    124e:	c5 01       	movw	r24, r10
    1250:	b4 01       	movw	r22, r8
    1252:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    1256:	18 16       	cp	r1, r24
    1258:	24 f4       	brge	.+8      	; 0x1262 <Gira+0x280>
		VersoGira=1;
    125a:	81 e0       	ldi	r24, 0x01	; 1
    125c:	80 93 da 03 	sts	0x03DA, r24	; 0x8003da <VersoGira>
    1260:	03 c0       	rjmp	.+6      	; 0x1268 <Gira+0x286>
	else VersoGira =-1;
    1262:	8f ef       	ldi	r24, 0xFF	; 255
    1264:	80 93 da 03 	sts	0x03DA, r24	; 0x8003da <VersoGira>
	set_giri_coppia(giriGiraInizio*VersoGira*-1.0,giriGiraInizio*VersoGira);
    1268:	60 91 da 03 	lds	r22, 0x03DA	; 0x8003da <VersoGira>
    126c:	06 2e       	mov	r0, r22
    126e:	00 0c       	add	r0, r0
    1270:	77 0b       	sbc	r23, r23
    1272:	88 0b       	sbc	r24, r24
    1274:	99 0b       	sbc	r25, r25
    1276:	0e 94 b0 21 	call	0x4360	; 0x4360 <__floatsisf>
    127a:	23 e3       	ldi	r18, 0x33	; 51
    127c:	33 e3       	ldi	r19, 0x33	; 51
    127e:	43 eb       	ldi	r20, 0xB3	; 179
    1280:	5f e3       	ldi	r21, 0x3F	; 63
    1282:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    1286:	9b 01       	movw	r18, r22
    1288:	ac 01       	movw	r20, r24
    128a:	90 58       	subi	r25, 0x80	; 128
    128c:	0e 94 ae 1b 	call	0x375c	; 0x375c <set_giri_coppia>
		GMancanti=Gradi-GAdesso-(k*360)+GIniziali;
		if(Gradi<0)GMancanti*=-1;
 		if((GMancanti<=gradiretta)&&(GMancanti>=-5))
			GiriGira=(GMancanti*angPwmGira)+giriGiraFine;			
 		else
			 GiriGira=giriGiraInizio;
    1290:	0f 2e       	mov	r0, r31
    1292:	f3 e3       	ldi	r31, 0x33	; 51
    1294:	4f 2e       	mov	r4, r31
    1296:	54 2c       	mov	r5, r4
    1298:	f3 eb       	ldi	r31, 0xB3	; 179
    129a:	6f 2e       	mov	r6, r31
    129c:	ff e3       	ldi	r31, 0x3F	; 63
    129e:	7f 2e       	mov	r7, r31
    12a0:	f0 2d       	mov	r31, r0
	if(Gradi>0)
		VersoGira=1;
	else VersoGira =-1;
	set_giri_coppia(giriGiraInizio*VersoGira*-1.0,giriGiraInizio*VersoGira);
	do{
		GAdesso=gradiGiroscopio(asseZ); 
    12a2:	81 e0       	ldi	r24, 0x01	; 1
    12a4:	90 e0       	ldi	r25, 0x00	; 0
    12a6:	74 d8       	rcall	.-3864   	; 0x390 <gradiGiroscopio>
    12a8:	6b 01       	movw	r12, r22
    12aa:	7c 01       	movw	r14, r24
    12ac:	60 93 eb 03 	sts	0x03EB, r22	; 0x8003eb <GAdesso>
    12b0:	70 93 ec 03 	sts	0x03EC, r23	; 0x8003ec <GAdesso+0x1>
    12b4:	80 93 ed 03 	sts	0x03ED, r24	; 0x8003ed <GAdesso+0x2>
    12b8:	90 93 ee 03 	sts	0x03EE, r25	; 0x8003ee <GAdesso+0x3>
		if((GAdesso-GUltimo)>180) k--;
    12bc:	20 91 6f 03 	lds	r18, 0x036F	; 0x80036f <GUltimo>
    12c0:	30 91 70 03 	lds	r19, 0x0370	; 0x800370 <GUltimo+0x1>
    12c4:	40 91 71 03 	lds	r20, 0x0371	; 0x800371 <GUltimo+0x2>
    12c8:	50 91 72 03 	lds	r21, 0x0372	; 0x800372 <GUltimo+0x3>
    12cc:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    12d0:	69 83       	std	Y+1, r22	; 0x01
    12d2:	7a 83       	std	Y+2, r23	; 0x02
    12d4:	8b 83       	std	Y+3, r24	; 0x03
    12d6:	9c 83       	std	Y+4, r25	; 0x04
    12d8:	20 e0       	ldi	r18, 0x00	; 0
    12da:	30 e0       	ldi	r19, 0x00	; 0
    12dc:	44 e3       	ldi	r20, 0x34	; 52
    12de:	53 e4       	ldi	r21, 0x43	; 67
    12e0:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    12e4:	18 16       	cp	r1, r24
    12e6:	54 f4       	brge	.+20     	; 0x12fc <Gira+0x31a>
    12e8:	80 91 87 03 	lds	r24, 0x0387	; 0x800387 <k>
    12ec:	90 91 88 03 	lds	r25, 0x0388	; 0x800388 <k+0x1>
    12f0:	01 97       	sbiw	r24, 0x01	; 1
    12f2:	90 93 88 03 	sts	0x0388, r25	; 0x800388 <k+0x1>
    12f6:	80 93 87 03 	sts	0x0387, r24	; 0x800387 <k>
    12fa:	15 c0       	rjmp	.+42     	; 0x1326 <Gira+0x344>
		else if((GAdesso-GUltimo)<-180) k++;
    12fc:	20 e0       	ldi	r18, 0x00	; 0
    12fe:	30 e0       	ldi	r19, 0x00	; 0
    1300:	44 e3       	ldi	r20, 0x34	; 52
    1302:	53 ec       	ldi	r21, 0xC3	; 195
    1304:	69 81       	ldd	r22, Y+1	; 0x01
    1306:	7a 81       	ldd	r23, Y+2	; 0x02
    1308:	8b 81       	ldd	r24, Y+3	; 0x03
    130a:	9c 81       	ldd	r25, Y+4	; 0x04
    130c:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    1310:	88 23       	and	r24, r24
    1312:	4c f4       	brge	.+18     	; 0x1326 <Gira+0x344>
    1314:	80 91 87 03 	lds	r24, 0x0387	; 0x800387 <k>
    1318:	90 91 88 03 	lds	r25, 0x0388	; 0x800388 <k+0x1>
    131c:	01 96       	adiw	r24, 0x01	; 1
    131e:	90 93 88 03 	sts	0x0388, r25	; 0x800388 <k+0x1>
    1322:	80 93 87 03 	sts	0x0387, r24	; 0x800387 <k>
		GMancanti=Gradi-GAdesso-(k*360)+GIniziali;
    1326:	a7 01       	movw	r20, r14
    1328:	96 01       	movw	r18, r12
    132a:	c5 01       	movw	r24, r10
    132c:	b4 01       	movw	r22, r8
    132e:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    1332:	6b 01       	movw	r12, r22
    1334:	7c 01       	movw	r14, r24
    1336:	80 91 87 03 	lds	r24, 0x0387	; 0x800387 <k>
    133a:	90 91 88 03 	lds	r25, 0x0388	; 0x800388 <k+0x1>
    133e:	28 e6       	ldi	r18, 0x68	; 104
    1340:	31 e0       	ldi	r19, 0x01	; 1
    1342:	82 9f       	mul	r24, r18
    1344:	b0 01       	movw	r22, r0
    1346:	83 9f       	mul	r24, r19
    1348:	70 0d       	add	r23, r0
    134a:	92 9f       	mul	r25, r18
    134c:	70 0d       	add	r23, r0
    134e:	11 24       	eor	r1, r1
    1350:	07 2e       	mov	r0, r23
    1352:	00 0c       	add	r0, r0
    1354:	88 0b       	sbc	r24, r24
    1356:	99 0b       	sbc	r25, r25
    1358:	0e 94 b0 21 	call	0x4360	; 0x4360 <__floatsisf>
    135c:	9b 01       	movw	r18, r22
    135e:	ac 01       	movw	r20, r24
    1360:	c7 01       	movw	r24, r14
    1362:	b6 01       	movw	r22, r12
    1364:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    1368:	20 91 89 03 	lds	r18, 0x0389	; 0x800389 <GIniziali>
    136c:	30 91 8a 03 	lds	r19, 0x038A	; 0x80038a <GIniziali+0x1>
    1370:	40 91 8b 03 	lds	r20, 0x038B	; 0x80038b <GIniziali+0x2>
    1374:	50 91 8c 03 	lds	r21, 0x038C	; 0x80038c <GIniziali+0x3>
    1378:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    137c:	6b 01       	movw	r12, r22
    137e:	7c 01       	movw	r14, r24
		if(Gradi<0)GMancanti*=-1;
    1380:	20 e0       	ldi	r18, 0x00	; 0
    1382:	30 e0       	ldi	r19, 0x00	; 0
    1384:	a9 01       	movw	r20, r18
    1386:	c5 01       	movw	r24, r10
    1388:	b4 01       	movw	r22, r8
    138a:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    138e:	88 23       	and	r24, r24
    1390:	4c f0       	brlt	.+18     	; 0x13a4 <Gira+0x3c2>
	set_giri_coppia(giriGiraInizio*VersoGira*-1.0,giriGiraInizio*VersoGira);
	do{
		GAdesso=gradiGiroscopio(asseZ); 
		if((GAdesso-GUltimo)>180) k--;
		else if((GAdesso-GUltimo)<-180) k++;
		GMancanti=Gradi-GAdesso-(k*360)+GIniziali;
    1392:	c0 92 d2 03 	sts	0x03D2, r12	; 0x8003d2 <GMancanti>
    1396:	d0 92 d3 03 	sts	0x03D3, r13	; 0x8003d3 <GMancanti+0x1>
    139a:	e0 92 d4 03 	sts	0x03D4, r14	; 0x8003d4 <GMancanti+0x2>
    139e:	f0 92 d5 03 	sts	0x03D5, r15	; 0x8003d5 <GMancanti+0x3>
    13a2:	0c c0       	rjmp	.+24     	; 0x13bc <Gira+0x3da>
		if(Gradi<0)GMancanti*=-1;
    13a4:	f7 fa       	bst	r15, 7
    13a6:	f0 94       	com	r15
    13a8:	f7 f8       	bld	r15, 7
    13aa:	f0 94       	com	r15
    13ac:	c0 92 d2 03 	sts	0x03D2, r12	; 0x8003d2 <GMancanti>
    13b0:	d0 92 d3 03 	sts	0x03D3, r13	; 0x8003d3 <GMancanti+0x1>
    13b4:	e0 92 d4 03 	sts	0x03D4, r14	; 0x8003d4 <GMancanti+0x2>
    13b8:	f0 92 d5 03 	sts	0x03D5, r15	; 0x8003d5 <GMancanti+0x3>
 		if((GMancanti<=gradiretta)&&(GMancanti>=-5))
    13bc:	c0 90 d2 03 	lds	r12, 0x03D2	; 0x8003d2 <GMancanti>
    13c0:	d0 90 d3 03 	lds	r13, 0x03D3	; 0x8003d3 <GMancanti+0x1>
    13c4:	e0 90 d4 03 	lds	r14, 0x03D4	; 0x8003d4 <GMancanti+0x2>
    13c8:	f0 90 d5 03 	lds	r15, 0x03D5	; 0x8003d5 <GMancanti+0x3>
    13cc:	20 e0       	ldi	r18, 0x00	; 0
    13ce:	30 e0       	ldi	r19, 0x00	; 0
    13d0:	40 ef       	ldi	r20, 0xF0	; 240
    13d2:	51 e4       	ldi	r21, 0x41	; 65
    13d4:	c7 01       	movw	r24, r14
    13d6:	b6 01       	movw	r22, r12
    13d8:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    13dc:	18 16       	cp	r1, r24
    13de:	3c f1       	brlt	.+78     	; 0x142e <Gira+0x44c>
    13e0:	20 e0       	ldi	r18, 0x00	; 0
    13e2:	30 e0       	ldi	r19, 0x00	; 0
    13e4:	40 ea       	ldi	r20, 0xA0	; 160
    13e6:	50 ec       	ldi	r21, 0xC0	; 192
    13e8:	c7 01       	movw	r24, r14
    13ea:	b6 01       	movw	r22, r12
    13ec:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    13f0:	88 23       	and	r24, r24
    13f2:	ec f0       	brlt	.+58     	; 0x142e <Gira+0x44c>
			GiriGira=(GMancanti*angPwmGira)+giriGiraFine;			
    13f4:	2c ec       	ldi	r18, 0xCC	; 204
    13f6:	3c ec       	ldi	r19, 0xCC	; 204
    13f8:	4c e8       	ldi	r20, 0x8C	; 140
    13fa:	5f e3       	ldi	r21, 0x3F	; 63
    13fc:	c7 01       	movw	r24, r14
    13fe:	b6 01       	movw	r22, r12
    1400:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    1404:	20 e0       	ldi	r18, 0x00	; 0
    1406:	30 e0       	ldi	r19, 0x00	; 0
    1408:	40 ef       	ldi	r20, 0xF0	; 240
    140a:	51 e4       	ldi	r21, 0x41	; 65
    140c:	0e 94 15 21 	call	0x422a	; 0x422a <__divsf3>
    1410:	2a e9       	ldi	r18, 0x9A	; 154
    1412:	39 e9       	ldi	r19, 0x99	; 153
    1414:	49 e9       	ldi	r20, 0x99	; 153
    1416:	5e e3       	ldi	r21, 0x3E	; 62
    1418:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    141c:	60 93 b4 03 	sts	0x03B4, r22	; 0x8003b4 <GiriGira>
    1420:	70 93 b5 03 	sts	0x03B5, r23	; 0x8003b5 <GiriGira+0x1>
    1424:	80 93 b6 03 	sts	0x03B6, r24	; 0x8003b6 <GiriGira+0x2>
    1428:	90 93 b7 03 	sts	0x03B7, r25	; 0x8003b7 <GiriGira+0x3>
    142c:	08 c0       	rjmp	.+16     	; 0x143e <Gira+0x45c>
 		else
			 GiriGira=giriGiraInizio;
    142e:	40 92 b4 03 	sts	0x03B4, r4	; 0x8003b4 <GiriGira>
    1432:	50 92 b5 03 	sts	0x03B5, r5	; 0x8003b5 <GiriGira+0x1>
    1436:	60 92 b6 03 	sts	0x03B6, r6	; 0x8003b6 <GiriGira+0x2>
    143a:	70 92 b7 03 	sts	0x03B7, r7	; 0x8003b7 <GiriGira+0x3>
		set_giri_coppia(GiriGira*VersoGira*-1.0,GiriGira*VersoGira);
    143e:	60 91 da 03 	lds	r22, 0x03DA	; 0x8003da <VersoGira>
    1442:	06 2e       	mov	r0, r22
    1444:	00 0c       	add	r0, r0
    1446:	77 0b       	sbc	r23, r23
    1448:	88 0b       	sbc	r24, r24
    144a:	99 0b       	sbc	r25, r25
    144c:	0e 94 b0 21 	call	0x4360	; 0x4360 <__floatsisf>
    1450:	20 91 b4 03 	lds	r18, 0x03B4	; 0x8003b4 <GiriGira>
    1454:	30 91 b5 03 	lds	r19, 0x03B5	; 0x8003b5 <GiriGira+0x1>
    1458:	40 91 b6 03 	lds	r20, 0x03B6	; 0x8003b6 <GiriGira+0x2>
    145c:	50 91 b7 03 	lds	r21, 0x03B7	; 0x8003b7 <GiriGira+0x3>
    1460:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    1464:	9b 01       	movw	r18, r22
    1466:	ac 01       	movw	r20, r24
    1468:	90 58       	subi	r25, 0x80	; 128
    146a:	0e 94 ae 1b 	call	0x375c	; 0x375c <set_giri_coppia>
		GUltimo=GAdesso;
    146e:	80 91 eb 03 	lds	r24, 0x03EB	; 0x8003eb <GAdesso>
    1472:	90 91 ec 03 	lds	r25, 0x03EC	; 0x8003ec <GAdesso+0x1>
    1476:	a0 91 ed 03 	lds	r26, 0x03ED	; 0x8003ed <GAdesso+0x2>
    147a:	b0 91 ee 03 	lds	r27, 0x03EE	; 0x8003ee <GAdesso+0x3>
    147e:	80 93 6f 03 	sts	0x036F, r24	; 0x80036f <GUltimo>
    1482:	90 93 70 03 	sts	0x0370, r25	; 0x800370 <GUltimo+0x1>
    1486:	a0 93 71 03 	sts	0x0371, r26	; 0x800371 <GUltimo+0x2>
    148a:	b0 93 72 03 	sts	0x0372, r27	; 0x800372 <GUltimo+0x3>
	}while(GMancanti>0);
    148e:	20 e0       	ldi	r18, 0x00	; 0
    1490:	30 e0       	ldi	r19, 0x00	; 0
    1492:	a9 01       	movw	r20, r18
    1494:	60 91 d2 03 	lds	r22, 0x03D2	; 0x8003d2 <GMancanti>
    1498:	70 91 d3 03 	lds	r23, 0x03D3	; 0x8003d3 <GMancanti+0x1>
    149c:	80 91 d4 03 	lds	r24, 0x03D4	; 0x8003d4 <GMancanti+0x2>
    14a0:	90 91 d5 03 	lds	r25, 0x03D5	; 0x8003d5 <GMancanti+0x3>
    14a4:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    14a8:	18 16       	cp	r1, r24
    14aa:	0c f4       	brge	.+2      	; 0x14ae <Gira+0x4cc>
    14ac:	fa ce       	rjmp	.-524    	; 0x12a2 <Gira+0x2c0>
	StopMotori();
    14ae:	0e 94 a9 1b 	call	0x3752	; 0x3752 <StopMotori>
	if((90==ABS(Gradi)||(Gradi==180)))
    14b2:	c5 01       	movw	r24, r10
    14b4:	b4 01       	movw	r22, r8
    14b6:	0e 94 33 1e 	call	0x3c66	; 0x3c66 <ABS>
    14ba:	20 e0       	ldi	r18, 0x00	; 0
    14bc:	30 e0       	ldi	r19, 0x00	; 0
    14be:	44 eb       	ldi	r20, 0xB4	; 180
    14c0:	52 e4       	ldi	r21, 0x42	; 66
    14c2:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    14c6:	88 23       	and	r24, r24
    14c8:	51 f0       	breq	.+20     	; 0x14de <Gira+0x4fc>
    14ca:	20 e0       	ldi	r18, 0x00	; 0
    14cc:	30 e0       	ldi	r19, 0x00	; 0
    14ce:	44 e3       	ldi	r20, 0x34	; 52
    14d0:	53 e4       	ldi	r21, 0x43	; 67
    14d2:	c5 01       	movw	r24, r10
    14d4:	b4 01       	movw	r22, r8
    14d6:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    14da:	81 11       	cpse	r24, r1
    14dc:	08 c0       	rjmp	.+16     	; 0x14ee <Gira+0x50c>
		ultimoGira=Gradi;
    14de:	c5 01       	movw	r24, r10
    14e0:	b4 01       	movw	r22, r8
    14e2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <__fixsfsi>
    14e6:	70 93 1b 03 	sts	0x031B, r23	; 0x80031b <ultimoGira+0x1>
    14ea:	60 93 1a 03 	sts	0x031A, r22	; 0x80031a <ultimoGira>
}
    14ee:	0f 90       	pop	r0
    14f0:	0f 90       	pop	r0
    14f2:	0f 90       	pop	r0
    14f4:	0f 90       	pop	r0
    14f6:	df 91       	pop	r29
    14f8:	cf 91       	pop	r28
    14fa:	ff 90       	pop	r15
    14fc:	ef 90       	pop	r14
    14fe:	df 90       	pop	r13
    1500:	cf 90       	pop	r12
    1502:	bf 90       	pop	r11
    1504:	af 90       	pop	r10
    1506:	9f 90       	pop	r9
    1508:	8f 90       	pop	r8
    150a:	7f 90       	pop	r7
    150c:	6f 90       	pop	r6
    150e:	5f 90       	pop	r5
    1510:	4f 90       	pop	r4
    1512:	08 95       	ret

00001514 <parallelototale>:


void parallelototale(){
    1514:	8f 92       	push	r8
    1516:	9f 92       	push	r9
    1518:	af 92       	push	r10
    151a:	bf 92       	push	r11
    151c:	cf 92       	push	r12
    151e:	df 92       	push	r13
    1520:	ef 92       	push	r14
    1522:	ff 92       	push	r15
    1524:	cf 93       	push	r28
    1526:	df 93       	push	r29
	//Serial_Send_String("Parallelo \n");
	ColoreLED(WHITE);
    1528:	83 e0       	ldi	r24, 0x03	; 3
    152a:	0e 94 bb 12 	call	0x2576	; 0x2576 <ColoreLED>
	for (int i=-1;i<=1;i+=2)
    152e:	cf ef       	ldi	r28, 0xFF	; 255
    1530:	df ef       	ldi	r29, 0xFF	; 255
	{
		set_giri(0);
    1532:	60 e0       	ldi	r22, 0x00	; 0
    1534:	70 e0       	ldi	r23, 0x00	; 0
    1536:	cb 01       	movw	r24, r22
    1538:	0e 94 8a 1b 	call	0x3714	; 0x3714 <set_giri>
		if(i==1){
    153c:	c1 30       	cpi	r28, 0x01	; 1
    153e:	d1 05       	cpc	r29, r1
    1540:	b9 f4       	brne	.+46     	; 0x1570 <parallelototale+0x5c>
			DiAv=DistanzaIR(DestraAvanti);
    1542:	82 e0       	ldi	r24, 0x02	; 2
    1544:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    1548:	60 93 c0 03 	sts	0x03C0, r22	; 0x8003c0 <DiAv>
    154c:	70 93 c1 03 	sts	0x03C1, r23	; 0x8003c1 <DiAv+0x1>
    1550:	80 93 c2 03 	sts	0x03C2, r24	; 0x8003c2 <DiAv+0x2>
    1554:	90 93 c3 03 	sts	0x03C3, r25	; 0x8003c3 <DiAv+0x3>
			DiDi=DistanzaIR(DestraDietro);
    1558:	83 e0       	ldi	r24, 0x03	; 3
    155a:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    155e:	60 93 8d 03 	sts	0x038D, r22	; 0x80038d <DiDi>
    1562:	70 93 8e 03 	sts	0x038E, r23	; 0x80038e <DiDi+0x1>
    1566:	80 93 8f 03 	sts	0x038F, r24	; 0x80038f <DiDi+0x2>
    156a:	90 93 90 03 	sts	0x0390, r25	; 0x800390 <DiDi+0x3>
    156e:	16 c0       	rjmp	.+44     	; 0x159c <parallelototale+0x88>
		}else{
			DiAv=DistanzaIR(SinistraAvanti);
    1570:	84 e0       	ldi	r24, 0x04	; 4
    1572:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    1576:	60 93 c0 03 	sts	0x03C0, r22	; 0x8003c0 <DiAv>
    157a:	70 93 c1 03 	sts	0x03C1, r23	; 0x8003c1 <DiAv+0x1>
    157e:	80 93 c2 03 	sts	0x03C2, r24	; 0x8003c2 <DiAv+0x2>
    1582:	90 93 c3 03 	sts	0x03C3, r25	; 0x8003c3 <DiAv+0x3>
			DiDi=DistanzaIR(SinistraDietro);
    1586:	85 e0       	ldi	r24, 0x05	; 5
    1588:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    158c:	60 93 8d 03 	sts	0x038D, r22	; 0x80038d <DiDi>
    1590:	70 93 8e 03 	sts	0x038E, r23	; 0x80038e <DiDi+0x1>
    1594:	80 93 8f 03 	sts	0x038F, r24	; 0x80038f <DiDi+0x2>
    1598:	90 93 90 03 	sts	0x0390, r25	; 0x800390 <DiDi+0x3>
		}
		differenza = (DiAv-DiDi)*i;
    159c:	be 01       	movw	r22, r28
    159e:	0d 2e       	mov	r0, r29
    15a0:	00 0c       	add	r0, r0
    15a2:	88 0b       	sbc	r24, r24
    15a4:	99 0b       	sbc	r25, r25
    15a6:	0e 94 b0 21 	call	0x4360	; 0x4360 <__floatsisf>
    15aa:	6b 01       	movw	r12, r22
    15ac:	7c 01       	movw	r14, r24
    15ae:	20 91 8d 03 	lds	r18, 0x038D	; 0x80038d <DiDi>
    15b2:	30 91 8e 03 	lds	r19, 0x038E	; 0x80038e <DiDi+0x1>
    15b6:	40 91 8f 03 	lds	r20, 0x038F	; 0x80038f <DiDi+0x2>
    15ba:	50 91 90 03 	lds	r21, 0x0390	; 0x800390 <DiDi+0x3>
    15be:	60 91 c0 03 	lds	r22, 0x03C0	; 0x8003c0 <DiAv>
    15c2:	70 91 c1 03 	lds	r23, 0x03C1	; 0x8003c1 <DiAv+0x1>
    15c6:	80 91 c2 03 	lds	r24, 0x03C2	; 0x8003c2 <DiAv+0x2>
    15ca:	90 91 c3 03 	lds	r25, 0x03C3	; 0x8003c3 <DiAv+0x3>
    15ce:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    15d2:	a7 01       	movw	r20, r14
    15d4:	96 01       	movw	r18, r12
    15d6:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    15da:	60 93 9e 03 	sts	0x039E, r22	; 0x80039e <differenza>
    15de:	70 93 9f 03 	sts	0x039F, r23	; 0x80039f <differenza+0x1>
    15e2:	80 93 a0 03 	sts	0x03A0, r24	; 0x8003a0 <differenza+0x2>
    15e6:	90 93 a1 03 	sts	0x03A1, r25	; 0x8003a1 <differenza+0x3>
		while(!((ABS(differenza)<tolleranzaParallelo)||(ABS(differenza)>tolleranzaMassimaParallelo)||(((DiAv+DiDi)/2)>distanzaMinimaParalleo)))
    15ea:	92 c0       	rjmp	.+292    	; 0x1710 <parallelototale+0x1fc>
		{	
		    if(i==1){
    15ec:	c1 30       	cpi	r28, 0x01	; 1
    15ee:	d1 05       	cpc	r29, r1
    15f0:	e9 f4       	brne	.+58     	; 0x162c <parallelototale+0x118>
			    DiAv=DistanzaIR(DestraAvanti);
    15f2:	82 e0       	ldi	r24, 0x02	; 2
    15f4:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    15f8:	60 93 c0 03 	sts	0x03C0, r22	; 0x8003c0 <DiAv>
    15fc:	70 93 c1 03 	sts	0x03C1, r23	; 0x8003c1 <DiAv+0x1>
    1600:	80 93 c2 03 	sts	0x03C2, r24	; 0x8003c2 <DiAv+0x2>
    1604:	90 93 c3 03 	sts	0x03C3, r25	; 0x8003c3 <DiAv+0x3>
			    DiDi=DistanzaIR(DestraDietro)-0.3;
    1608:	83 e0       	ldi	r24, 0x03	; 3
    160a:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    160e:	2a e9       	ldi	r18, 0x9A	; 154
    1610:	39 e9       	ldi	r19, 0x99	; 153
    1612:	49 e9       	ldi	r20, 0x99	; 153
    1614:	5e e3       	ldi	r21, 0x3E	; 62
    1616:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    161a:	60 93 8d 03 	sts	0x038D, r22	; 0x80038d <DiDi>
    161e:	70 93 8e 03 	sts	0x038E, r23	; 0x80038e <DiDi+0x1>
    1622:	80 93 8f 03 	sts	0x038F, r24	; 0x80038f <DiDi+0x2>
    1626:	90 93 90 03 	sts	0x0390, r25	; 0x800390 <DiDi+0x3>
    162a:	1c c0       	rjmp	.+56     	; 0x1664 <parallelototale+0x150>
		    }else{
			    DiAv=DistanzaIR(SinistraAvanti);
    162c:	84 e0       	ldi	r24, 0x04	; 4
    162e:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    1632:	60 93 c0 03 	sts	0x03C0, r22	; 0x8003c0 <DiAv>
    1636:	70 93 c1 03 	sts	0x03C1, r23	; 0x8003c1 <DiAv+0x1>
    163a:	80 93 c2 03 	sts	0x03C2, r24	; 0x8003c2 <DiAv+0x2>
    163e:	90 93 c3 03 	sts	0x03C3, r25	; 0x8003c3 <DiAv+0x3>
			    DiDi=DistanzaIR(SinistraDietro)-0.3;
    1642:	85 e0       	ldi	r24, 0x05	; 5
    1644:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    1648:	2a e9       	ldi	r18, 0x9A	; 154
    164a:	39 e9       	ldi	r19, 0x99	; 153
    164c:	49 e9       	ldi	r20, 0x99	; 153
    164e:	5e e3       	ldi	r21, 0x3E	; 62
    1650:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    1654:	60 93 8d 03 	sts	0x038D, r22	; 0x80038d <DiDi>
    1658:	70 93 8e 03 	sts	0x038E, r23	; 0x80038e <DiDi+0x1>
    165c:	80 93 8f 03 	sts	0x038F, r24	; 0x80038f <DiDi+0x2>
    1660:	90 93 90 03 	sts	0x0390, r25	; 0x800390 <DiDi+0x3>
		    }
		    differenza = (DiAv-DiDi)*i ;
    1664:	20 91 8d 03 	lds	r18, 0x038D	; 0x80038d <DiDi>
    1668:	30 91 8e 03 	lds	r19, 0x038E	; 0x80038e <DiDi+0x1>
    166c:	40 91 8f 03 	lds	r20, 0x038F	; 0x80038f <DiDi+0x2>
    1670:	50 91 90 03 	lds	r21, 0x0390	; 0x800390 <DiDi+0x3>
    1674:	60 91 c0 03 	lds	r22, 0x03C0	; 0x8003c0 <DiAv>
    1678:	70 91 c1 03 	lds	r23, 0x03C1	; 0x8003c1 <DiAv+0x1>
    167c:	80 91 c2 03 	lds	r24, 0x03C2	; 0x8003c2 <DiAv+0x2>
    1680:	90 91 c3 03 	lds	r25, 0x03C3	; 0x8003c3 <DiAv+0x3>
    1684:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    1688:	a7 01       	movw	r20, r14
    168a:	96 01       	movw	r18, r12
    168c:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    1690:	60 93 9e 03 	sts	0x039E, r22	; 0x80039e <differenza>
    1694:	70 93 9f 03 	sts	0x039F, r23	; 0x80039f <differenza+0x1>
    1698:	80 93 a0 03 	sts	0x03A0, r24	; 0x8003a0 <differenza+0x2>
    169c:	90 93 a1 03 	sts	0x03A1, r25	; 0x8003a1 <differenza+0x3>
			temp=differenza*pwmParallelo+0.2;
    16a0:	20 e0       	ldi	r18, 0x00	; 0
    16a2:	30 e0       	ldi	r19, 0x00	; 0
    16a4:	40 ec       	ldi	r20, 0xC0	; 192
    16a6:	5f e3       	ldi	r21, 0x3F	; 63
    16a8:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    16ac:	2d ec       	ldi	r18, 0xCD	; 205
    16ae:	3c ec       	ldi	r19, 0xCC	; 204
    16b0:	4c e4       	ldi	r20, 0x4C	; 76
    16b2:	5e e3       	ldi	r21, 0x3E	; 62
    16b4:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    16b8:	4b 01       	movw	r8, r22
    16ba:	5c 01       	movw	r10, r24
			if(temp>max_giri)temp=max_giri;
    16bc:	20 e0       	ldi	r18, 0x00	; 0
    16be:	30 e0       	ldi	r19, 0x00	; 0
    16c0:	40 e2       	ldi	r20, 0x20	; 32
    16c2:	50 e4       	ldi	r21, 0x40	; 64
    16c4:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    16c8:	18 16       	cp	r1, r24
    16ca:	4c f0       	brlt	.+18     	; 0x16de <parallelototale+0x1ca>
		    }else{
			    DiAv=DistanzaIR(SinistraAvanti);
			    DiDi=DistanzaIR(SinistraDietro)-0.3;
		    }
		    differenza = (DiAv-DiDi)*i ;
			temp=differenza*pwmParallelo+0.2;
    16cc:	80 92 95 03 	sts	0x0395, r8	; 0x800395 <temp>
    16d0:	90 92 96 03 	sts	0x0396, r9	; 0x800396 <temp+0x1>
    16d4:	a0 92 97 03 	sts	0x0397, r10	; 0x800397 <temp+0x2>
    16d8:	b0 92 98 03 	sts	0x0398, r11	; 0x800398 <temp+0x3>
    16dc:	0c c0       	rjmp	.+24     	; 0x16f6 <parallelototale+0x1e2>
			if(temp>max_giri)temp=max_giri;
    16de:	80 e0       	ldi	r24, 0x00	; 0
    16e0:	90 e0       	ldi	r25, 0x00	; 0
    16e2:	a0 e2       	ldi	r26, 0x20	; 32
    16e4:	b0 e4       	ldi	r27, 0x40	; 64
    16e6:	80 93 95 03 	sts	0x0395, r24	; 0x800395 <temp>
    16ea:	90 93 96 03 	sts	0x0396, r25	; 0x800396 <temp+0x1>
    16ee:	a0 93 97 03 	sts	0x0397, r26	; 0x800397 <temp+0x2>
    16f2:	b0 93 98 03 	sts	0x0398, r27	; 0x800398 <temp+0x3>
			set_giri_coppia(-temp,temp);
    16f6:	20 91 95 03 	lds	r18, 0x0395	; 0x800395 <temp>
    16fa:	30 91 96 03 	lds	r19, 0x0396	; 0x800396 <temp+0x1>
    16fe:	40 91 97 03 	lds	r20, 0x0397	; 0x800397 <temp+0x2>
    1702:	50 91 98 03 	lds	r21, 0x0398	; 0x800398 <temp+0x3>
    1706:	ca 01       	movw	r24, r20
    1708:	b9 01       	movw	r22, r18
    170a:	90 58       	subi	r25, 0x80	; 128
    170c:	0e 94 ae 1b 	call	0x375c	; 0x375c <set_giri_coppia>
		}else{
			DiAv=DistanzaIR(SinistraAvanti);
			DiDi=DistanzaIR(SinistraDietro);
		}
		differenza = (DiAv-DiDi)*i;
		while(!((ABS(differenza)<tolleranzaParallelo)||(ABS(differenza)>tolleranzaMassimaParallelo)||(((DiAv+DiDi)/2)>distanzaMinimaParalleo)))
    1710:	60 91 9e 03 	lds	r22, 0x039E	; 0x80039e <differenza>
    1714:	70 91 9f 03 	lds	r23, 0x039F	; 0x80039f <differenza+0x1>
    1718:	80 91 a0 03 	lds	r24, 0x03A0	; 0x8003a0 <differenza+0x2>
    171c:	90 91 a1 03 	lds	r25, 0x03A1	; 0x8003a1 <differenza+0x3>
    1720:	0e 94 33 1e 	call	0x3c66	; 0x3c66 <ABS>
    1724:	2d ec       	ldi	r18, 0xCD	; 205
    1726:	3c ec       	ldi	r19, 0xCC	; 204
    1728:	4c e4       	ldi	r20, 0x4C	; 76
    172a:	5e e3       	ldi	r21, 0x3E	; 62
    172c:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    1730:	88 23       	and	r24, r24
    1732:	9c f1       	brlt	.+102    	; 0x179a <parallelototale+0x286>
    1734:	60 91 9e 03 	lds	r22, 0x039E	; 0x80039e <differenza>
    1738:	70 91 9f 03 	lds	r23, 0x039F	; 0x80039f <differenza+0x1>
    173c:	80 91 a0 03 	lds	r24, 0x03A0	; 0x8003a0 <differenza+0x2>
    1740:	90 91 a1 03 	lds	r25, 0x03A1	; 0x8003a1 <differenza+0x3>
    1744:	0e 94 33 1e 	call	0x3c66	; 0x3c66 <ABS>
    1748:	20 e0       	ldi	r18, 0x00	; 0
    174a:	30 e0       	ldi	r19, 0x00	; 0
    174c:	40 e7       	ldi	r20, 0x70	; 112
    174e:	51 e4       	ldi	r21, 0x41	; 65
    1750:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    1754:	18 16       	cp	r1, r24
    1756:	0c f1       	brlt	.+66     	; 0x179a <parallelototale+0x286>
    1758:	20 91 8d 03 	lds	r18, 0x038D	; 0x80038d <DiDi>
    175c:	30 91 8e 03 	lds	r19, 0x038E	; 0x80038e <DiDi+0x1>
    1760:	40 91 8f 03 	lds	r20, 0x038F	; 0x80038f <DiDi+0x2>
    1764:	50 91 90 03 	lds	r21, 0x0390	; 0x800390 <DiDi+0x3>
    1768:	60 91 c0 03 	lds	r22, 0x03C0	; 0x8003c0 <DiAv>
    176c:	70 91 c1 03 	lds	r23, 0x03C1	; 0x8003c1 <DiAv+0x1>
    1770:	80 91 c2 03 	lds	r24, 0x03C2	; 0x8003c2 <DiAv+0x2>
    1774:	90 91 c3 03 	lds	r25, 0x03C3	; 0x8003c3 <DiAv+0x3>
    1778:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    177c:	20 e0       	ldi	r18, 0x00	; 0
    177e:	30 e0       	ldi	r19, 0x00	; 0
    1780:	40 e0       	ldi	r20, 0x00	; 0
    1782:	5f e3       	ldi	r21, 0x3F	; 63
    1784:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    1788:	20 e0       	ldi	r18, 0x00	; 0
    178a:	30 e0       	ldi	r19, 0x00	; 0
    178c:	40 ea       	ldi	r20, 0xA0	; 160
    178e:	51 e4       	ldi	r21, 0x41	; 65
    1790:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    1794:	18 16       	cp	r1, r24
    1796:	0c f0       	brlt	.+2      	; 0x179a <parallelototale+0x286>
    1798:	29 cf       	rjmp	.-430    	; 0x15ec <parallelototale+0xd8>
		    differenza = (DiAv-DiDi)*i ;
			temp=differenza*pwmParallelo+0.2;
			if(temp>max_giri)temp=max_giri;
			set_giri_coppia(-temp,temp);
		}
		set_giri(0);
    179a:	60 e0       	ldi	r22, 0x00	; 0
    179c:	70 e0       	ldi	r23, 0x00	; 0
    179e:	cb 01       	movw	r24, r22
    17a0:	0e 94 8a 1b 	call	0x3714	; 0x3714 <set_giri>
		ColoreLED(SPENTO);
    17a4:	86 e0       	ldi	r24, 0x06	; 6
    17a6:	e7 d6       	rcall	.+3534   	; 0x2576 <ColoreLED>


void parallelototale(){
	//Serial_Send_String("Parallelo \n");
	ColoreLED(WHITE);
	for (int i=-1;i<=1;i+=2)
    17a8:	22 96       	adiw	r28, 0x02	; 2
    17aa:	c3 30       	cpi	r28, 0x03	; 3
    17ac:	d1 05       	cpc	r29, r1
    17ae:	09 f0       	breq	.+2      	; 0x17b2 <parallelototale+0x29e>
    17b0:	c0 ce       	rjmp	.-640    	; 0x1532 <parallelototale+0x1e>
			set_giri_coppia(-temp,temp);
		}
		set_giri(0);
		ColoreLED(SPENTO);
	}
}
    17b2:	df 91       	pop	r29
    17b4:	cf 91       	pop	r28
    17b6:	ff 90       	pop	r15
    17b8:	ef 90       	pop	r14
    17ba:	df 90       	pop	r13
    17bc:	cf 90       	pop	r12
    17be:	bf 90       	pop	r11
    17c0:	af 90       	pop	r10
    17c2:	9f 90       	pop	r9
    17c4:	8f 90       	pop	r8
    17c6:	08 95       	ret

000017c8 <rilevaVittima>:


uint8_t rilevaVittima(){
    17c8:	cf 92       	push	r12
    17ca:	df 92       	push	r13
    17cc:	ef 92       	push	r14
    17ce:	ff 92       	push	r15
    17d0:	cf 93       	push	r28
	uint8_t valore =0;
	if(rileva_vittime==1){
		if(statokit==1){
    17d2:	80 91 19 03 	lds	r24, 0x0319	; 0x800319 <statokit>
    17d6:	81 30       	cpi	r24, 0x01	; 1
    17d8:	09 f0       	breq	.+2      	; 0x17dc <rilevaVittima+0x14>
    17da:	f3 c0       	rjmp	.+486    	; 0x19c2 <rilevaVittima+0x1fa>
			tSx=TemperaturaSX();
    17dc:	0e 94 b9 1c 	call	0x3972	; 0x3972 <TemperaturaSX>
    17e0:	60 93 aa 03 	sts	0x03AA, r22	; 0x8003aa <tSx>
    17e4:	70 93 ab 03 	sts	0x03AB, r23	; 0x8003ab <tSx+0x1>
    17e8:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <tSx+0x2>
    17ec:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <tSx+0x3>
			diSx= (DistanzaIR(SinistraDietro)+DistanzaIR(SinistraAvanti))/2;
    17f0:	85 e0       	ldi	r24, 0x05	; 5
    17f2:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    17f6:	6b 01       	movw	r12, r22
    17f8:	7c 01       	movw	r14, r24
    17fa:	84 e0       	ldi	r24, 0x04	; 4
    17fc:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    1800:	9b 01       	movw	r18, r22
    1802:	ac 01       	movw	r20, r24
    1804:	c7 01       	movw	r24, r14
    1806:	b6 01       	movw	r22, r12
    1808:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    180c:	20 e0       	ldi	r18, 0x00	; 0
    180e:	30 e0       	ldi	r19, 0x00	; 0
    1810:	40 e0       	ldi	r20, 0x00	; 0
    1812:	5f e3       	ldi	r21, 0x3F	; 63
    1814:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    1818:	6b 01       	movw	r12, r22
    181a:	7c 01       	movw	r14, r24
    181c:	60 93 a6 03 	sts	0x03A6, r22	; 0x8003a6 <diSx>
    1820:	70 93 a7 03 	sts	0x03A7, r23	; 0x8003a7 <diSx+0x1>
    1824:	80 93 a8 03 	sts	0x03A8, r24	; 0x8003a8 <diSx+0x2>
    1828:	90 93 a9 03 	sts	0x03A9, r25	; 0x8003a9 <diSx+0x3>
			if ((tSx>=temperaturaMinVittime)&&(diSx<20)){
    182c:	20 e0       	ldi	r18, 0x00	; 0
    182e:	30 e0       	ldi	r19, 0x00	; 0
    1830:	4c e0       	ldi	r20, 0x0C	; 12
    1832:	52 e4       	ldi	r21, 0x42	; 66
    1834:	60 91 aa 03 	lds	r22, 0x03AA	; 0x8003aa <tSx>
    1838:	70 91 ab 03 	lds	r23, 0x03AB	; 0x8003ab <tSx+0x1>
    183c:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <tSx+0x2>
    1840:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <tSx+0x3>
    1844:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    1848:	88 23       	and	r24, r24
    184a:	0c f4       	brge	.+2      	; 0x184e <rilevaVittima+0x86>
    184c:	3f c0       	rjmp	.+126    	; 0x18cc <rilevaVittima+0x104>
    184e:	20 e0       	ldi	r18, 0x00	; 0
    1850:	30 e0       	ldi	r19, 0x00	; 0
    1852:	40 ea       	ldi	r20, 0xA0	; 160
    1854:	51 e4       	ldi	r21, 0x41	; 65
    1856:	c7 01       	movw	r24, r14
    1858:	b6 01       	movw	r22, r12
    185a:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    185e:	88 23       	and	r24, r24
    1860:	bc f5       	brge	.+110    	; 0x18d0 <rilevaVittima+0x108>
				//Serial_Send_String("vittSx\n");
				valore=1;
				statokit=0;
    1862:	10 92 19 03 	sts	0x0319, r1	; 0x800319 <statokit>
				rilasciokit(1);
    1866:	81 e0       	ldi	r24, 0x01	; 1
    1868:	90 e0       	ldi	r25, 0x00	; 0
    186a:	0e 94 50 03 	call	0x6a0	; 0x6a0 <rilasciokit>
				Gira(90);
    186e:	60 e0       	ldi	r22, 0x00	; 0
    1870:	70 e0       	ldi	r23, 0x00	; 0
    1872:	84 eb       	ldi	r24, 0xB4	; 180
    1874:	92 e4       	ldi	r25, 0x42	; 66
    1876:	b5 db       	rcall	.-2198   	; 0xfe2 <Gira>
				dritto(3,-1);
    1878:	20 e0       	ldi	r18, 0x00	; 0
    187a:	30 e0       	ldi	r19, 0x00	; 0
    187c:	40 e8       	ldi	r20, 0x80	; 128
    187e:	5f eb       	ldi	r21, 0xBF	; 191
    1880:	60 e0       	ldi	r22, 0x00	; 0
    1882:	70 e0       	ldi	r23, 0x00	; 0
    1884:	80 e4       	ldi	r24, 0x40	; 64
    1886:	90 e4       	ldi	r25, 0x40	; 64
    1888:	0e 94 c1 1b 	call	0x3782	; 0x3782 <dritto>
				while((statoGenRil==1)||(statoRilascio==0)){
    188c:	06 c0       	rjmp	.+12     	; 0x189a <rilevaVittima+0xd2>
    188e:	8f e1       	ldi	r24, 0x1F	; 31
    1890:	9e e4       	ldi	r25, 0x4E	; 78
    1892:	01 97       	sbiw	r24, 0x01	; 1
    1894:	f1 f7       	brne	.-4      	; 0x1892 <rilevaVittima+0xca>
    1896:	00 c0       	rjmp	.+0      	; 0x1898 <rilevaVittima+0xd0>
    1898:	00 00       	nop
    189a:	80 91 d2 02 	lds	r24, 0x02D2	; 0x8002d2 <statoGenRil>
    189e:	81 30       	cpi	r24, 0x01	; 1
    18a0:	b1 f3       	breq	.-20     	; 0x188e <rilevaVittima+0xc6>
    18a2:	80 91 db 02 	lds	r24, 0x02DB	; 0x8002db <statoRilascio>
    18a6:	88 23       	and	r24, r24
    18a8:	91 f3       	breq	.-28     	; 0x188e <rilevaVittima+0xc6>
					_delay_ms(5);
				}
				dritto(2,1);
    18aa:	20 e0       	ldi	r18, 0x00	; 0
    18ac:	30 e0       	ldi	r19, 0x00	; 0
    18ae:	40 e8       	ldi	r20, 0x80	; 128
    18b0:	5f e3       	ldi	r21, 0x3F	; 63
    18b2:	60 e0       	ldi	r22, 0x00	; 0
    18b4:	70 e0       	ldi	r23, 0x00	; 0
    18b6:	80 e0       	ldi	r24, 0x00	; 0
    18b8:	90 e4       	ldi	r25, 0x40	; 64
    18ba:	0e 94 c1 1b 	call	0x3782	; 0x3782 <dritto>
				Gira(-90);
    18be:	60 e0       	ldi	r22, 0x00	; 0
    18c0:	70 e0       	ldi	r23, 0x00	; 0
    18c2:	84 eb       	ldi	r24, 0xB4	; 180
    18c4:	92 ec       	ldi	r25, 0xC2	; 194
    18c6:	8d db       	rcall	.-2278   	; 0xfe2 <Gira>
		if(statokit==1){
			tSx=TemperaturaSX();
			diSx= (DistanzaIR(SinistraDietro)+DistanzaIR(SinistraAvanti))/2;
			if ((tSx>=temperaturaMinVittime)&&(diSx<20)){
				//Serial_Send_String("vittSx\n");
				valore=1;
    18c8:	c1 e0       	ldi	r28, 0x01	; 1
    18ca:	03 c0       	rjmp	.+6      	; 0x18d2 <rilevaVittima+0x10a>
	}
}


uint8_t rilevaVittima(){
	uint8_t valore =0;
    18cc:	c0 e0       	ldi	r28, 0x00	; 0
    18ce:	01 c0       	rjmp	.+2      	; 0x18d2 <rilevaVittima+0x10a>
    18d0:	c0 e0       	ldi	r28, 0x00	; 0
					_delay_ms(5);
				}
				dritto(2,1);
				Gira(-90);
			}
			tDx=TemperaturaDX();
    18d2:	0e 94 7e 1c 	call	0x38fc	; 0x38fc <TemperaturaDX>
    18d6:	60 93 e7 03 	sts	0x03E7, r22	; 0x8003e7 <tDx>
    18da:	70 93 e8 03 	sts	0x03E8, r23	; 0x8003e8 <tDx+0x1>
    18de:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <tDx+0x2>
    18e2:	90 93 ea 03 	sts	0x03EA, r25	; 0x8003ea <tDx+0x3>
			diDx= (DistanzaIR(DestraDietro)+DistanzaIR(DestraAvanti))/2;
    18e6:	83 e0       	ldi	r24, 0x03	; 3
    18e8:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    18ec:	6b 01       	movw	r12, r22
    18ee:	7c 01       	movw	r14, r24
    18f0:	82 e0       	ldi	r24, 0x02	; 2
    18f2:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    18f6:	9b 01       	movw	r18, r22
    18f8:	ac 01       	movw	r20, r24
    18fa:	c7 01       	movw	r24, r14
    18fc:	b6 01       	movw	r22, r12
    18fe:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    1902:	20 e0       	ldi	r18, 0x00	; 0
    1904:	30 e0       	ldi	r19, 0x00	; 0
    1906:	40 e0       	ldi	r20, 0x00	; 0
    1908:	5f e3       	ldi	r21, 0x3F	; 63
    190a:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    190e:	6b 01       	movw	r12, r22
    1910:	7c 01       	movw	r14, r24
    1912:	60 93 7b 03 	sts	0x037B, r22	; 0x80037b <diDx>
    1916:	70 93 7c 03 	sts	0x037C, r23	; 0x80037c <diDx+0x1>
    191a:	80 93 7d 03 	sts	0x037D, r24	; 0x80037d <diDx+0x2>
    191e:	90 93 7e 03 	sts	0x037E, r25	; 0x80037e <diDx+0x3>
			//Serial_Send(tDx);SerialN();
			if ((tDx>=temperaturaMinVittime)&&(diDx<20)){
    1922:	20 e0       	ldi	r18, 0x00	; 0
    1924:	30 e0       	ldi	r19, 0x00	; 0
    1926:	4c e0       	ldi	r20, 0x0C	; 12
    1928:	52 e4       	ldi	r21, 0x42	; 66
    192a:	60 91 e7 03 	lds	r22, 0x03E7	; 0x8003e7 <tDx>
    192e:	70 91 e8 03 	lds	r23, 0x03E8	; 0x8003e8 <tDx+0x1>
    1932:	80 91 e9 03 	lds	r24, 0x03E9	; 0x8003e9 <tDx+0x2>
    1936:	90 91 ea 03 	lds	r25, 0x03EA	; 0x8003ea <tDx+0x3>
    193a:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    193e:	88 23       	and	r24, r24
    1940:	0c f4       	brge	.+2      	; 0x1944 <rilevaVittima+0x17c>
    1942:	40 c0       	rjmp	.+128    	; 0x19c4 <rilevaVittima+0x1fc>
    1944:	20 e0       	ldi	r18, 0x00	; 0
    1946:	30 e0       	ldi	r19, 0x00	; 0
    1948:	40 ea       	ldi	r20, 0xA0	; 160
    194a:	51 e4       	ldi	r21, 0x41	; 65
    194c:	c7 01       	movw	r24, r14
    194e:	b6 01       	movw	r22, r12
    1950:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    1954:	88 23       	and	r24, r24
    1956:	b4 f5       	brge	.+108    	; 0x19c4 <rilevaVittima+0x1fc>
				valore=1;
				statokit=0;
    1958:	10 92 19 03 	sts	0x0319, r1	; 0x800319 <statokit>
				rilasciokit(1);
    195c:	81 e0       	ldi	r24, 0x01	; 1
    195e:	90 e0       	ldi	r25, 0x00	; 0
    1960:	0e 94 50 03 	call	0x6a0	; 0x6a0 <rilasciokit>
				Gira(-90);
    1964:	60 e0       	ldi	r22, 0x00	; 0
    1966:	70 e0       	ldi	r23, 0x00	; 0
    1968:	84 eb       	ldi	r24, 0xB4	; 180
    196a:	92 ec       	ldi	r25, 0xC2	; 194
    196c:	3a db       	rcall	.-2444   	; 0xfe2 <Gira>
				dritto(3,-1);
    196e:	20 e0       	ldi	r18, 0x00	; 0
    1970:	30 e0       	ldi	r19, 0x00	; 0
    1972:	40 e8       	ldi	r20, 0x80	; 128
    1974:	5f eb       	ldi	r21, 0xBF	; 191
    1976:	60 e0       	ldi	r22, 0x00	; 0
    1978:	70 e0       	ldi	r23, 0x00	; 0
    197a:	80 e4       	ldi	r24, 0x40	; 64
    197c:	90 e4       	ldi	r25, 0x40	; 64
    197e:	0e 94 c1 1b 	call	0x3782	; 0x3782 <dritto>
				while((statoGenRil==1)||(statoRilascio==0)){
    1982:	06 c0       	rjmp	.+12     	; 0x1990 <rilevaVittima+0x1c8>
    1984:	8f e1       	ldi	r24, 0x1F	; 31
    1986:	9e e4       	ldi	r25, 0x4E	; 78
    1988:	01 97       	sbiw	r24, 0x01	; 1
    198a:	f1 f7       	brne	.-4      	; 0x1988 <rilevaVittima+0x1c0>
    198c:	00 c0       	rjmp	.+0      	; 0x198e <rilevaVittima+0x1c6>
    198e:	00 00       	nop
    1990:	80 91 d2 02 	lds	r24, 0x02D2	; 0x8002d2 <statoGenRil>
    1994:	81 30       	cpi	r24, 0x01	; 1
    1996:	b1 f3       	breq	.-20     	; 0x1984 <rilevaVittima+0x1bc>
    1998:	80 91 db 02 	lds	r24, 0x02DB	; 0x8002db <statoRilascio>
    199c:	88 23       	and	r24, r24
    199e:	91 f3       	breq	.-28     	; 0x1984 <rilevaVittima+0x1bc>
					_delay_ms(5);
				}
				dritto(2,1);
    19a0:	20 e0       	ldi	r18, 0x00	; 0
    19a2:	30 e0       	ldi	r19, 0x00	; 0
    19a4:	40 e8       	ldi	r20, 0x80	; 128
    19a6:	5f e3       	ldi	r21, 0x3F	; 63
    19a8:	60 e0       	ldi	r22, 0x00	; 0
    19aa:	70 e0       	ldi	r23, 0x00	; 0
    19ac:	80 e0       	ldi	r24, 0x00	; 0
    19ae:	90 e4       	ldi	r25, 0x40	; 64
    19b0:	0e 94 c1 1b 	call	0x3782	; 0x3782 <dritto>
				Gira(90);
    19b4:	60 e0       	ldi	r22, 0x00	; 0
    19b6:	70 e0       	ldi	r23, 0x00	; 0
    19b8:	84 eb       	ldi	r24, 0xB4	; 180
    19ba:	92 e4       	ldi	r25, 0x42	; 66
    19bc:	12 db       	rcall	.-2524   	; 0xfe2 <Gira>
			}
			tDx=TemperaturaDX();
			diDx= (DistanzaIR(DestraDietro)+DistanzaIR(DestraAvanti))/2;
			//Serial_Send(tDx);SerialN();
			if ((tDx>=temperaturaMinVittime)&&(diDx<20)){
				valore=1;
    19be:	c1 e0       	ldi	r28, 0x01	; 1
    19c0:	01 c0       	rjmp	.+2      	; 0x19c4 <rilevaVittima+0x1fc>
	}
}


uint8_t rilevaVittima(){
	uint8_t valore =0;
    19c2:	c0 e0       	ldi	r28, 0x00	; 0
				Gira(90);
			}
		}
	}
	return valore;
}
    19c4:	8c 2f       	mov	r24, r28
    19c6:	cf 91       	pop	r28
    19c8:	ff 90       	pop	r15
    19ca:	ef 90       	pop	r14
    19cc:	df 90       	pop	r13
    19ce:	cf 90       	pop	r12
    19d0:	08 95       	ret

000019d2 <rilevaVittimaRampa>:

void rilevaVittimaRampa(){
    19d2:	cf 92       	push	r12
    19d4:	df 92       	push	r13
    19d6:	ef 92       	push	r14
    19d8:	ff 92       	push	r15
	tSx=TemperaturaSX();
    19da:	0e 94 b9 1c 	call	0x3972	; 0x3972 <TemperaturaSX>
    19de:	60 93 aa 03 	sts	0x03AA, r22	; 0x8003aa <tSx>
    19e2:	70 93 ab 03 	sts	0x03AB, r23	; 0x8003ab <tSx+0x1>
    19e6:	80 93 ac 03 	sts	0x03AC, r24	; 0x8003ac <tSx+0x2>
    19ea:	90 93 ad 03 	sts	0x03AD, r25	; 0x8003ad <tSx+0x3>
	tDx=TemperaturaDX();
    19ee:	0e 94 7e 1c 	call	0x38fc	; 0x38fc <TemperaturaDX>
    19f2:	6b 01       	movw	r12, r22
    19f4:	7c 01       	movw	r14, r24
    19f6:	60 93 e7 03 	sts	0x03E7, r22	; 0x8003e7 <tDx>
    19fa:	70 93 e8 03 	sts	0x03E8, r23	; 0x8003e8 <tDx+0x1>
    19fe:	80 93 e9 03 	sts	0x03E9, r24	; 0x8003e9 <tDx+0x2>
    1a02:	90 93 ea 03 	sts	0x03EA, r25	; 0x8003ea <tDx+0x3>
	if((tSx>=temperaturaMinVittime) && (vitt_rampa_sx==0) ){
    1a06:	20 e0       	ldi	r18, 0x00	; 0
    1a08:	30 e0       	ldi	r19, 0x00	; 0
    1a0a:	4c e0       	ldi	r20, 0x0C	; 12
    1a0c:	52 e4       	ldi	r21, 0x42	; 66
    1a0e:	60 91 aa 03 	lds	r22, 0x03AA	; 0x8003aa <tSx>
    1a12:	70 91 ab 03 	lds	r23, 0x03AB	; 0x8003ab <tSx+0x1>
    1a16:	80 91 ac 03 	lds	r24, 0x03AC	; 0x8003ac <tSx+0x2>
    1a1a:	90 91 ad 03 	lds	r25, 0x03AD	; 0x8003ad <tSx+0x3>
    1a1e:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    1a22:	88 23       	and	r24, r24
    1a24:	8c f1       	brlt	.+98     	; 0x1a88 <rilevaVittimaRampa+0xb6>
    1a26:	80 91 b2 03 	lds	r24, 0x03B2	; 0x8003b2 <vitt_rampa_sx>
    1a2a:	81 11       	cpse	r24, r1
    1a2c:	2d c0       	rjmp	.+90     	; 0x1a88 <rilevaVittimaRampa+0xb6>
		vitt_rampa_sx=1;
    1a2e:	81 e0       	ldi	r24, 0x01	; 1
    1a30:	80 93 b2 03 	sts	0x03B2, r24	; 0x8003b2 <vitt_rampa_sx>
		rilasciokit(1);
    1a34:	81 e0       	ldi	r24, 0x01	; 1
    1a36:	90 e0       	ldi	r25, 0x00	; 0
    1a38:	0e 94 50 03 	call	0x6a0	; 0x6a0 <rilasciokit>
		dritto(10,0.5);
    1a3c:	20 e0       	ldi	r18, 0x00	; 0
    1a3e:	30 e0       	ldi	r19, 0x00	; 0
    1a40:	40 e0       	ldi	r20, 0x00	; 0
    1a42:	5f e3       	ldi	r21, 0x3F	; 63
    1a44:	60 e0       	ldi	r22, 0x00	; 0
    1a46:	70 e0       	ldi	r23, 0x00	; 0
    1a48:	80 e2       	ldi	r24, 0x20	; 32
    1a4a:	91 e4       	ldi	r25, 0x41	; 65
    1a4c:	0e 94 c1 1b 	call	0x3782	; 0x3782 <dritto>
		//StopMotori();
		set_giri(gradiGiroscopio(asseY)*0.002);
    1a50:	82 e0       	ldi	r24, 0x02	; 2
    1a52:	90 e0       	ldi	r25, 0x00	; 0
    1a54:	0e 94 c8 01 	call	0x390	; 0x390 <gradiGiroscopio>
    1a58:	2f e6       	ldi	r18, 0x6F	; 111
    1a5a:	32 e1       	ldi	r19, 0x12	; 18
    1a5c:	43 e0       	ldi	r20, 0x03	; 3
    1a5e:	5b e3       	ldi	r21, 0x3B	; 59
    1a60:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    1a64:	0e 94 8a 1b 	call	0x3714	; 0x3714 <set_giri>
		while((statoGenRil==1)||(statoRilascio==0)){
    1a68:	06 c0       	rjmp	.+12     	; 0x1a76 <rilevaVittimaRampa+0xa4>
    1a6a:	8f e1       	ldi	r24, 0x1F	; 31
    1a6c:	9e e4       	ldi	r25, 0x4E	; 78
    1a6e:	01 97       	sbiw	r24, 0x01	; 1
    1a70:	f1 f7       	brne	.-4      	; 0x1a6e <rilevaVittimaRampa+0x9c>
    1a72:	00 c0       	rjmp	.+0      	; 0x1a74 <rilevaVittimaRampa+0xa2>
    1a74:	00 00       	nop
    1a76:	80 91 d2 02 	lds	r24, 0x02D2	; 0x8002d2 <statoGenRil>
    1a7a:	81 30       	cpi	r24, 0x01	; 1
    1a7c:	b1 f3       	breq	.-20     	; 0x1a6a <rilevaVittimaRampa+0x98>
    1a7e:	80 91 db 02 	lds	r24, 0x02DB	; 0x8002db <statoRilascio>
    1a82:	88 23       	and	r24, r24
    1a84:	91 f3       	breq	.-28     	; 0x1a6a <rilevaVittimaRampa+0x98>
    1a86:	3a c0       	rjmp	.+116    	; 0x1afc <rilevaVittimaRampa+0x12a>
			_delay_ms(5);
		}
	}
	else if((tDx>=temperaturaMinVittime) && (vitt_rampa_dx==0)  ){
    1a88:	20 e0       	ldi	r18, 0x00	; 0
    1a8a:	30 e0       	ldi	r19, 0x00	; 0
    1a8c:	4c e0       	ldi	r20, 0x0C	; 12
    1a8e:	52 e4       	ldi	r21, 0x42	; 66
    1a90:	c7 01       	movw	r24, r14
    1a92:	b6 01       	movw	r22, r12
    1a94:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    1a98:	88 23       	and	r24, r24
    1a9a:	84 f1       	brlt	.+96     	; 0x1afc <rilevaVittimaRampa+0x12a>
    1a9c:	80 91 b3 03 	lds	r24, 0x03B3	; 0x8003b3 <vitt_rampa_dx>
    1aa0:	81 11       	cpse	r24, r1
    1aa2:	2c c0       	rjmp	.+88     	; 0x1afc <rilevaVittimaRampa+0x12a>
		vitt_rampa_dx=1;
    1aa4:	81 e0       	ldi	r24, 0x01	; 1
    1aa6:	80 93 b3 03 	sts	0x03B3, r24	; 0x8003b3 <vitt_rampa_dx>
		rilasciokit(1);
    1aaa:	81 e0       	ldi	r24, 0x01	; 1
    1aac:	90 e0       	ldi	r25, 0x00	; 0
    1aae:	0e 94 50 03 	call	0x6a0	; 0x6a0 <rilasciokit>
		dritto(10,0.5);
    1ab2:	20 e0       	ldi	r18, 0x00	; 0
    1ab4:	30 e0       	ldi	r19, 0x00	; 0
    1ab6:	40 e0       	ldi	r20, 0x00	; 0
    1ab8:	5f e3       	ldi	r21, 0x3F	; 63
    1aba:	60 e0       	ldi	r22, 0x00	; 0
    1abc:	70 e0       	ldi	r23, 0x00	; 0
    1abe:	80 e2       	ldi	r24, 0x20	; 32
    1ac0:	91 e4       	ldi	r25, 0x41	; 65
    1ac2:	0e 94 c1 1b 	call	0x3782	; 0x3782 <dritto>
		//StopMotori();
		set_giri(gradiGiroscopio(asseY)*0.002);
    1ac6:	82 e0       	ldi	r24, 0x02	; 2
    1ac8:	90 e0       	ldi	r25, 0x00	; 0
    1aca:	0e 94 c8 01 	call	0x390	; 0x390 <gradiGiroscopio>
    1ace:	2f e6       	ldi	r18, 0x6F	; 111
    1ad0:	32 e1       	ldi	r19, 0x12	; 18
    1ad2:	43 e0       	ldi	r20, 0x03	; 3
    1ad4:	5b e3       	ldi	r21, 0x3B	; 59
    1ad6:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    1ada:	0e 94 8a 1b 	call	0x3714	; 0x3714 <set_giri>
		
		while((statoGenRil==1)||(statoRilascio==0)){
    1ade:	06 c0       	rjmp	.+12     	; 0x1aec <rilevaVittimaRampa+0x11a>
    1ae0:	8f e1       	ldi	r24, 0x1F	; 31
    1ae2:	9e e4       	ldi	r25, 0x4E	; 78
    1ae4:	01 97       	sbiw	r24, 0x01	; 1
    1ae6:	f1 f7       	brne	.-4      	; 0x1ae4 <rilevaVittimaRampa+0x112>
    1ae8:	00 c0       	rjmp	.+0      	; 0x1aea <rilevaVittimaRampa+0x118>
    1aea:	00 00       	nop
    1aec:	80 91 d2 02 	lds	r24, 0x02D2	; 0x8002d2 <statoGenRil>
    1af0:	81 30       	cpi	r24, 0x01	; 1
    1af2:	b1 f3       	breq	.-20     	; 0x1ae0 <rilevaVittimaRampa+0x10e>
    1af4:	80 91 db 02 	lds	r24, 0x02DB	; 0x8002db <statoRilascio>
    1af8:	88 23       	and	r24, r24
    1afa:	91 f3       	breq	.-28     	; 0x1ae0 <rilevaVittimaRampa+0x10e>
			_delay_ms(5);
		}
	}
}
    1afc:	ff 90       	pop	r15
    1afe:	ef 90       	pop	r14
    1b00:	df 90       	pop	r13
    1b02:	cf 90       	pop	r12
    1b04:	08 95       	ret

00001b06 <Avanti30cm>:
	}
	if(val==1)countFinecorsa++;
	return val;
}

void Avanti30cm(int vel){
    1b06:	4f 92       	push	r4
    1b08:	5f 92       	push	r5
    1b0a:	6f 92       	push	r6
    1b0c:	7f 92       	push	r7
    1b0e:	8f 92       	push	r8
    1b10:	9f 92       	push	r9
    1b12:	af 92       	push	r10
    1b14:	bf 92       	push	r11
    1b16:	cf 92       	push	r12
    1b18:	df 92       	push	r13
    1b1a:	ef 92       	push	r14
    1b1c:	ff 92       	push	r15
    1b1e:	cf 93       	push	r28
    1b20:	df 93       	push	r29
    1b22:	00 d0       	rcall	.+0      	; 0x1b24 <Avanti30cm+0x1e>
    1b24:	00 d0       	rcall	.+0      	; 0x1b26 <Avanti30cm+0x20>
    1b26:	cd b7       	in	r28, 0x3d	; 61
    1b28:	de b7       	in	r29, 0x3e	; 62
    1b2a:	9e 83       	std	Y+6, r25	; 0x06
    1b2c:	8d 83       	std	Y+5, r24	; 0x05
	//parallelototale();
	distanzaAvDX = DistanzaIR(AvantiDestra);
    1b2e:	81 e0       	ldi	r24, 0x01	; 1
    1b30:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    1b34:	60 93 db 03 	sts	0x03DB, r22	; 0x8003db <distanzaAvDX>
    1b38:	70 93 dc 03 	sts	0x03DC, r23	; 0x8003dc <distanzaAvDX+0x1>
    1b3c:	80 93 dd 03 	sts	0x03DD, r24	; 0x8003dd <distanzaAvDX+0x2>
    1b40:	90 93 de 03 	sts	0x03DE, r25	; 0x8003de <distanzaAvDX+0x3>
	distanzaAvSX=DistanzaIR(AvantiSinistra);
    1b44:	80 e0       	ldi	r24, 0x00	; 0
    1b46:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    1b4a:	c6 2e       	mov	r12, r22
    1b4c:	d7 2e       	mov	r13, r23
    1b4e:	e8 2e       	mov	r14, r24
    1b50:	f9 2e       	mov	r15, r25
    1b52:	86 2f       	mov	r24, r22
    1b54:	9d 2d       	mov	r25, r13
    1b56:	ae 2d       	mov	r26, r14
    1b58:	bf 2d       	mov	r27, r15
    1b5a:	80 93 df 03 	sts	0x03DF, r24	; 0x8003df <distanzaAvSX>
    1b5e:	90 93 e0 03 	sts	0x03E0, r25	; 0x8003e0 <distanzaAvSX+0x1>
    1b62:	a0 93 e1 03 	sts	0x03E1, r26	; 0x8003e1 <distanzaAvSX+0x2>
    1b66:	b0 93 e2 03 	sts	0x03E2, r27	; 0x8003e2 <distanzaAvSX+0x3>
	distanzaCorrente=(distanzaAvSX<distanzaAvDX)? distanzaAvSX:distanzaAvDX;
    1b6a:	80 90 db 03 	lds	r8, 0x03DB	; 0x8003db <distanzaAvDX>
    1b6e:	90 90 dc 03 	lds	r9, 0x03DC	; 0x8003dc <distanzaAvDX+0x1>
    1b72:	a0 90 dd 03 	lds	r10, 0x03DD	; 0x8003dd <distanzaAvDX+0x2>
    1b76:	b0 90 de 03 	lds	r11, 0x03DE	; 0x8003de <distanzaAvDX+0x3>
    1b7a:	28 2d       	mov	r18, r8
    1b7c:	39 2d       	mov	r19, r9
    1b7e:	4a 2d       	mov	r20, r10
    1b80:	5b 2d       	mov	r21, r11
    1b82:	6c 2d       	mov	r22, r12
    1b84:	7d 2d       	mov	r23, r13
    1b86:	8e 2d       	mov	r24, r14
    1b88:	9f 2d       	mov	r25, r15
    1b8a:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    1b8e:	88 23       	and	r24, r24
    1b90:	24 f0       	brlt	.+8      	; 0x1b9a <Avanti30cm+0x94>
    1b92:	c8 2c       	mov	r12, r8
    1b94:	d9 2c       	mov	r13, r9
    1b96:	ea 2c       	mov	r14, r10
    1b98:	fb 2c       	mov	r15, r11
    1b9a:	8c 2d       	mov	r24, r12
    1b9c:	9d 2d       	mov	r25, r13
    1b9e:	ae 2d       	mov	r26, r14
    1ba0:	bf 2d       	mov	r27, r15
    1ba2:	80 93 c9 03 	sts	0x03C9, r24	; 0x8003c9 <distanzaCorrente>
    1ba6:	90 93 ca 03 	sts	0x03CA, r25	; 0x8003ca <distanzaCorrente+0x1>
    1baa:	a0 93 cb 03 	sts	0x03CB, r26	; 0x8003cb <distanzaCorrente+0x2>
    1bae:	b0 93 cc 03 	sts	0x03CC, r27	; 0x8003cc <distanzaCorrente+0x3>
	Serial_Send_String("Av30x\n");
    1bb2:	83 e3       	ldi	r24, 0x33	; 51
    1bb4:	92 e0       	ldi	r25, 0x02	; 2
    1bb6:	0e 94 6d 1e 	call	0x3cda	; 0x3cda <Serial_Send_String>
	inc_av=0;
    1bba:	10 92 76 03 	sts	0x0376, r1	; 0x800376 <inc_av+0x1>
    1bbe:	10 92 75 03 	sts	0x0375, r1	; 0x800375 <inc_av>
	resetta_distanza();
    1bc2:	0e 94 d9 19 	call	0x33b2	; 0x33b2 <resetta_distanza>
	point=gradiGiroscopio(asseZ);
    1bc6:	81 e0       	ldi	r24, 0x01	; 1
    1bc8:	90 e0       	ldi	r25, 0x00	; 0
    1bca:	0e 94 c8 01 	call	0x390	; 0x390 <gradiGiroscopio>
    1bce:	6b 01       	movw	r12, r22
    1bd0:	7c 01       	movw	r14, r24
	if(point>315 || point <=45) GU=0;
    1bd2:	20 e0       	ldi	r18, 0x00	; 0
    1bd4:	30 e8       	ldi	r19, 0x80	; 128
    1bd6:	4d e9       	ldi	r20, 0x9D	; 157
    1bd8:	53 e4       	ldi	r21, 0x43	; 67
    1bda:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    1bde:	18 16       	cp	r1, r24
    1be0:	54 f0       	brlt	.+20     	; 0x1bf6 <Avanti30cm+0xf0>
    1be2:	20 e0       	ldi	r18, 0x00	; 0
    1be4:	30 e0       	ldi	r19, 0x00	; 0
    1be6:	44 e3       	ldi	r20, 0x34	; 52
    1be8:	52 e4       	ldi	r21, 0x42	; 66
    1bea:	c7 01       	movw	r24, r14
    1bec:	b6 01       	movw	r22, r12
    1bee:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    1bf2:	18 16       	cp	r1, r24
    1bf4:	4c f0       	brlt	.+18     	; 0x1c08 <Avanti30cm+0x102>
    1bf6:	10 92 d6 03 	sts	0x03D6, r1	; 0x8003d6 <GU>
    1bfa:	10 92 d7 03 	sts	0x03D7, r1	; 0x8003d7 <GU+0x1>
    1bfe:	10 92 d8 03 	sts	0x03D8, r1	; 0x8003d8 <GU+0x2>
    1c02:	10 92 d9 03 	sts	0x03D9, r1	; 0x8003d9 <GU+0x3>
    1c06:	62 c0       	rjmp	.+196    	; 0x1ccc <Avanti30cm+0x1c6>
	else if(point>45 && point<=135) GU=90;
    1c08:	20 e0       	ldi	r18, 0x00	; 0
    1c0a:	30 e0       	ldi	r19, 0x00	; 0
    1c0c:	44 e3       	ldi	r20, 0x34	; 52
    1c0e:	52 e4       	ldi	r21, 0x42	; 66
    1c10:	c7 01       	movw	r24, r14
    1c12:	b6 01       	movw	r22, r12
    1c14:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    1c18:	18 16       	cp	r1, r24
    1c1a:	bc f4       	brge	.+46     	; 0x1c4a <Avanti30cm+0x144>
    1c1c:	20 e0       	ldi	r18, 0x00	; 0
    1c1e:	30 e0       	ldi	r19, 0x00	; 0
    1c20:	47 e0       	ldi	r20, 0x07	; 7
    1c22:	53 e4       	ldi	r21, 0x43	; 67
    1c24:	c7 01       	movw	r24, r14
    1c26:	b6 01       	movw	r22, r12
    1c28:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    1c2c:	18 16       	cp	r1, r24
    1c2e:	6c f0       	brlt	.+26     	; 0x1c4a <Avanti30cm+0x144>
    1c30:	80 e0       	ldi	r24, 0x00	; 0
    1c32:	90 e0       	ldi	r25, 0x00	; 0
    1c34:	a4 eb       	ldi	r26, 0xB4	; 180
    1c36:	b2 e4       	ldi	r27, 0x42	; 66
    1c38:	80 93 d6 03 	sts	0x03D6, r24	; 0x8003d6 <GU>
    1c3c:	90 93 d7 03 	sts	0x03D7, r25	; 0x8003d7 <GU+0x1>
    1c40:	a0 93 d8 03 	sts	0x03D8, r26	; 0x8003d8 <GU+0x2>
    1c44:	b0 93 d9 03 	sts	0x03D9, r27	; 0x8003d9 <GU+0x3>
    1c48:	41 c0       	rjmp	.+130    	; 0x1ccc <Avanti30cm+0x1c6>
	else if(point>135 && point<=225) GU=180;
    1c4a:	20 e0       	ldi	r18, 0x00	; 0
    1c4c:	30 e0       	ldi	r19, 0x00	; 0
    1c4e:	47 e0       	ldi	r20, 0x07	; 7
    1c50:	53 e4       	ldi	r21, 0x43	; 67
    1c52:	c7 01       	movw	r24, r14
    1c54:	b6 01       	movw	r22, r12
    1c56:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    1c5a:	18 16       	cp	r1, r24
    1c5c:	bc f4       	brge	.+46     	; 0x1c8c <Avanti30cm+0x186>
    1c5e:	20 e0       	ldi	r18, 0x00	; 0
    1c60:	30 e0       	ldi	r19, 0x00	; 0
    1c62:	41 e6       	ldi	r20, 0x61	; 97
    1c64:	53 e4       	ldi	r21, 0x43	; 67
    1c66:	c7 01       	movw	r24, r14
    1c68:	b6 01       	movw	r22, r12
    1c6a:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    1c6e:	18 16       	cp	r1, r24
    1c70:	6c f0       	brlt	.+26     	; 0x1c8c <Avanti30cm+0x186>
    1c72:	80 e0       	ldi	r24, 0x00	; 0
    1c74:	90 e0       	ldi	r25, 0x00	; 0
    1c76:	a4 e3       	ldi	r26, 0x34	; 52
    1c78:	b3 e4       	ldi	r27, 0x43	; 67
    1c7a:	80 93 d6 03 	sts	0x03D6, r24	; 0x8003d6 <GU>
    1c7e:	90 93 d7 03 	sts	0x03D7, r25	; 0x8003d7 <GU+0x1>
    1c82:	a0 93 d8 03 	sts	0x03D8, r26	; 0x8003d8 <GU+0x2>
    1c86:	b0 93 d9 03 	sts	0x03D9, r27	; 0x8003d9 <GU+0x3>
    1c8a:	20 c0       	rjmp	.+64     	; 0x1ccc <Avanti30cm+0x1c6>
	else if(point>225 && point<=315) GU=270;
    1c8c:	20 e0       	ldi	r18, 0x00	; 0
    1c8e:	30 e0       	ldi	r19, 0x00	; 0
    1c90:	41 e6       	ldi	r20, 0x61	; 97
    1c92:	53 e4       	ldi	r21, 0x43	; 67
    1c94:	c7 01       	movw	r24, r14
    1c96:	b6 01       	movw	r22, r12
    1c98:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    1c9c:	18 16       	cp	r1, r24
    1c9e:	b4 f4       	brge	.+44     	; 0x1ccc <Avanti30cm+0x1c6>
    1ca0:	20 e0       	ldi	r18, 0x00	; 0
    1ca2:	30 e8       	ldi	r19, 0x80	; 128
    1ca4:	4d e9       	ldi	r20, 0x9D	; 157
    1ca6:	53 e4       	ldi	r21, 0x43	; 67
    1ca8:	c7 01       	movw	r24, r14
    1caa:	b6 01       	movw	r22, r12
    1cac:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    1cb0:	18 16       	cp	r1, r24
    1cb2:	64 f0       	brlt	.+24     	; 0x1ccc <Avanti30cm+0x1c6>
    1cb4:	80 e0       	ldi	r24, 0x00	; 0
    1cb6:	90 e0       	ldi	r25, 0x00	; 0
    1cb8:	a7 e8       	ldi	r26, 0x87	; 135
    1cba:	b3 e4       	ldi	r27, 0x43	; 67
    1cbc:	80 93 d6 03 	sts	0x03D6, r24	; 0x8003d6 <GU>
    1cc0:	90 93 d7 03 	sts	0x03D7, r25	; 0x8003d7 <GU+0x1>
    1cc4:	a0 93 d8 03 	sts	0x03D8, r26	; 0x8003d8 <GU+0x2>
    1cc8:	b0 93 d9 03 	sts	0x03D9, r27	; 0x8003d9 <GU+0x3>
	point=GU;
    1ccc:	80 91 d6 03 	lds	r24, 0x03D6	; 0x8003d6 <GU>
    1cd0:	90 91 d7 03 	lds	r25, 0x03D7	; 0x8003d7 <GU+0x1>
    1cd4:	a0 91 d8 03 	lds	r26, 0x03D8	; 0x8003d8 <GU+0x2>
    1cd8:	b0 91 d9 03 	lds	r27, 0x03D9	; 0x8003d9 <GU+0x3>
    1cdc:	80 93 91 03 	sts	0x0391, r24	; 0x800391 <point>
    1ce0:	90 93 92 03 	sts	0x0392, r25	; 0x800392 <point+0x1>
    1ce4:	a0 93 93 03 	sts	0x0393, r26	; 0x800393 <point+0x2>
    1ce8:	b0 93 94 03 	sts	0x0394, r27	; 0x800394 <point+0x3>
	integ=0;
    1cec:	10 92 66 03 	sts	0x0366, r1	; 0x800366 <integ>
    1cf0:	10 92 67 03 	sts	0x0367, r1	; 0x800367 <integ+0x1>
    1cf4:	10 92 68 03 	sts	0x0368, r1	; 0x800368 <integ+0x2>
    1cf8:	10 92 69 03 	sts	0x0369, r1	; 0x800369 <integ+0x3>
	kg=0;
    1cfc:	10 92 a2 03 	sts	0x03A2, r1	; 0x8003a2 <kg>
    1d00:	10 92 a3 03 	sts	0x03A3, r1	; 0x8003a3 <kg+0x1>
    1d04:	10 92 a4 03 	sts	0x03A4, r1	; 0x8003a4 <kg+0x2>
    1d08:	10 92 a5 03 	sts	0x03A5, r1	; 0x8003a5 <kg+0x3>
	unsigned long m, oldm;
	oldm=millis();
    1d0c:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <millis>
    1d10:	4b 01       	movw	r8, r22
    1d12:	5c 01       	movw	r10, r24
	oldc=0;
    1d14:	10 92 ae 03 	sts	0x03AE, r1	; 0x8003ae <oldc>
    1d18:	10 92 af 03 	sts	0x03AF, r1	; 0x8003af <oldc+0x1>
    1d1c:	10 92 b0 03 	sts	0x03B0, r1	; 0x8003b0 <oldc+0x2>
    1d20:	10 92 b1 03 	sts	0x03B1, r1	; 0x8003b1 <oldc+0x3>
	while(!((distanzaCorrente<=5) || (((distanzaCorrente>25) && (distanzaPercorsa())>=30) && (inc_av==piano)))){//esce se
    1d24:	c0 90 c9 03 	lds	r12, 0x03C9	; 0x8003c9 <distanzaCorrente>
    1d28:	d0 90 ca 03 	lds	r13, 0x03CA	; 0x8003ca <distanzaCorrente+0x1>
    1d2c:	e0 90 cb 03 	lds	r14, 0x03CB	; 0x8003cb <distanzaCorrente+0x2>
    1d30:	f0 90 cc 03 	lds	r15, 0x03CC	; 0x8003cc <distanzaCorrente+0x3>
    1d34:	20 e0       	ldi	r18, 0x00	; 0
    1d36:	30 e0       	ldi	r19, 0x00	; 0
    1d38:	40 ea       	ldi	r20, 0xA0	; 160
    1d3a:	50 e4       	ldi	r21, 0x40	; 64
    1d3c:	c7 01       	movw	r24, r14
    1d3e:	b6 01       	movw	r22, r12
    1d40:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    1d44:	18 16       	cp	r1, r24
    1d46:	0c f4       	brge	.+2      	; 0x1d4a <Avanti30cm+0x244>
    1d48:	71 c2       	rjmp	.+1250   	; 0x222c <__stack+0x2d>
    1d4a:	8d c2       	rjmp	.+1306   	; 0x2266 <__stack+0x67>
		//m=millis();
		//if(verifica_salita_discesa()==1) break;
		distanzaAvDX = DistanzaIR(AvantiDestra);
    1d4c:	81 e0       	ldi	r24, 0x01	; 1
    1d4e:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    1d52:	60 93 db 03 	sts	0x03DB, r22	; 0x8003db <distanzaAvDX>
    1d56:	70 93 dc 03 	sts	0x03DC, r23	; 0x8003dc <distanzaAvDX+0x1>
    1d5a:	80 93 dd 03 	sts	0x03DD, r24	; 0x8003dd <distanzaAvDX+0x2>
    1d5e:	90 93 de 03 	sts	0x03DE, r25	; 0x8003de <distanzaAvDX+0x3>
		distanzaAvSX = DistanzaIR(AvantiSinistra);
    1d62:	80 e0       	ldi	r24, 0x00	; 0
    1d64:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    1d68:	c6 2e       	mov	r12, r22
    1d6a:	d7 2e       	mov	r13, r23
    1d6c:	e8 2e       	mov	r14, r24
    1d6e:	f9 2e       	mov	r15, r25
    1d70:	86 2f       	mov	r24, r22
    1d72:	9d 2d       	mov	r25, r13
    1d74:	ae 2d       	mov	r26, r14
    1d76:	bf 2d       	mov	r27, r15
    1d78:	80 93 df 03 	sts	0x03DF, r24	; 0x8003df <distanzaAvSX>
    1d7c:	90 93 e0 03 	sts	0x03E0, r25	; 0x8003e0 <distanzaAvSX+0x1>
    1d80:	a0 93 e1 03 	sts	0x03E1, r26	; 0x8003e1 <distanzaAvSX+0x2>
    1d84:	b0 93 e2 03 	sts	0x03E2, r27	; 0x8003e2 <distanzaAvSX+0x3>
		distanzaCorrente=(distanzaAvSX<distanzaAvDX)? distanzaAvSX:distanzaAvDX;
    1d88:	60 90 db 03 	lds	r6, 0x03DB	; 0x8003db <distanzaAvDX>
    1d8c:	70 90 dc 03 	lds	r7, 0x03DC	; 0x8003dc <distanzaAvDX+0x1>
    1d90:	50 90 dd 03 	lds	r5, 0x03DD	; 0x8003dd <distanzaAvDX+0x2>
    1d94:	40 90 de 03 	lds	r4, 0x03DE	; 0x8003de <distanzaAvDX+0x3>
    1d98:	26 2d       	mov	r18, r6
    1d9a:	37 2d       	mov	r19, r7
    1d9c:	45 2d       	mov	r20, r5
    1d9e:	54 2d       	mov	r21, r4
    1da0:	6c 2d       	mov	r22, r12
    1da2:	7d 2d       	mov	r23, r13
    1da4:	8e 2d       	mov	r24, r14
    1da6:	9f 2d       	mov	r25, r15
    1da8:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    1dac:	88 23       	and	r24, r24
    1dae:	24 f0       	brlt	.+8      	; 0x1db8 <Avanti30cm+0x2b2>
    1db0:	c6 2c       	mov	r12, r6
    1db2:	d7 2c       	mov	r13, r7
    1db4:	e5 2c       	mov	r14, r5
    1db6:	f4 2c       	mov	r15, r4
    1db8:	8c 2d       	mov	r24, r12
    1dba:	9d 2d       	mov	r25, r13
    1dbc:	ae 2d       	mov	r26, r14
    1dbe:	bf 2d       	mov	r27, r15
    1dc0:	80 93 c9 03 	sts	0x03C9, r24	; 0x8003c9 <distanzaCorrente>
    1dc4:	90 93 ca 03 	sts	0x03CA, r25	; 0x8003ca <distanzaCorrente+0x1>
    1dc8:	a0 93 cb 03 	sts	0x03CB, r26	; 0x8003cb <distanzaCorrente+0x2>
    1dcc:	b0 93 cc 03 	sts	0x03CC, r27	; 0x8003cc <distanzaCorrente+0x3>
		inc_av=inclinazione();
    1dd0:	0e 94 cc 1d 	call	0x3b98	; 0x3b98 <inclinazione>
    1dd4:	90 e0       	ldi	r25, 0x00	; 0
    1dd6:	90 93 76 03 	sts	0x0376, r25	; 0x800376 <inc_av+0x1>
    1dda:	80 93 75 03 	sts	0x0375, r24	; 0x800375 <inc_av>
		while(inc_av==errore_inc){
    1dde:	83 30       	cpi	r24, 0x03	; 3
    1de0:	91 05       	cpc	r25, r1
    1de2:	81 f4       	brne	.+32     	; 0x1e04 <Avanti30cm+0x2fe>
			 set_giri(-1);
    1de4:	60 e0       	ldi	r22, 0x00	; 0
    1de6:	70 e0       	ldi	r23, 0x00	; 0
    1de8:	80 e8       	ldi	r24, 0x80	; 128
    1dea:	9f eb       	ldi	r25, 0xBF	; 191
    1dec:	0e 94 8a 1b 	call	0x3714	; 0x3714 <set_giri>
			 inc_av=inclinazione();
    1df0:	0e 94 cc 1d 	call	0x3b98	; 0x3b98 <inclinazione>
    1df4:	90 e0       	ldi	r25, 0x00	; 0
    1df6:	90 93 76 03 	sts	0x0376, r25	; 0x800376 <inc_av+0x1>
    1dfa:	80 93 75 03 	sts	0x0375, r24	; 0x800375 <inc_av>
		//if(verifica_salita_discesa()==1) break;
		distanzaAvDX = DistanzaIR(AvantiDestra);
		distanzaAvSX = DistanzaIR(AvantiSinistra);
		distanzaCorrente=(distanzaAvSX<distanzaAvDX)? distanzaAvSX:distanzaAvDX;
		inc_av=inclinazione();
		while(inc_av==errore_inc){
    1dfe:	83 30       	cpi	r24, 0x03	; 3
    1e00:	91 05       	cpc	r25, r1
    1e02:	81 f3       	breq	.-32     	; 0x1de4 <Avanti30cm+0x2de>
			 set_giri(-1);
			 inc_av=inclinazione();
		}
		if(inc_av!=piano){
    1e04:	89 2b       	or	r24, r25
    1e06:	09 f4       	brne	.+2      	; 0x1e0a <Avanti30cm+0x304>
    1e08:	80 c0       	rjmp	.+256    	; 0x1f0a <Avanti30cm+0x404>
			rilevaVittimaRampa();
    1e0a:	e3 dd       	rcall	.-1082   	; 0x19d2 <rilevaVittimaRampa>
			distanzaDxAv=DistanzaIR(DestraAvanti);
    1e0c:	82 e0       	ldi	r24, 0x02	; 2
    1e0e:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    1e12:	60 93 b8 03 	sts	0x03B8, r22	; 0x8003b8 <distanzaDxAv>
    1e16:	70 93 b9 03 	sts	0x03B9, r23	; 0x8003b9 <distanzaDxAv+0x1>
    1e1a:	80 93 ba 03 	sts	0x03BA, r24	; 0x8003ba <distanzaDxAv+0x2>
    1e1e:	90 93 bb 03 	sts	0x03BB, r25	; 0x8003bb <distanzaDxAv+0x3>
			distanzaSxAv=DistanzaIR(SinistraAvanti);
    1e22:	84 e0       	ldi	r24, 0x04	; 4
    1e24:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    1e28:	6b 01       	movw	r12, r22
    1e2a:	7c 01       	movw	r14, r24
    1e2c:	60 93 83 03 	sts	0x0383, r22	; 0x800383 <distanzaSxAv>
    1e30:	70 93 84 03 	sts	0x0384, r23	; 0x800384 <distanzaSxAv+0x1>
    1e34:	80 93 85 03 	sts	0x0385, r24	; 0x800385 <distanzaSxAv+0x2>
    1e38:	90 93 86 03 	sts	0x0386, r25	; 0x800386 <distanzaSxAv+0x3>
			if(distanzaSxAv<15 && distanzaDxAv<15 )
    1e3c:	20 e0       	ldi	r18, 0x00	; 0
    1e3e:	30 e0       	ldi	r19, 0x00	; 0
    1e40:	40 e7       	ldi	r20, 0x70	; 112
    1e42:	51 e4       	ldi	r21, 0x41	; 65
    1e44:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    1e48:	88 23       	and	r24, r24
    1e4a:	7c f5       	brge	.+94     	; 0x1eaa <Avanti30cm+0x3a4>
    1e4c:	40 90 b8 03 	lds	r4, 0x03B8	; 0x8003b8 <distanzaDxAv>
    1e50:	50 90 b9 03 	lds	r5, 0x03B9	; 0x8003b9 <distanzaDxAv+0x1>
    1e54:	60 90 ba 03 	lds	r6, 0x03BA	; 0x8003ba <distanzaDxAv+0x2>
    1e58:	70 90 bb 03 	lds	r7, 0x03BB	; 0x8003bb <distanzaDxAv+0x3>
    1e5c:	20 e0       	ldi	r18, 0x00	; 0
    1e5e:	30 e0       	ldi	r19, 0x00	; 0
    1e60:	40 e7       	ldi	r20, 0x70	; 112
    1e62:	51 e4       	ldi	r21, 0x41	; 65
    1e64:	c3 01       	movw	r24, r6
    1e66:	b2 01       	movw	r22, r4
    1e68:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    1e6c:	88 23       	and	r24, r24
    1e6e:	ec f4       	brge	.+58     	; 0x1eaa <Avanti30cm+0x3a4>
				correzione=kp_salita*(distanzaDxAv-distanzaSxAv);
    1e70:	a7 01       	movw	r20, r14
    1e72:	96 01       	movw	r18, r12
    1e74:	c3 01       	movw	r24, r6
    1e76:	b2 01       	movw	r22, r4
    1e78:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    1e7c:	2d ec       	ldi	r18, 0xCD	; 205
    1e7e:	3c ec       	ldi	r19, 0xCC	; 204
    1e80:	4c ec       	ldi	r20, 0xCC	; 204
    1e82:	5d e3       	ldi	r21, 0x3D	; 61
    1e84:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    1e88:	60 93 6b 03 	sts	0x036B, r22	; 0x80036b <correzione>
    1e8c:	70 93 6c 03 	sts	0x036C, r23	; 0x80036c <correzione+0x1>
    1e90:	80 93 6d 03 	sts	0x036D, r24	; 0x80036d <correzione+0x2>
    1e94:	90 93 6e 03 	sts	0x036E, r25	; 0x80036e <correzione+0x3>
			else
				correzione=0;
			if(correzione>0.5)correzione=0;
    1e98:	20 e0       	ldi	r18, 0x00	; 0
    1e9a:	30 e0       	ldi	r19, 0x00	; 0
    1e9c:	40 e0       	ldi	r20, 0x00	; 0
    1e9e:	5f e3       	ldi	r21, 0x3F	; 63
    1ea0:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    1ea4:	18 16       	cp	r1, r24
    1ea6:	54 f0       	brlt	.+20     	; 0x1ebc <Avanti30cm+0x3b6>
    1ea8:	11 c0       	rjmp	.+34     	; 0x1ecc <Avanti30cm+0x3c6>
			distanzaDxAv=DistanzaIR(DestraAvanti);
			distanzaSxAv=DistanzaIR(SinistraAvanti);
			if(distanzaSxAv<15 && distanzaDxAv<15 )
				correzione=kp_salita*(distanzaDxAv-distanzaSxAv);
			else
				correzione=0;
    1eaa:	10 92 6b 03 	sts	0x036B, r1	; 0x80036b <correzione>
    1eae:	10 92 6c 03 	sts	0x036C, r1	; 0x80036c <correzione+0x1>
    1eb2:	10 92 6d 03 	sts	0x036D, r1	; 0x80036d <correzione+0x2>
    1eb6:	10 92 6e 03 	sts	0x036E, r1	; 0x80036e <correzione+0x3>
    1eba:	08 c0       	rjmp	.+16     	; 0x1ecc <Avanti30cm+0x3c6>
			if(correzione>0.5)correzione=0;
    1ebc:	10 92 6b 03 	sts	0x036B, r1	; 0x80036b <correzione>
    1ec0:	10 92 6c 03 	sts	0x036C, r1	; 0x80036c <correzione+0x1>
    1ec4:	10 92 6d 03 	sts	0x036D, r1	; 0x80036d <correzione+0x2>
    1ec8:	10 92 6e 03 	sts	0x036E, r1	; 0x80036e <correzione+0x3>
			set_giri_coppia(0.8-correzione,0.8+correzione);
    1ecc:	c0 90 6b 03 	lds	r12, 0x036B	; 0x80036b <correzione>
    1ed0:	d0 90 6c 03 	lds	r13, 0x036C	; 0x80036c <correzione+0x1>
    1ed4:	e0 90 6d 03 	lds	r14, 0x036D	; 0x80036d <correzione+0x2>
    1ed8:	f0 90 6e 03 	lds	r15, 0x036E	; 0x80036e <correzione+0x3>
    1edc:	2d ec       	ldi	r18, 0xCD	; 205
    1ede:	3c ec       	ldi	r19, 0xCC	; 204
    1ee0:	4c e4       	ldi	r20, 0x4C	; 76
    1ee2:	5f e3       	ldi	r21, 0x3F	; 63
    1ee4:	c7 01       	movw	r24, r14
    1ee6:	b6 01       	movw	r22, r12
    1ee8:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    1eec:	2b 01       	movw	r4, r22
    1eee:	3c 01       	movw	r6, r24
    1ef0:	a7 01       	movw	r20, r14
    1ef2:	96 01       	movw	r18, r12
    1ef4:	6d ec       	ldi	r22, 0xCD	; 205
    1ef6:	7c ec       	ldi	r23, 0xCC	; 204
    1ef8:	8c e4       	ldi	r24, 0x4C	; 76
    1efa:	9f e3       	ldi	r25, 0x3F	; 63
    1efc:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    1f00:	a3 01       	movw	r20, r6
    1f02:	92 01       	movw	r18, r4
    1f04:	0e 94 ae 1b 	call	0x375c	; 0x375c <set_giri_coppia>
    1f08:	7d c1       	rjmp	.+762    	; 0x2204 <__stack+0x5>
		}else{
			GA=gradiGiroscopio(asseZ);
    1f0a:	81 e0       	ldi	r24, 0x01	; 1
    1f0c:	90 e0       	ldi	r25, 0x00	; 0
    1f0e:	0e 94 c8 01 	call	0x390	; 0x390 <gradiGiroscopio>
    1f12:	6b 01       	movw	r12, r22
    1f14:	7c 01       	movw	r14, r24
			if((GA-GU)>180) kg--;
    1f16:	20 91 d6 03 	lds	r18, 0x03D6	; 0x8003d6 <GU>
    1f1a:	30 91 d7 03 	lds	r19, 0x03D7	; 0x8003d7 <GU+0x1>
    1f1e:	40 91 d8 03 	lds	r20, 0x03D8	; 0x8003d8 <GU+0x2>
    1f22:	50 91 d9 03 	lds	r21, 0x03D9	; 0x8003d9 <GU+0x3>
    1f26:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    1f2a:	2b 01       	movw	r4, r22
    1f2c:	3c 01       	movw	r6, r24
    1f2e:	20 e0       	ldi	r18, 0x00	; 0
    1f30:	30 e0       	ldi	r19, 0x00	; 0
    1f32:	44 e3       	ldi	r20, 0x34	; 52
    1f34:	53 e4       	ldi	r21, 0x43	; 67
    1f36:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    1f3a:	18 16       	cp	r1, r24
    1f3c:	bc f4       	brge	.+46     	; 0x1f6c <Avanti30cm+0x466>
    1f3e:	20 e0       	ldi	r18, 0x00	; 0
    1f40:	30 e0       	ldi	r19, 0x00	; 0
    1f42:	40 e8       	ldi	r20, 0x80	; 128
    1f44:	5f e3       	ldi	r21, 0x3F	; 63
    1f46:	60 91 a2 03 	lds	r22, 0x03A2	; 0x8003a2 <kg>
    1f4a:	70 91 a3 03 	lds	r23, 0x03A3	; 0x8003a3 <kg+0x1>
    1f4e:	80 91 a4 03 	lds	r24, 0x03A4	; 0x8003a4 <kg+0x2>
    1f52:	90 91 a5 03 	lds	r25, 0x03A5	; 0x8003a5 <kg+0x3>
    1f56:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    1f5a:	60 93 a2 03 	sts	0x03A2, r22	; 0x8003a2 <kg>
    1f5e:	70 93 a3 03 	sts	0x03A3, r23	; 0x8003a3 <kg+0x1>
    1f62:	80 93 a4 03 	sts	0x03A4, r24	; 0x8003a4 <kg+0x2>
    1f66:	90 93 a5 03 	sts	0x03A5, r25	; 0x8003a5 <kg+0x3>
    1f6a:	20 c0       	rjmp	.+64     	; 0x1fac <Avanti30cm+0x4a6>
			else if((GA-GU)<-180) kg++;
    1f6c:	20 e0       	ldi	r18, 0x00	; 0
    1f6e:	30 e0       	ldi	r19, 0x00	; 0
    1f70:	44 e3       	ldi	r20, 0x34	; 52
    1f72:	53 ec       	ldi	r21, 0xC3	; 195
    1f74:	c3 01       	movw	r24, r6
    1f76:	b2 01       	movw	r22, r4
    1f78:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    1f7c:	88 23       	and	r24, r24
    1f7e:	b4 f4       	brge	.+44     	; 0x1fac <Avanti30cm+0x4a6>
    1f80:	20 e0       	ldi	r18, 0x00	; 0
    1f82:	30 e0       	ldi	r19, 0x00	; 0
    1f84:	40 e8       	ldi	r20, 0x80	; 128
    1f86:	5f e3       	ldi	r21, 0x3F	; 63
    1f88:	60 91 a2 03 	lds	r22, 0x03A2	; 0x8003a2 <kg>
    1f8c:	70 91 a3 03 	lds	r23, 0x03A3	; 0x8003a3 <kg+0x1>
    1f90:	80 91 a4 03 	lds	r24, 0x03A4	; 0x8003a4 <kg+0x2>
    1f94:	90 91 a5 03 	lds	r25, 0x03A5	; 0x8003a5 <kg+0x3>
    1f98:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    1f9c:	60 93 a2 03 	sts	0x03A2, r22	; 0x8003a2 <kg>
    1fa0:	70 93 a3 03 	sts	0x03A3, r23	; 0x8003a3 <kg+0x1>
    1fa4:	80 93 a4 03 	sts	0x03A4, r24	; 0x8003a4 <kg+0x2>
    1fa8:	90 93 a5 03 	sts	0x03A5, r25	; 0x8003a5 <kg+0x3>
			GU=GA;
    1fac:	c0 92 d6 03 	sts	0x03D6, r12	; 0x8003d6 <GU>
    1fb0:	d0 92 d7 03 	sts	0x03D7, r13	; 0x8003d7 <GU+0x1>
    1fb4:	e0 92 d8 03 	sts	0x03D8, r14	; 0x8003d8 <GU+0x2>
    1fb8:	f0 92 d9 03 	sts	0x03D9, r15	; 0x8003d9 <GU+0x3>
			GA+=(kg*360);
    1fbc:	20 e0       	ldi	r18, 0x00	; 0
    1fbe:	30 e0       	ldi	r19, 0x00	; 0
    1fc0:	44 eb       	ldi	r20, 0xB4	; 180
    1fc2:	53 e4       	ldi	r21, 0x43	; 67
    1fc4:	60 91 a2 03 	lds	r22, 0x03A2	; 0x8003a2 <kg>
    1fc8:	70 91 a3 03 	lds	r23, 0x03A3	; 0x8003a3 <kg+0x1>
    1fcc:	80 91 a4 03 	lds	r24, 0x03A4	; 0x8003a4 <kg+0x2>
    1fd0:	90 91 a5 03 	lds	r25, 0x03A5	; 0x8003a5 <kg+0x3>
    1fd4:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    1fd8:	a7 01       	movw	r20, r14
    1fda:	96 01       	movw	r18, r12
    1fdc:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    1fe0:	60 93 62 03 	sts	0x0362, r22	; 0x800362 <GA>
    1fe4:	70 93 63 03 	sts	0x0363, r23	; 0x800363 <GA+0x1>
    1fe8:	80 93 64 03 	sts	0x0364, r24	; 0x800364 <GA+0x2>
    1fec:	90 93 65 03 	sts	0x0365, r25	; 0x800365 <GA+0x3>
			err=(GA-point);
    1ff0:	20 91 91 03 	lds	r18, 0x0391	; 0x800391 <point>
    1ff4:	30 91 92 03 	lds	r19, 0x0392	; 0x800392 <point+0x1>
    1ff8:	40 91 93 03 	lds	r20, 0x0393	; 0x800393 <point+0x2>
    1ffc:	50 91 94 03 	lds	r21, 0x0394	; 0x800394 <point+0x3>
    2000:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    2004:	6b 01       	movw	r12, r22
    2006:	7c 01       	movw	r14, r24
    2008:	60 93 bc 03 	sts	0x03BC, r22	; 0x8003bc <err>
    200c:	70 93 bd 03 	sts	0x03BD, r23	; 0x8003bd <err+0x1>
    2010:	80 93 be 03 	sts	0x03BE, r24	; 0x8003be <err+0x2>
    2014:	90 93 bf 03 	sts	0x03BF, r25	; 0x8003bf <err+0x3>
			propg = err*kp_AvGiro;
    2018:	2d ec       	ldi	r18, 0xCD	; 205
    201a:	3c ec       	ldi	r19, 0xCC	; 204
    201c:	4c e4       	ldi	r20, 0x4C	; 76
    201e:	5d e3       	ldi	r21, 0x3D	; 61
    2020:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    2024:	60 93 e3 03 	sts	0x03E3, r22	; 0x8003e3 <propg>
    2028:	70 93 e4 03 	sts	0x03E4, r23	; 0x8003e4 <propg+0x1>
    202c:	80 93 e5 03 	sts	0x03E5, r24	; 0x8003e5 <propg+0x2>
    2030:	90 93 e6 03 	sts	0x03E6, r25	; 0x8003e6 <propg+0x3>
			integ += err*ki_AvGiro;
    2034:	2f e6       	ldi	r18, 0x6F	; 111
    2036:	32 e1       	ldi	r19, 0x12	; 18
    2038:	43 e0       	ldi	r20, 0x03	; 3
    203a:	5a e3       	ldi	r21, 0x3A	; 58
    203c:	c7 01       	movw	r24, r14
    203e:	b6 01       	movw	r22, r12
    2040:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    2044:	9b 01       	movw	r18, r22
    2046:	ac 01       	movw	r20, r24
    2048:	60 91 66 03 	lds	r22, 0x0366	; 0x800366 <integ>
    204c:	70 91 67 03 	lds	r23, 0x0367	; 0x800367 <integ+0x1>
    2050:	80 91 68 03 	lds	r24, 0x0368	; 0x800368 <integ+0x2>
    2054:	90 91 69 03 	lds	r25, 0x0369	; 0x800369 <integ+0x3>
    2058:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    205c:	60 93 66 03 	sts	0x0366, r22	; 0x800366 <integ>
    2060:	70 93 67 03 	sts	0x0367, r23	; 0x800367 <integ+0x1>
    2064:	80 93 68 03 	sts	0x0368, r24	; 0x800368 <integ+0x2>
    2068:	90 93 69 03 	sts	0x0369, r25	; 0x800369 <integ+0x3>
			m=millis();
    206c:	0e 94 fc 1b 	call	0x37f8	; 0x37f8 <millis>
    2070:	6b 01       	movw	r12, r22
    2072:	7c 01       	movw	r14, r24
			derg= ((err-olderr)/((m-oldm)/1000.0))*kd_AvGiro;
    2074:	40 90 bc 03 	lds	r4, 0x03BC	; 0x8003bc <err>
    2078:	50 90 bd 03 	lds	r5, 0x03BD	; 0x8003bd <err+0x1>
    207c:	60 90 be 03 	lds	r6, 0x03BE	; 0x8003be <err+0x2>
    2080:	70 90 bf 03 	lds	r7, 0x03BF	; 0x8003bf <err+0x3>
    2084:	20 91 9a 03 	lds	r18, 0x039A	; 0x80039a <olderr>
    2088:	30 91 9b 03 	lds	r19, 0x039B	; 0x80039b <olderr+0x1>
    208c:	40 91 9c 03 	lds	r20, 0x039C	; 0x80039c <olderr+0x2>
    2090:	50 91 9d 03 	lds	r21, 0x039D	; 0x80039d <olderr+0x3>
    2094:	c3 01       	movw	r24, r6
    2096:	b2 01       	movw	r22, r4
    2098:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    209c:	69 83       	std	Y+1, r22	; 0x01
    209e:	7a 83       	std	Y+2, r23	; 0x02
    20a0:	8b 83       	std	Y+3, r24	; 0x03
    20a2:	9c 83       	std	Y+4, r25	; 0x04
    20a4:	c7 01       	movw	r24, r14
    20a6:	b6 01       	movw	r22, r12
    20a8:	68 19       	sub	r22, r8
    20aa:	79 09       	sbc	r23, r9
    20ac:	8a 09       	sbc	r24, r10
    20ae:	9b 09       	sbc	r25, r11
    20b0:	0e 94 ae 21 	call	0x435c	; 0x435c <__floatunsisf>
    20b4:	20 e0       	ldi	r18, 0x00	; 0
    20b6:	30 e0       	ldi	r19, 0x00	; 0
    20b8:	4a e7       	ldi	r20, 0x7A	; 122
    20ba:	54 e4       	ldi	r21, 0x44	; 68
    20bc:	0e 94 15 21 	call	0x422a	; 0x422a <__divsf3>
    20c0:	9b 01       	movw	r18, r22
    20c2:	ac 01       	movw	r20, r24
    20c4:	69 81       	ldd	r22, Y+1	; 0x01
    20c6:	7a 81       	ldd	r23, Y+2	; 0x02
    20c8:	8b 81       	ldd	r24, Y+3	; 0x03
    20ca:	9c 81       	ldd	r25, Y+4	; 0x04
    20cc:	0e 94 15 21 	call	0x422a	; 0x422a <__divsf3>
    20d0:	2f e6       	ldi	r18, 0x6F	; 111
    20d2:	32 e1       	ldi	r19, 0x12	; 18
    20d4:	43 e0       	ldi	r20, 0x03	; 3
    20d6:	5b e3       	ldi	r21, 0x3B	; 59
    20d8:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    20dc:	4b 01       	movw	r8, r22
    20de:	5c 01       	movw	r10, r24
    20e0:	60 93 7f 03 	sts	0x037F, r22	; 0x80037f <derg>
    20e4:	70 93 80 03 	sts	0x0380, r23	; 0x800380 <derg+0x1>
    20e8:	80 93 81 03 	sts	0x0381, r24	; 0x800381 <derg+0x2>
    20ec:	90 93 82 03 	sts	0x0382, r25	; 0x800382 <derg+0x3>
			oldm=m;
			olderr=err;
    20f0:	40 92 9a 03 	sts	0x039A, r4	; 0x80039a <olderr>
    20f4:	50 92 9b 03 	sts	0x039B, r5	; 0x80039b <olderr+0x1>
    20f8:	60 92 9c 03 	sts	0x039C, r6	; 0x80039c <olderr+0x2>
    20fc:	70 92 9d 03 	sts	0x039D, r7	; 0x80039d <olderr+0x3>
 			if(integ>limI_AvGiro)integ=limI_AvGiro;
    2100:	40 90 66 03 	lds	r4, 0x0366	; 0x800366 <integ>
    2104:	50 90 67 03 	lds	r5, 0x0367	; 0x800367 <integ+0x1>
    2108:	60 90 68 03 	lds	r6, 0x0368	; 0x800368 <integ+0x2>
    210c:	70 90 69 03 	lds	r7, 0x0369	; 0x800369 <integ+0x3>
    2110:	20 e0       	ldi	r18, 0x00	; 0
    2112:	30 e0       	ldi	r19, 0x00	; 0
    2114:	40 e0       	ldi	r20, 0x00	; 0
    2116:	5f e3       	ldi	r21, 0x3F	; 63
    2118:	c3 01       	movw	r24, r6
    211a:	b2 01       	movw	r22, r4
    211c:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    2120:	18 16       	cp	r1, r24
    2122:	6c f4       	brge	.+26     	; 0x213e <Avanti30cm+0x638>
    2124:	80 e0       	ldi	r24, 0x00	; 0
    2126:	90 e0       	ldi	r25, 0x00	; 0
    2128:	a0 e0       	ldi	r26, 0x00	; 0
    212a:	bf e3       	ldi	r27, 0x3F	; 63
    212c:	80 93 66 03 	sts	0x0366, r24	; 0x800366 <integ>
    2130:	90 93 67 03 	sts	0x0367, r25	; 0x800367 <integ+0x1>
    2134:	a0 93 68 03 	sts	0x0368, r26	; 0x800368 <integ+0x2>
    2138:	b0 93 69 03 	sts	0x0369, r27	; 0x800369 <integ+0x3>
    213c:	16 c0       	rjmp	.+44     	; 0x216a <Avanti30cm+0x664>
 			if(integ<-limI_AvGiro)integ=-limI_AvGiro;
    213e:	20 e0       	ldi	r18, 0x00	; 0
    2140:	30 e0       	ldi	r19, 0x00	; 0
    2142:	40 e0       	ldi	r20, 0x00	; 0
    2144:	5f eb       	ldi	r21, 0xBF	; 191
    2146:	c3 01       	movw	r24, r6
    2148:	b2 01       	movw	r22, r4
    214a:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    214e:	88 23       	and	r24, r24
    2150:	64 f4       	brge	.+24     	; 0x216a <Avanti30cm+0x664>
    2152:	80 e0       	ldi	r24, 0x00	; 0
    2154:	90 e0       	ldi	r25, 0x00	; 0
    2156:	a0 e0       	ldi	r26, 0x00	; 0
    2158:	bf eb       	ldi	r27, 0xBF	; 191
    215a:	80 93 66 03 	sts	0x0366, r24	; 0x800366 <integ>
    215e:	90 93 67 03 	sts	0x0367, r25	; 0x800367 <integ+0x1>
    2162:	a0 93 68 03 	sts	0x0368, r26	; 0x800368 <integ+0x2>
    2166:	b0 93 69 03 	sts	0x0369, r27	; 0x800369 <integ+0x3>
			corr=propg+integ+derg;
    216a:	20 91 66 03 	lds	r18, 0x0366	; 0x800366 <integ>
    216e:	30 91 67 03 	lds	r19, 0x0367	; 0x800367 <integ+0x1>
    2172:	40 91 68 03 	lds	r20, 0x0368	; 0x800368 <integ+0x2>
    2176:	50 91 69 03 	lds	r21, 0x0369	; 0x800369 <integ+0x3>
    217a:	60 91 e3 03 	lds	r22, 0x03E3	; 0x8003e3 <propg>
    217e:	70 91 e4 03 	lds	r23, 0x03E4	; 0x8003e4 <propg+0x1>
    2182:	80 91 e5 03 	lds	r24, 0x03E5	; 0x8003e5 <propg+0x2>
    2186:	90 91 e6 03 	lds	r25, 0x03E6	; 0x8003e6 <propg+0x3>
    218a:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    218e:	a5 01       	movw	r20, r10
    2190:	94 01       	movw	r18, r8
    2192:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    2196:	4b 01       	movw	r8, r22
    2198:	5c 01       	movw	r10, r24
    219a:	60 93 c5 03 	sts	0x03C5, r22	; 0x8003c5 <corr>
    219e:	70 93 c6 03 	sts	0x03C6, r23	; 0x8003c6 <corr+0x1>
    21a2:	80 93 c7 03 	sts	0x03C7, r24	; 0x8003c7 <corr+0x2>
    21a6:	90 93 c8 03 	sts	0x03C8, r25	; 0x8003c8 <corr+0x3>
			oldc=corr;
    21aa:	60 93 ae 03 	sts	0x03AE, r22	; 0x8003ae <oldc>
    21ae:	70 93 af 03 	sts	0x03AF, r23	; 0x8003af <oldc+0x1>
    21b2:	80 93 b0 03 	sts	0x03B0, r24	; 0x8003b0 <oldc+0x2>
    21b6:	90 93 b1 03 	sts	0x03B1, r25	; 0x8003b1 <oldc+0x3>
// 			Serial_Send(err); Serial_Send(" ");
// 			Serial_Send(propg*10); Serial_Send(" "); 
// 			Serial_Send(integ*10); Serial_Send(" ");
// 			Serial_Send(derg*10); Serial_Send(" ");
// 			Serial_Send(corr*10); Serial_Send(" ");
			set_giri_coppia(1+corr, 1-corr);
    21ba:	9b 01       	movw	r18, r22
    21bc:	ac 01       	movw	r20, r24
    21be:	60 e0       	ldi	r22, 0x00	; 0
    21c0:	70 e0       	ldi	r23, 0x00	; 0
    21c2:	80 e8       	ldi	r24, 0x80	; 128
    21c4:	9f e3       	ldi	r25, 0x3F	; 63
    21c6:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    21ca:	2b 01       	movw	r4, r22
    21cc:	3c 01       	movw	r6, r24
    21ce:	20 e0       	ldi	r18, 0x00	; 0
    21d0:	30 e0       	ldi	r19, 0x00	; 0
    21d2:	40 e8       	ldi	r20, 0x80	; 128
    21d4:	5f e3       	ldi	r21, 0x3F	; 63
    21d6:	c5 01       	movw	r24, r10
    21d8:	b4 01       	movw	r22, r8
    21da:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    21de:	a3 01       	movw	r20, r6
    21e0:	92 01       	movw	r18, r4
    21e2:	0e 94 ae 1b 	call	0x375c	; 0x375c <set_giri_coppia>
			if(ColoreCasella()!=Nero){
    21e6:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <ColoreCasella>
    21ea:	81 30       	cpi	r24, 0x01	; 1
				rilevaVittima();
    21ec:	49 f0       	breq	.+18     	; 0x2200 <__stack+0x1>
    21ee:	ec da       	rcall	.-2600   	; 0x17c8 <rilevaVittima>
				if(ControllaFinecorsa(vel)) break;
    21f0:	8d 81       	ldd	r24, Y+5	; 0x05
    21f2:	9e 81       	ldd	r25, Y+6	; 0x06
    21f4:	57 d0       	rcall	.+174    	; 0x22a4 <ControllaFinecorsa>
    21f6:	81 11       	cpse	r24, r1
    21f8:	36 c0       	rjmp	.+108    	; 0x2266 <__stack+0x67>
			err=(GA-point);
			propg = err*kp_AvGiro;
			integ += err*ki_AvGiro;
			m=millis();
			derg= ((err-olderr)/((m-oldm)/1000.0))*kd_AvGiro;
			oldm=m;
    21fa:	46 01       	movw	r8, r12
    21fc:	57 01       	movw	r10, r14
    21fe:	02 c0       	rjmp	.+4      	; 0x2204 <__stack+0x5>
    2200:	46 01       	movw	r8, r12
    2202:	57 01       	movw	r10, r14
				rilevaVittima();
				if(ControllaFinecorsa(vel)) break;
			}
			
		}
		SerialN();
    2204:	0e 94 16 1f 	call	0x3e2c	; 0x3e2c <SerialN>
	integ=0;
	kg=0;
	unsigned long m, oldm;
	oldm=millis();
	oldc=0;
	while(!((distanzaCorrente<=5) || (((distanzaCorrente>25) && (distanzaPercorsa())>=30) && (inc_av==piano)))){//esce se
    2208:	c0 90 c9 03 	lds	r12, 0x03C9	; 0x8003c9 <distanzaCorrente>
    220c:	d0 90 ca 03 	lds	r13, 0x03CA	; 0x8003ca <distanzaCorrente+0x1>
    2210:	e0 90 cb 03 	lds	r14, 0x03CB	; 0x8003cb <distanzaCorrente+0x2>
    2214:	f0 90 cc 03 	lds	r15, 0x03CC	; 0x8003cc <distanzaCorrente+0x3>
    2218:	20 e0       	ldi	r18, 0x00	; 0
    221a:	30 e0       	ldi	r19, 0x00	; 0
    221c:	40 ea       	ldi	r20, 0xA0	; 160
    221e:	50 e4       	ldi	r21, 0x40	; 64
    2220:	c7 01       	movw	r24, r14
    2222:	b6 01       	movw	r22, r12
    2224:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    2228:	18 16       	cp	r1, r24
    222a:	ec f4       	brge	.+58     	; 0x2266 <__stack+0x67>
    222c:	20 e0       	ldi	r18, 0x00	; 0
    222e:	30 e0       	ldi	r19, 0x00	; 0
    2230:	48 ec       	ldi	r20, 0xC8	; 200
    2232:	51 e4       	ldi	r21, 0x41	; 65
    2234:	c7 01       	movw	r24, r14
    2236:	b6 01       	movw	r22, r12
    2238:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    223c:	18 16       	cp	r1, r24
    223e:	0c f0       	brlt	.+2      	; 0x2242 <__stack+0x43>
    2240:	85 cd       	rjmp	.-1270   	; 0x1d4c <Avanti30cm+0x246>
    2242:	0e 94 48 1b 	call	0x3690	; 0x3690 <distanzaPercorsa>
    2246:	20 e0       	ldi	r18, 0x00	; 0
    2248:	30 e0       	ldi	r19, 0x00	; 0
    224a:	40 ef       	ldi	r20, 0xF0	; 240
    224c:	51 e4       	ldi	r21, 0x41	; 65
    224e:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    2252:	88 23       	and	r24, r24
    2254:	0c f4       	brge	.+2      	; 0x2258 <__stack+0x59>
    2256:	7a cd       	rjmp	.-1292   	; 0x1d4c <Avanti30cm+0x246>
    2258:	80 91 75 03 	lds	r24, 0x0375	; 0x800375 <inc_av>
    225c:	90 91 76 03 	lds	r25, 0x0376	; 0x800376 <inc_av+0x1>
    2260:	89 2b       	or	r24, r25
    2262:	09 f0       	breq	.+2      	; 0x2266 <__stack+0x67>
    2264:	73 cd       	rjmp	.-1306   	; 0x1d4c <Avanti30cm+0x246>
			}
			
		}
		SerialN();
	}
	vitt_rampa_dx=0;
    2266:	10 92 b3 03 	sts	0x03B3, r1	; 0x8003b3 <vitt_rampa_dx>
	vitt_rampa_sx=0;
    226a:	10 92 b2 03 	sts	0x03B2, r1	; 0x8003b2 <vitt_rampa_sx>
	StopMotori();
    226e:	0e 94 a9 1b 	call	0x3752	; 0x3752 <StopMotori>
	statokit=1;
    2272:	81 e0       	ldi	r24, 0x01	; 1
    2274:	80 93 19 03 	sts	0x0319, r24	; 0x800319 <statokit>
	parallelototale();
    2278:	4d d9       	rcall	.-3430   	; 0x1514 <parallelototale>
}
    227a:	26 96       	adiw	r28, 0x06	; 6
    227c:	0f b6       	in	r0, 0x3f	; 63
    227e:	f8 94       	cli
    2280:	de bf       	out	0x3e, r29	; 62
    2282:	0f be       	out	0x3f, r0	; 63
    2284:	cd bf       	out	0x3d, r28	; 61
    2286:	df 91       	pop	r29
    2288:	cf 91       	pop	r28
    228a:	ff 90       	pop	r15
    228c:	ef 90       	pop	r14
    228e:	df 90       	pop	r13
    2290:	cf 90       	pop	r12
    2292:	bf 90       	pop	r11
    2294:	af 90       	pop	r10
    2296:	9f 90       	pop	r9
    2298:	8f 90       	pop	r8
    229a:	7f 90       	pop	r7
    229c:	6f 90       	pop	r6
    229e:	5f 90       	pop	r5
    22a0:	4f 90       	pop	r4
    22a2:	08 95       	ret

000022a4 <ControllaFinecorsa>:
			_delay_ms(5);
		}
	}
}

char ControllaFinecorsa(int vel){
    22a4:	0f 93       	push	r16
    22a6:	1f 93       	push	r17
    22a8:	cf 93       	push	r28
	char val=0;
	if(countFinecorsa<=4){ 
    22aa:	20 91 f7 02 	lds	r18, 0x02F7	; 0x8002f7 <countFinecorsa>
    22ae:	30 91 f8 02 	lds	r19, 0x02F8	; 0x8002f8 <countFinecorsa+0x1>
    22b2:	25 30       	cpi	r18, 0x05	; 5
    22b4:	31 05       	cpc	r19, r1
    22b6:	08 f0       	brcs	.+2      	; 0x22ba <ControllaFinecorsa+0x16>
    22b8:	c8 c0       	rjmp	.+400    	; 0x244a <ControllaFinecorsa+0x1a6>
    22ba:	8c 01       	movw	r16, r24
		if(DistanzaIR(AvantiDestra)>=6.5  &&  DistanzaIR(AvantiSinistra)>=6.5){
    22bc:	81 e0       	ldi	r24, 0x01	; 1
    22be:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    22c2:	20 e0       	ldi	r18, 0x00	; 0
    22c4:	30 e0       	ldi	r19, 0x00	; 0
    22c6:	40 ed       	ldi	r20, 0xD0	; 208
    22c8:	50 e4       	ldi	r21, 0x40	; 64
    22ca:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    22ce:	88 23       	and	r24, r24
    22d0:	0c f4       	brge	.+2      	; 0x22d4 <ControllaFinecorsa+0x30>
    22d2:	cb c0       	rjmp	.+406    	; 0x246a <ControllaFinecorsa+0x1c6>
    22d4:	80 e0       	ldi	r24, 0x00	; 0
    22d6:	0e 94 34 1c 	call	0x3868	; 0x3868 <DistanzaIR>
    22da:	20 e0       	ldi	r18, 0x00	; 0
    22dc:	30 e0       	ldi	r19, 0x00	; 0
    22de:	40 ed       	ldi	r20, 0xD0	; 208
    22e0:	50 e4       	ldi	r21, 0x40	; 64
    22e2:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    22e6:	88 23       	and	r24, r24
    22e8:	0c f4       	brge	.+2      	; 0x22ec <ControllaFinecorsa+0x48>
    22ea:	bf c0       	rjmp	.+382    	; 0x246a <ControllaFinecorsa+0x1c6>
			FC=finecorsaCentrale();
    22ec:	0e 94 61 1d 	call	0x3ac2	; 0x3ac2 <finecorsaCentrale>
    22f0:	80 93 d1 03 	sts	0x03D1, r24	; 0x8003d1 <FC>
			FDx=finecorsaDX();
    22f4:	0e 94 2d 1d 	call	0x3a5a	; 0x3a5a <finecorsaDX>
    22f8:	80 93 99 03 	sts	0x0399, r24	; 0x800399 <FDx>
			FSx=finecorsaSX();
    22fc:	0e 94 47 1d 	call	0x3a8e	; 0x3a8e <finecorsaSX>
    2300:	80 93 c4 03 	sts	0x03C4, r24	; 0x8003c4 <FSx>
			if((FC==1)||((FDx==1)&&(FSx==1))){
    2304:	90 91 d1 03 	lds	r25, 0x03D1	; 0x8003d1 <FC>
    2308:	91 30       	cpi	r25, 0x01	; 1
    230a:	31 f0       	breq	.+12     	; 0x2318 <ControllaFinecorsa+0x74>
    230c:	90 91 99 03 	lds	r25, 0x0399	; 0x800399 <FDx>
    2310:	91 30       	cpi	r25, 0x01	; 1
    2312:	11 f5       	brne	.+68     	; 0x2358 <ControllaFinecorsa+0xb4>
    2314:	81 30       	cpi	r24, 0x01	; 1
    2316:	11 f5       	brne	.+68     	; 0x235c <ControllaFinecorsa+0xb8>
				ColoreLED(PURPLE);
    2318:	88 e0       	ldi	r24, 0x08	; 8
    231a:	2d d1       	rcall	.+602    	; 0x2576 <ColoreLED>
				dritto(4,-1.2);
    231c:	2a e9       	ldi	r18, 0x9A	; 154
    231e:	39 e9       	ldi	r19, 0x99	; 153
    2320:	49 e9       	ldi	r20, 0x99	; 153
    2322:	5f eb       	ldi	r21, 0xBF	; 191
    2324:	60 e0       	ldi	r22, 0x00	; 0
    2326:	70 e0       	ldi	r23, 0x00	; 0
    2328:	80 e8       	ldi	r24, 0x80	; 128
    232a:	90 e4       	ldi	r25, 0x40	; 64
    232c:	0e 94 c1 1b 	call	0x3782	; 0x3782 <dritto>
				Gira(-ultimoGira);
    2330:	60 91 1a 03 	lds	r22, 0x031A	; 0x80031a <ultimoGira>
    2334:	70 91 1b 03 	lds	r23, 0x031B	; 0x80031b <ultimoGira+0x1>
    2338:	71 95       	neg	r23
    233a:	61 95       	neg	r22
    233c:	71 09       	sbc	r23, r1
    233e:	07 2e       	mov	r0, r23
    2340:	00 0c       	add	r0, r0
    2342:	88 0b       	sbc	r24, r24
    2344:	99 0b       	sbc	r25, r25
    2346:	0e 94 b0 21 	call	0x4360	; 0x4360 <__floatsisf>
    234a:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <Gira>
				parallelototale();
				Avanti30cm(vel);
    234e:	e2 d8       	rcall	.-3644   	; 0x1514 <parallelototale>
    2350:	c8 01       	movw	r24, r16
    2352:	d9 db       	rcall	.-2126   	; 0x1b06 <Avanti30cm>
				val=1;
    2354:	c1 e0       	ldi	r28, 0x01	; 1
    2356:	03 c0       	rjmp	.+6      	; 0x235e <ControllaFinecorsa+0xba>
		}
	}
}

char ControllaFinecorsa(int vel){
	char val=0;
    2358:	c0 e0       	ldi	r28, 0x00	; 0
    235a:	01 c0       	rjmp	.+2      	; 0x235e <ControllaFinecorsa+0xba>
    235c:	c0 e0       	ldi	r28, 0x00	; 0
				Gira(-ultimoGira);
				parallelototale();
				Avanti30cm(vel);
				val=1;
			}
			FDx=finecorsaDX();
    235e:	0e 94 2d 1d 	call	0x3a5a	; 0x3a5a <finecorsaDX>
    2362:	80 93 99 03 	sts	0x0399, r24	; 0x800399 <FDx>
			if(FDx==1){
    2366:	81 30       	cpi	r24, 0x01	; 1
				ColoreLED(ORANGE);
    2368:	79 f5       	brne	.+94     	; 0x23c8 <ControllaFinecorsa+0x124>
    236a:	84 e0       	ldi	r24, 0x04	; 4
    236c:	04 d1       	rcall	.+520    	; 0x2576 <ColoreLED>
				dritto(5,-1);
    236e:	20 e0       	ldi	r18, 0x00	; 0
    2370:	30 e0       	ldi	r19, 0x00	; 0
    2372:	40 e8       	ldi	r20, 0x80	; 128
    2374:	5f eb       	ldi	r21, 0xBF	; 191
    2376:	60 e0       	ldi	r22, 0x00	; 0
    2378:	70 e0       	ldi	r23, 0x00	; 0
    237a:	80 ea       	ldi	r24, 0xA0	; 160
    237c:	90 e4       	ldi	r25, 0x40	; 64
    237e:	0e 94 c1 1b 	call	0x3782	; 0x3782 <dritto>
				Gira(-35);
    2382:	60 e0       	ldi	r22, 0x00	; 0
    2384:	70 e0       	ldi	r23, 0x00	; 0
    2386:	8c e0       	ldi	r24, 0x0C	; 12
    2388:	92 ec       	ldi	r25, 0xC2	; 194
    238a:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <Gira>
				dritto(16,1);
    238e:	20 e0       	ldi	r18, 0x00	; 0
    2390:	30 e0       	ldi	r19, 0x00	; 0
    2392:	40 e8       	ldi	r20, 0x80	; 128
    2394:	5f e3       	ldi	r21, 0x3F	; 63
    2396:	60 e0       	ldi	r22, 0x00	; 0
    2398:	70 e0       	ldi	r23, 0x00	; 0
    239a:	80 e8       	ldi	r24, 0x80	; 128
    239c:	91 e4       	ldi	r25, 0x41	; 65
    239e:	0e 94 c1 1b 	call	0x3782	; 0x3782 <dritto>
				Gira(0);
    23a2:	60 e0       	ldi	r22, 0x00	; 0
    23a4:	70 e0       	ldi	r23, 0x00	; 0
    23a6:	cb 01       	movw	r24, r22
    23a8:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <Gira>
				dritto(12,-1);
    23ac:	20 e0       	ldi	r18, 0x00	; 0
    23ae:	30 e0       	ldi	r19, 0x00	; 0
    23b0:	40 e8       	ldi	r20, 0x80	; 128
    23b2:	5f eb       	ldi	r21, 0xBF	; 191
    23b4:	60 e0       	ldi	r22, 0x00	; 0
    23b6:	70 e0       	ldi	r23, 0x00	; 0
    23b8:	80 e4       	ldi	r24, 0x40	; 64
    23ba:	91 e4       	ldi	r25, 0x41	; 65
				parallelototale();
    23bc:	0e 94 c1 1b 	call	0x3782	; 0x3782 <dritto>
				Avanti30cm(vel);
    23c0:	a9 d8       	rcall	.-3758   	; 0x1514 <parallelototale>
    23c2:	c8 01       	movw	r24, r16
    23c4:	a0 db       	rcall	.-2240   	; 0x1b06 <Avanti30cm>
				val=1;
    23c6:	c1 e0       	ldi	r28, 0x01	; 1
			}
			FSx=finecorsaSX();
    23c8:	0e 94 47 1d 	call	0x3a8e	; 0x3a8e <finecorsaSX>
    23cc:	80 93 c4 03 	sts	0x03C4, r24	; 0x8003c4 <FSx>
			if(FSx==1){
    23d0:	81 30       	cpi	r24, 0x01	; 1
				ColoreLED(PINKColor);
    23d2:	b9 f5       	brne	.+110    	; 0x2442 <ControllaFinecorsa+0x19e>
    23d4:	87 e0       	ldi	r24, 0x07	; 7
    23d6:	cf d0       	rcall	.+414    	; 0x2576 <ColoreLED>
				set_giri(-giriFinecorsa);//cambiare
    23d8:	6d ec       	ldi	r22, 0xCD	; 205
    23da:	7c ec       	ldi	r23, 0xCC	; 204
    23dc:	8c e8       	ldi	r24, 0x8C	; 140
    23de:	9f eb       	ldi	r25, 0xBF	; 191
    23e0:	0e 94 8a 1b 	call	0x3714	; 0x3714 <set_giri>
				dritto(5,-1);
    23e4:	20 e0       	ldi	r18, 0x00	; 0
    23e6:	30 e0       	ldi	r19, 0x00	; 0
    23e8:	40 e8       	ldi	r20, 0x80	; 128
    23ea:	5f eb       	ldi	r21, 0xBF	; 191
    23ec:	60 e0       	ldi	r22, 0x00	; 0
    23ee:	70 e0       	ldi	r23, 0x00	; 0
    23f0:	80 ea       	ldi	r24, 0xA0	; 160
    23f2:	90 e4       	ldi	r25, 0x40	; 64
    23f4:	0e 94 c1 1b 	call	0x3782	; 0x3782 <dritto>
				Gira(35);
    23f8:	60 e0       	ldi	r22, 0x00	; 0
    23fa:	70 e0       	ldi	r23, 0x00	; 0
    23fc:	8c e0       	ldi	r24, 0x0C	; 12
    23fe:	92 e4       	ldi	r25, 0x42	; 66
    2400:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <Gira>
				dritto(16,1);
    2404:	20 e0       	ldi	r18, 0x00	; 0
    2406:	30 e0       	ldi	r19, 0x00	; 0
    2408:	40 e8       	ldi	r20, 0x80	; 128
    240a:	5f e3       	ldi	r21, 0x3F	; 63
    240c:	60 e0       	ldi	r22, 0x00	; 0
    240e:	70 e0       	ldi	r23, 0x00	; 0
    2410:	80 e8       	ldi	r24, 0x80	; 128
    2412:	91 e4       	ldi	r25, 0x41	; 65
    2414:	0e 94 c1 1b 	call	0x3782	; 0x3782 <dritto>
				Gira(-0.1);
    2418:	6d ec       	ldi	r22, 0xCD	; 205
    241a:	7c ec       	ldi	r23, 0xCC	; 204
    241c:	8c ec       	ldi	r24, 0xCC	; 204
    241e:	9d eb       	ldi	r25, 0xBD	; 189
    2420:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <Gira>
				dritto(12,-1);
    2424:	20 e0       	ldi	r18, 0x00	; 0
    2426:	30 e0       	ldi	r19, 0x00	; 0
    2428:	40 e8       	ldi	r20, 0x80	; 128
    242a:	5f eb       	ldi	r21, 0xBF	; 191
    242c:	60 e0       	ldi	r22, 0x00	; 0
    242e:	70 e0       	ldi	r23, 0x00	; 0
    2430:	80 e4       	ldi	r24, 0x40	; 64
				parallelototale();
    2432:	91 e4       	ldi	r25, 0x41	; 65
    2434:	0e 94 c1 1b 	call	0x3782	; 0x3782 <dritto>
				Avanti30cm(vel);
    2438:	6d d8       	rcall	.-3878   	; 0x1514 <parallelototale>
    243a:	c8 01       	movw	r24, r16
				val=1;
			}
			SpegniLED();
    243c:	64 db       	rcall	.-2360   	; 0x1b06 <Avanti30cm>
    243e:	f6 d0       	rcall	.+492    	; 0x262c <SpegniLED>
    2440:	09 c0       	rjmp	.+18     	; 0x2454 <ControllaFinecorsa+0x1b0>
    2442:	f4 d0       	rcall	.+488    	; 0x262c <SpegniLED>
    2444:	c1 30       	cpi	r28, 0x01	; 1
	}else
	{
		val=0;
		countFinecorsa=0;
	}
	if(val==1)countFinecorsa++;
    2446:	31 f0       	breq	.+12     	; 0x2454 <ControllaFinecorsa+0x1b0>
    2448:	11 c0       	rjmp	.+34     	; 0x246c <ControllaFinecorsa+0x1c8>
    244a:	10 92 f8 02 	sts	0x02F8, r1	; 0x8002f8 <countFinecorsa+0x1>
			SpegniLED();
		}
	}else
	{
		val=0;
		countFinecorsa=0;
    244e:	10 92 f7 02 	sts	0x02F7, r1	; 0x8002f7 <countFinecorsa>
    2452:	0b c0       	rjmp	.+22     	; 0x246a <ControllaFinecorsa+0x1c6>
    2454:	80 91 f7 02 	lds	r24, 0x02F7	; 0x8002f7 <countFinecorsa>
	}
	if(val==1)countFinecorsa++;
    2458:	90 91 f8 02 	lds	r25, 0x02F8	; 0x8002f8 <countFinecorsa+0x1>
    245c:	01 96       	adiw	r24, 0x01	; 1
    245e:	90 93 f8 02 	sts	0x02F8, r25	; 0x8002f8 <countFinecorsa+0x1>
    2462:	80 93 f7 02 	sts	0x02F7, r24	; 0x8002f7 <countFinecorsa>
    2466:	c1 e0       	ldi	r28, 0x01	; 1
    2468:	01 c0       	rjmp	.+2      	; 0x246c <ControllaFinecorsa+0x1c8>
    246a:	c0 e0       	ldi	r28, 0x00	; 0
    246c:	8c 2f       	mov	r24, r28
	return val;
}
    246e:	cf 91       	pop	r28
    2470:	1f 91       	pop	r17
    2472:	0f 91       	pop	r16
    2474:	08 95       	ret

00002476 <led_strip_write>:
void SpegniLED1(){
	ColoreLED1(SPENTO);
}
 
void __attribute__((noinline)) led_strip_write(rgb_color * colors, unsigned int count)
{
    2476:	fc 01       	movw	r30, r24
		LED_STRIP_PORT &= ~(1<<LED_STRIP_PIN);
    2478:	a0 98       	cbi	0x14, 0	; 20
		LED_STRIP_DDR |= (1<<LED_STRIP_PIN);
    247a:	98 9a       	sbi	0x13, 0	; 19
		cli();
    247c:	f8 94       	cli
		while(count--)
    247e:	9b 01       	movw	r18, r22
    2480:	21 50       	subi	r18, 0x01	; 1
    2482:	31 09       	sbc	r19, r1
    2484:	67 2b       	or	r22, r23
    2486:	09 f4       	brne	.+2      	; 0x248a <led_strip_write+0x14>
    2488:	24 c0       	rjmp	.+72     	; 0x24d2 <led_strip_asm_end28+0x8>
		{
			asm volatile(
    248a:	01 90       	ld	r0, Z+
    248c:	00 80       	ld	r0, Z
    248e:	07 d0       	rcall	.+14     	; 0x249e <send_led_strip_byte28>
    2490:	02 90       	ld	r0, -Z
    2492:	05 d0       	rcall	.+10     	; 0x249e <send_led_strip_byte28>
    2494:	01 90       	ld	r0, Z+
    2496:	01 90       	ld	r0, Z+
    2498:	01 90       	ld	r0, Z+
    249a:	01 d0       	rcall	.+2      	; 0x249e <send_led_strip_byte28>
    249c:	16 c0       	rjmp	.+44     	; 0x24ca <led_strip_asm_end28>

0000249e <send_led_strip_byte28>:
    249e:	07 d0       	rcall	.+14     	; 0x24ae <send_led_strip_bit28>
    24a0:	06 d0       	rcall	.+12     	; 0x24ae <send_led_strip_bit28>
    24a2:	05 d0       	rcall	.+10     	; 0x24ae <send_led_strip_bit28>
    24a4:	04 d0       	rcall	.+8      	; 0x24ae <send_led_strip_bit28>
    24a6:	03 d0       	rcall	.+6      	; 0x24ae <send_led_strip_bit28>
    24a8:	02 d0       	rcall	.+4      	; 0x24ae <send_led_strip_bit28>
    24aa:	01 d0       	rcall	.+2      	; 0x24ae <send_led_strip_bit28>
    24ac:	00 c0       	rjmp	.+0      	; 0x24ae <send_led_strip_bit28>

000024ae <send_led_strip_bit28>:
    24ae:	a0 9a       	sbi	0x14, 0	; 20
    24b0:	00 1c       	adc	r0, r0
    24b2:	00 00       	nop
    24b4:	00 00       	nop
    24b6:	08 f0       	brcs	.+2      	; 0x24ba <send_led_strip_bit28+0xc>
    24b8:	a0 98       	cbi	0x14, 0	; 20
	...
    24c2:	00 00       	nop
    24c4:	08 f4       	brcc	.+2      	; 0x24c8 <send_led_strip_bit28+0x1a>
    24c6:	a0 98       	cbi	0x14, 0	; 20
    24c8:	08 95       	ret

000024ca <led_strip_asm_end28>:
void __attribute__((noinline)) led_strip_write(rgb_color * colors, unsigned int count)
{
		LED_STRIP_PORT &= ~(1<<LED_STRIP_PIN);
		LED_STRIP_DDR |= (1<<LED_STRIP_PIN);
		cli();
		while(count--)
    24ca:	21 50       	subi	r18, 0x01	; 1
    24cc:	31 09       	sbc	r19, r1
    24ce:	08 f0       	brcs	.+2      	; 0x24d2 <led_strip_asm_end28+0x8>
    24d0:	dc cf       	rjmp	.-72     	; 0x248a <led_strip_write+0x14>
			: "0" (colors),
			"I" (_SFR_IO_ADDR(LED_STRIP_PORT)),
			"I" (LED_STRIP_PIN)
			);
		}
		sei();
    24d2:	78 94       	sei
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    24d4:	8f e3       	ldi	r24, 0x3F	; 63
    24d6:	91 e0       	ldi	r25, 0x01	; 1
    24d8:	01 97       	sbiw	r24, 0x01	; 1
    24da:	f1 f7       	brne	.-4      	; 0x24d8 <led_strip_asm_end28+0xe>
    24dc:	00 c0       	rjmp	.+0      	; 0x24de <led_strip_asm_end28+0x14>
    24de:	00 00       	nop
    24e0:	08 95       	ret

000024e2 <led1_strip_write>:
		_delay_us(80);
}

void __attribute__((noinline)) led1_strip_write(rgb_color * colors, unsigned int count)
{
    24e2:	fc 01       	movw	r30, r24
	LED1_STRIP_PORT &= ~(1<<LED1_STRIP_PIN);
    24e4:	a2 98       	cbi	0x14, 2	; 20
	LED1_STRIP_DDR |= (1<<LED1_STRIP_PIN);
    24e6:	9a 9a       	sbi	0x13, 2	; 19
	cli();
    24e8:	f8 94       	cli
	while(count--)
    24ea:	9b 01       	movw	r18, r22
    24ec:	21 50       	subi	r18, 0x01	; 1
    24ee:	31 09       	sbc	r19, r1
    24f0:	67 2b       	or	r22, r23
    24f2:	09 f4       	brne	.+2      	; 0x24f6 <led1_strip_write+0x14>
    24f4:	24 c0       	rjmp	.+72     	; 0x253e <led_strip_asm_end83+0x8>
	{
		asm volatile(
    24f6:	01 90       	ld	r0, Z+
    24f8:	00 80       	ld	r0, Z
    24fa:	07 d0       	rcall	.+14     	; 0x250a <send_led_strip_byte83>
    24fc:	02 90       	ld	r0, -Z
    24fe:	05 d0       	rcall	.+10     	; 0x250a <send_led_strip_byte83>
    2500:	01 90       	ld	r0, Z+
    2502:	01 90       	ld	r0, Z+
    2504:	01 90       	ld	r0, Z+
    2506:	01 d0       	rcall	.+2      	; 0x250a <send_led_strip_byte83>
    2508:	16 c0       	rjmp	.+44     	; 0x2536 <led_strip_asm_end83>

0000250a <send_led_strip_byte83>:
    250a:	07 d0       	rcall	.+14     	; 0x251a <send_led_strip_bit83>
    250c:	06 d0       	rcall	.+12     	; 0x251a <send_led_strip_bit83>
    250e:	05 d0       	rcall	.+10     	; 0x251a <send_led_strip_bit83>
    2510:	04 d0       	rcall	.+8      	; 0x251a <send_led_strip_bit83>
    2512:	03 d0       	rcall	.+6      	; 0x251a <send_led_strip_bit83>
    2514:	02 d0       	rcall	.+4      	; 0x251a <send_led_strip_bit83>
    2516:	01 d0       	rcall	.+2      	; 0x251a <send_led_strip_bit83>
    2518:	00 c0       	rjmp	.+0      	; 0x251a <send_led_strip_bit83>

0000251a <send_led_strip_bit83>:
    251a:	a2 9a       	sbi	0x14, 2	; 20
    251c:	00 1c       	adc	r0, r0
    251e:	00 00       	nop
    2520:	00 00       	nop
    2522:	08 f0       	brcs	.+2      	; 0x2526 <send_led_strip_bit83+0xc>
    2524:	a2 98       	cbi	0x14, 2	; 20
	...
    252e:	00 00       	nop
    2530:	08 f4       	brcc	.+2      	; 0x2534 <send_led_strip_bit83+0x1a>
    2532:	a2 98       	cbi	0x14, 2	; 20
    2534:	08 95       	ret

00002536 <led_strip_asm_end83>:
void __attribute__((noinline)) led1_strip_write(rgb_color * colors, unsigned int count)
{
	LED1_STRIP_PORT &= ~(1<<LED1_STRIP_PIN);
	LED1_STRIP_DDR |= (1<<LED1_STRIP_PIN);
	cli();
	while(count--)
    2536:	21 50       	subi	r18, 0x01	; 1
    2538:	31 09       	sbc	r19, r1
    253a:	08 f0       	brcs	.+2      	; 0x253e <led_strip_asm_end83+0x8>
    253c:	dc cf       	rjmp	.-72     	; 0x24f6 <led1_strip_write+0x14>
		: "0" (colors),
		"I" (_SFR_IO_ADDR(LED1_STRIP_PORT)),
		"I" (LED1_STRIP_PIN)
		);
	}
	sei();
    253e:	78 94       	sei
    2540:	8f e3       	ldi	r24, 0x3F	; 63
    2542:	91 e0       	ldi	r25, 0x01	; 1
    2544:	01 97       	sbiw	r24, 0x01	; 1
    2546:	f1 f7       	brne	.-4      	; 0x2544 <led_strip_asm_end83+0xe>
    2548:	00 c0       	rjmp	.+0      	; 0x254a <led_strip_asm_end83+0x14>
    254a:	00 00       	nop
    254c:	08 95       	ret

0000254e <led_color>:
	_delay_us(80);
	
}

void led_color(rgb_color * colors){
	if(LedGara==1){
    254e:	20 91 da 02 	lds	r18, 0x02DA	; 0x8002da <LedGara>
    2552:	21 30       	cpi	r18, 0x01	; 1
    2554:	21 f4       	brne	.+8      	; 0x255e <led_color+0x10>
		led_strip_write(colors, LED_COUNT);
    2556:	61 e0       	ldi	r22, 0x01	; 1
    2558:	70 e0       	ldi	r23, 0x00	; 0
    255a:	8d cf       	rjmp	.-230    	; 0x2476 <led_strip_write>
    255c:	08 95       	ret
	}
	else{
		colors[0].red=0;
    255e:	fc 01       	movw	r30, r24
    2560:	10 82       	st	Z, r1
		colors[0].green=0;
    2562:	11 82       	std	Z+1, r1	; 0x01
		colors[0].blue=0;
    2564:	12 82       	std	Z+2, r1	; 0x02
		led_strip_write(colors, LED_COUNT);
    2566:	61 e0       	ldi	r22, 0x01	; 1
    2568:	70 e0       	ldi	r23, 0x00	; 0
    256a:	85 cf       	rjmp	.-246    	; 0x2476 <led_strip_write>
    256c:	08 95       	ret

0000256e <led1_color>:
	}
}

void led1_color(rgb_color * colors){
	
		led1_strip_write(colors, LED_COUNT);
    256e:	61 e0       	ldi	r22, 0x01	; 1
    2570:	70 e0       	ldi	r23, 0x00	; 0
    2572:	b7 cf       	rjmp	.-146    	; 0x24e2 <led1_strip_write>
    2574:	08 95       	ret

00002576 <ColoreLED>:
	
}

void ColoreLED(enum colori COLORE){
		switch (COLORE){
    2576:	90 e0       	ldi	r25, 0x00	; 0
    2578:	8a 30       	cpi	r24, 0x0A	; 10
    257a:	91 05       	cpc	r25, r1
    257c:	08 f0       	brcs	.+2      	; 0x2580 <ColoreLED+0xa>
    257e:	4d c0       	rjmp	.+154    	; 0x261a <ColoreLED+0xa4>
    2580:	fc 01       	movw	r30, r24
    2582:	88 27       	eor	r24, r24
    2584:	e6 58       	subi	r30, 0x86	; 134
    2586:	ff 4f       	sbci	r31, 0xFF	; 255
    2588:	8f 4f       	sbci	r24, 0xFF	; 255
    258a:	0c 94 0a 23 	jmp	0x4614	; 0x4614 <__tablejump2__>
  		case RED:
  			colors[0].red=255;
    258e:	e3 ed       	ldi	r30, 0xD3	; 211
    2590:	f2 e0       	ldi	r31, 0x02	; 2
    2592:	8f ef       	ldi	r24, 0xFF	; 255
    2594:	80 83       	st	Z, r24
  			colors[0].green=0;
    2596:	11 82       	std	Z+1, r1	; 0x01
  			colors[0].blue=0;
    2598:	12 82       	std	Z+2, r1	; 0x02
  			break;
    259a:	44 c0       	rjmp	.+136    	; 0x2624 <ColoreLED+0xae>
 		case BLUE:
 		colors[0].red=0;
    259c:	e3 ed       	ldi	r30, 0xD3	; 211
    259e:	f2 e0       	ldi	r31, 0x02	; 2
    25a0:	10 82       	st	Z, r1
 		colors[0].green=0;
    25a2:	11 82       	std	Z+1, r1	; 0x01
 		colors[0].blue=255;
    25a4:	8f ef       	ldi	r24, 0xFF	; 255
    25a6:	82 83       	std	Z+2, r24	; 0x02
 		break;
    25a8:	3d c0       	rjmp	.+122    	; 0x2624 <ColoreLED+0xae>
  		case GREEN:
  			colors[0].red=0;
    25aa:	e3 ed       	ldi	r30, 0xD3	; 211
    25ac:	f2 e0       	ldi	r31, 0x02	; 2
    25ae:	10 82       	st	Z, r1
  			colors[0].green=255;
    25b0:	8f ef       	ldi	r24, 0xFF	; 255
    25b2:	81 83       	std	Z+1, r24	; 0x01
  			colors[0].blue=0;
    25b4:	12 82       	std	Z+2, r1	; 0x02
 			break;
    25b6:	36 c0       	rjmp	.+108    	; 0x2624 <ColoreLED+0xae>
 		case SPENTO:
 			colors[0].red=0;
    25b8:	e3 ed       	ldi	r30, 0xD3	; 211
    25ba:	f2 e0       	ldi	r31, 0x02	; 2
    25bc:	10 82       	st	Z, r1
 			colors[0].green=0;
    25be:	11 82       	std	Z+1, r1	; 0x01
 			colors[0].blue=0;
    25c0:	12 82       	std	Z+2, r1	; 0x02
 			break;
    25c2:	30 c0       	rjmp	.+96     	; 0x2624 <ColoreLED+0xae>
  		case YELLOW:
  			colors[0].red=255;
    25c4:	e3 ed       	ldi	r30, 0xD3	; 211
    25c6:	f2 e0       	ldi	r31, 0x02	; 2
    25c8:	8f ef       	ldi	r24, 0xFF	; 255
    25ca:	80 83       	st	Z, r24
  			colors[0].green=255;
    25cc:	81 83       	std	Z+1, r24	; 0x01
  			colors[0].blue=0;
    25ce:	12 82       	std	Z+2, r1	; 0x02
  			break;
    25d0:	29 c0       	rjmp	.+82     	; 0x2624 <ColoreLED+0xae>
  		case ORANGE:
  			colors[0].red=255;
    25d2:	e3 ed       	ldi	r30, 0xD3	; 211
    25d4:	f2 e0       	ldi	r31, 0x02	; 2
    25d6:	8f ef       	ldi	r24, 0xFF	; 255
    25d8:	80 83       	st	Z, r24
  			colors[0].green=127;
    25da:	8f e7       	ldi	r24, 0x7F	; 127
    25dc:	81 83       	std	Z+1, r24	; 0x01
  			colors[0].blue=0;
    25de:	12 82       	std	Z+2, r1	; 0x02
  			break;
    25e0:	21 c0       	rjmp	.+66     	; 0x2624 <ColoreLED+0xae>
  		case WHITE:
  			colors[0].red=255;
    25e2:	e3 ed       	ldi	r30, 0xD3	; 211
    25e4:	f2 e0       	ldi	r31, 0x02	; 2
    25e6:	8f ef       	ldi	r24, 0xFF	; 255
    25e8:	80 83       	st	Z, r24
  			colors[0].green=255;
    25ea:	81 83       	std	Z+1, r24	; 0x01
  			colors[0].blue=255;
    25ec:	82 83       	std	Z+2, r24	; 0x02
  			break;
    25ee:	1a c0       	rjmp	.+52     	; 0x2624 <ColoreLED+0xae>
  		
  		case PINKColor:
  			colors[0].red=255;
    25f0:	e3 ed       	ldi	r30, 0xD3	; 211
    25f2:	f2 e0       	ldi	r31, 0x02	; 2
    25f4:	8f ef       	ldi	r24, 0xFF	; 255
    25f6:	80 83       	st	Z, r24
  			colors[0].green=0;
    25f8:	11 82       	std	Z+1, r1	; 0x01
  			colors[0].blue=255;
    25fa:	82 83       	std	Z+2, r24	; 0x02
  			break;
    25fc:	13 c0       	rjmp	.+38     	; 0x2624 <ColoreLED+0xae>
  	
  		case PURPLE:
  			colors[0].red=100;
    25fe:	e3 ed       	ldi	r30, 0xD3	; 211
    2600:	f2 e0       	ldi	r31, 0x02	; 2
    2602:	84 e6       	ldi	r24, 0x64	; 100
    2604:	80 83       	st	Z, r24
  			colors[0].green=0;
    2606:	11 82       	std	Z+1, r1	; 0x01
  			colors[0].blue=100;
    2608:	82 83       	std	Z+2, r24	; 0x02
			 break;
    260a:	0c c0       	rjmp	.+24     	; 0x2624 <ColoreLED+0xae>
  	
  		case GRAY:
  			colors[0].red=150;
    260c:	e3 ed       	ldi	r30, 0xD3	; 211
    260e:	f2 e0       	ldi	r31, 0x02	; 2
    2610:	86 e9       	ldi	r24, 0x96	; 150
    2612:	80 83       	st	Z, r24
  			colors[0].green=150;
    2614:	81 83       	std	Z+1, r24	; 0x01
  			colors[0].blue=150;
    2616:	82 83       	std	Z+2, r24	; 0x02
  			break;
    2618:	05 c0       	rjmp	.+10     	; 0x2624 <ColoreLED+0xae>
 	
		default:
			colors[0].red=0;
    261a:	e3 ed       	ldi	r30, 0xD3	; 211
    261c:	f2 e0       	ldi	r31, 0x02	; 2
    261e:	10 82       	st	Z, r1
			colors[0].green=0;
    2620:	11 82       	std	Z+1, r1	; 0x01
			colors[0].blue=0;
    2622:	12 82       	std	Z+2, r1	; 0x02
			break;
		}	
		led_color(colors);
    2624:	83 ed       	ldi	r24, 0xD3	; 211
    2626:	92 e0       	ldi	r25, 0x02	; 2
    2628:	92 cf       	rjmp	.-220    	; 0x254e <led_color>
    262a:	08 95       	ret

0000262c <SpegniLED>:
#define LED1_STRIP_DDR  DDRG
#define LED1_STRIP_PIN  2


void SpegniLED(){
	ColoreLED(SPENTO);
    262c:	86 e0       	ldi	r24, 0x06	; 6
    262e:	a3 cf       	rjmp	.-186    	; 0x2576 <ColoreLED>
    2630:	08 95       	ret

00002632 <ColoreLED1>:
			break;
		}	
		led_color(colors);
}
void ColoreLED1(enum colori COLORE){
	switch (COLORE){
    2632:	90 e0       	ldi	r25, 0x00	; 0
    2634:	8a 30       	cpi	r24, 0x0A	; 10
    2636:	91 05       	cpc	r25, r1
    2638:	08 f0       	brcs	.+2      	; 0x263c <ColoreLED1+0xa>
    263a:	4d c0       	rjmp	.+154    	; 0x26d6 <ColoreLED1+0xa4>
    263c:	fc 01       	movw	r30, r24
    263e:	88 27       	eor	r24, r24
    2640:	ec 57       	subi	r30, 0x7C	; 124
    2642:	ff 4f       	sbci	r31, 0xFF	; 255
    2644:	8f 4f       	sbci	r24, 0xFF	; 255
    2646:	0c 94 0a 23 	jmp	0x4614	; 0x4614 <__tablejump2__>
		case RED:
		colors[0].red=255;
    264a:	e3 ed       	ldi	r30, 0xD3	; 211
    264c:	f2 e0       	ldi	r31, 0x02	; 2
    264e:	8f ef       	ldi	r24, 0xFF	; 255
    2650:	80 83       	st	Z, r24
		colors[0].green=0;
    2652:	11 82       	std	Z+1, r1	; 0x01
		colors[0].blue=0;
    2654:	12 82       	std	Z+2, r1	; 0x02
		break;
    2656:	44 c0       	rjmp	.+136    	; 0x26e0 <ColoreLED1+0xae>
		case BLUE:
		colors[0].red=0;
    2658:	e3 ed       	ldi	r30, 0xD3	; 211
    265a:	f2 e0       	ldi	r31, 0x02	; 2
    265c:	10 82       	st	Z, r1
		colors[0].green=0;
    265e:	11 82       	std	Z+1, r1	; 0x01
		colors[0].blue=255;
    2660:	8f ef       	ldi	r24, 0xFF	; 255
    2662:	82 83       	std	Z+2, r24	; 0x02
		break;
    2664:	3d c0       	rjmp	.+122    	; 0x26e0 <ColoreLED1+0xae>
		case GREEN:
		colors[0].red=0;
    2666:	e3 ed       	ldi	r30, 0xD3	; 211
    2668:	f2 e0       	ldi	r31, 0x02	; 2
    266a:	10 82       	st	Z, r1
		colors[0].green=255;
    266c:	8f ef       	ldi	r24, 0xFF	; 255
    266e:	81 83       	std	Z+1, r24	; 0x01
		colors[0].blue=0;
    2670:	12 82       	std	Z+2, r1	; 0x02
		break;
    2672:	36 c0       	rjmp	.+108    	; 0x26e0 <ColoreLED1+0xae>
		case SPENTO:
		colors[0].red=0;
    2674:	e3 ed       	ldi	r30, 0xD3	; 211
    2676:	f2 e0       	ldi	r31, 0x02	; 2
    2678:	10 82       	st	Z, r1
		colors[0].green=0;
    267a:	11 82       	std	Z+1, r1	; 0x01
		colors[0].blue=0;
    267c:	12 82       	std	Z+2, r1	; 0x02
		break;
    267e:	30 c0       	rjmp	.+96     	; 0x26e0 <ColoreLED1+0xae>
		case YELLOW:
		colors[0].red=255;
    2680:	e3 ed       	ldi	r30, 0xD3	; 211
    2682:	f2 e0       	ldi	r31, 0x02	; 2
    2684:	8f ef       	ldi	r24, 0xFF	; 255
    2686:	80 83       	st	Z, r24
		colors[0].green=255;
    2688:	81 83       	std	Z+1, r24	; 0x01
		colors[0].blue=0;
    268a:	12 82       	std	Z+2, r1	; 0x02
		break;
    268c:	29 c0       	rjmp	.+82     	; 0x26e0 <ColoreLED1+0xae>
		case ORANGE:
		colors[0].red=255;
    268e:	e3 ed       	ldi	r30, 0xD3	; 211
    2690:	f2 e0       	ldi	r31, 0x02	; 2
    2692:	8f ef       	ldi	r24, 0xFF	; 255
    2694:	80 83       	st	Z, r24
		colors[0].green=127;
    2696:	8f e7       	ldi	r24, 0x7F	; 127
    2698:	81 83       	std	Z+1, r24	; 0x01
		colors[0].blue=0;
    269a:	12 82       	std	Z+2, r1	; 0x02
		break;
    269c:	21 c0       	rjmp	.+66     	; 0x26e0 <ColoreLED1+0xae>
		case WHITE:
		colors[0].red=255;
    269e:	e3 ed       	ldi	r30, 0xD3	; 211
    26a0:	f2 e0       	ldi	r31, 0x02	; 2
    26a2:	8f ef       	ldi	r24, 0xFF	; 255
    26a4:	80 83       	st	Z, r24
		colors[0].green=255;
    26a6:	81 83       	std	Z+1, r24	; 0x01
		colors[0].blue=255;
    26a8:	82 83       	std	Z+2, r24	; 0x02
		break;
    26aa:	1a c0       	rjmp	.+52     	; 0x26e0 <ColoreLED1+0xae>
		
		case PINKColor:
		colors[0].red=255;
    26ac:	e3 ed       	ldi	r30, 0xD3	; 211
    26ae:	f2 e0       	ldi	r31, 0x02	; 2
    26b0:	8f ef       	ldi	r24, 0xFF	; 255
    26b2:	80 83       	st	Z, r24
		colors[0].green=0;
    26b4:	11 82       	std	Z+1, r1	; 0x01
		colors[0].blue=255;
    26b6:	82 83       	std	Z+2, r24	; 0x02
		break;
    26b8:	13 c0       	rjmp	.+38     	; 0x26e0 <ColoreLED1+0xae>
		
		case PURPLE:
		colors[0].red=145;
    26ba:	e3 ed       	ldi	r30, 0xD3	; 211
    26bc:	f2 e0       	ldi	r31, 0x02	; 2
    26be:	81 e9       	ldi	r24, 0x91	; 145
    26c0:	80 83       	st	Z, r24
		colors[0].green=0;
    26c2:	11 82       	std	Z+1, r1	; 0x01
		colors[0].blue=145;
    26c4:	82 83       	std	Z+2, r24	; 0x02
		break;
    26c6:	0c c0       	rjmp	.+24     	; 0x26e0 <ColoreLED1+0xae>
		
		case GRAY:
		colors[0].red=150;
    26c8:	e3 ed       	ldi	r30, 0xD3	; 211
    26ca:	f2 e0       	ldi	r31, 0x02	; 2
    26cc:	86 e9       	ldi	r24, 0x96	; 150
    26ce:	80 83       	st	Z, r24
		colors[0].green=150;
    26d0:	81 83       	std	Z+1, r24	; 0x01
		colors[0].blue=150;
    26d2:	82 83       	std	Z+2, r24	; 0x02
		break;
    26d4:	05 c0       	rjmp	.+10     	; 0x26e0 <ColoreLED1+0xae>
		
		default:
		colors[0].red=0;
    26d6:	e3 ed       	ldi	r30, 0xD3	; 211
    26d8:	f2 e0       	ldi	r31, 0x02	; 2
    26da:	10 82       	st	Z, r1
		colors[0].green=0;
    26dc:	11 82       	std	Z+1, r1	; 0x01
		colors[0].blue=0;
    26de:	12 82       	std	Z+2, r1	; 0x02
		break;
	}
	led1_color(colors);
    26e0:	83 ed       	ldi	r24, 0xD3	; 211
    26e2:	92 e0       	ldi	r25, 0x02	; 2
    26e4:	44 cf       	rjmp	.-376    	; 0x256e <led1_color>
    26e6:	08 95       	ret

000026e8 <__vector_17>:
    26e8:	1f 92       	push	r1
    26ea:	0f 92       	push	r0
    26ec:	0f b6       	in	r0, 0x3f	; 63
    26ee:	0f 92       	push	r0
    26f0:	11 24       	eor	r1, r1
    26f2:	0b b6       	in	r0, 0x3b	; 59
    26f4:	0f 92       	push	r0
    26f6:	4f 92       	push	r4
    26f8:	5f 92       	push	r5
    26fa:	6f 92       	push	r6
    26fc:	7f 92       	push	r7
    26fe:	8f 92       	push	r8
    2700:	9f 92       	push	r9
    2702:	af 92       	push	r10
    2704:	bf 92       	push	r11
    2706:	cf 92       	push	r12
    2708:	df 92       	push	r13
    270a:	ef 92       	push	r14
    270c:	ff 92       	push	r15
    270e:	0f 93       	push	r16
    2710:	1f 93       	push	r17
    2712:	2f 93       	push	r18
    2714:	3f 93       	push	r19
    2716:	4f 93       	push	r20
    2718:	5f 93       	push	r21
    271a:	6f 93       	push	r22
    271c:	7f 93       	push	r23
    271e:	8f 93       	push	r24
    2720:	9f 93       	push	r25
    2722:	af 93       	push	r26
    2724:	bf 93       	push	r27
    2726:	cf 93       	push	r28
    2728:	df 93       	push	r29
    272a:	ef 93       	push	r30
    272c:	ff 93       	push	r31
    272e:	10 92 96 04 	sts	0x0496, r1	; 0x800496 <cia>
    2732:	80 91 96 04 	lds	r24, 0x0496	; 0x800496 <cia>
    2736:	84 30       	cpi	r24, 0x04	; 4
    2738:	e8 f4       	brcc	.+58     	; 0x2774 <__vector_17+0x8c>
    273a:	e0 91 96 04 	lds	r30, 0x0496	; 0x800496 <cia>
    273e:	f0 e0       	ldi	r31, 0x00	; 0
    2740:	ee 0f       	add	r30, r30
    2742:	ff 1f       	adc	r31, r31
    2744:	ee 0f       	add	r30, r30
    2746:	ff 1f       	adc	r31, r31
    2748:	e7 5a       	subi	r30, 0xA7	; 167
    274a:	fb 4f       	sbci	r31, 0xFB	; 251
    274c:	80 81       	ld	r24, Z
    274e:	91 81       	ldd	r25, Z+1	; 0x01
    2750:	a2 81       	ldd	r26, Z+2	; 0x02
    2752:	b3 81       	ldd	r27, Z+3	; 0x03
    2754:	01 96       	adiw	r24, 0x01	; 1
    2756:	a1 1d       	adc	r26, r1
    2758:	b1 1d       	adc	r27, r1
    275a:	80 83       	st	Z, r24
    275c:	91 83       	std	Z+1, r25	; 0x01
    275e:	a2 83       	std	Z+2, r26	; 0x02
    2760:	b3 83       	std	Z+3, r27	; 0x03
    2762:	80 91 96 04 	lds	r24, 0x0496	; 0x800496 <cia>
    2766:	8f 5f       	subi	r24, 0xFF	; 255
    2768:	80 93 96 04 	sts	0x0496, r24	; 0x800496 <cia>
    276c:	80 91 96 04 	lds	r24, 0x0496	; 0x800496 <cia>
    2770:	84 30       	cpi	r24, 0x04	; 4
    2772:	18 f3       	brcs	.-58     	; 0x273a <__vector_17+0x52>
    2774:	80 91 ef 03 	lds	r24, 0x03EF	; 0x8003ef <N>
    2778:	8f 5f       	subi	r24, 0xFF	; 255
    277a:	80 93 ef 03 	sts	0x03EF, r24	; 0x8003ef <N>
    277e:	80 91 ef 03 	lds	r24, 0x03EF	; 0x8003ef <N>
    2782:	84 30       	cpi	r24, 0x04	; 4
    2784:	10 f0       	brcs	.+4      	; 0x278a <__vector_17+0xa2>
    2786:	10 92 ef 03 	sts	0x03EF, r1	; 0x8003ef <N>
    278a:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    278e:	f0 e0       	ldi	r31, 0x00	; 0
    2790:	ee 0f       	add	r30, r30
    2792:	ff 1f       	adc	r31, r31
    2794:	ec 53       	subi	r30, 0x3C	; 60
    2796:	fb 4f       	sbci	r31, 0xFB	; 251
    2798:	80 81       	ld	r24, Z
    279a:	91 81       	ldd	r25, Z+1	; 0x01
    279c:	01 96       	adiw	r24, 0x01	; 1
    279e:	91 83       	std	Z+1, r25	; 0x01
    27a0:	80 83       	st	Z, r24
    27a2:	c0 90 20 04 	lds	r12, 0x0420	; 0x800420 <k_millis>
    27a6:	d0 90 21 04 	lds	r13, 0x0421	; 0x800421 <k_millis+0x1>
    27aa:	e0 90 22 04 	lds	r14, 0x0422	; 0x800422 <k_millis+0x2>
    27ae:	f0 90 23 04 	lds	r15, 0x0423	; 0x800423 <k_millis+0x3>
    27b2:	60 91 7e 04 	lds	r22, 0x047E	; 0x80047e <v_millis>
    27b6:	70 91 7f 04 	lds	r23, 0x047F	; 0x80047f <v_millis+0x1>
    27ba:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <v_millis+0x2>
    27be:	90 91 81 04 	lds	r25, 0x0481	; 0x800481 <v_millis+0x3>
    27c2:	0e 94 ae 21 	call	0x435c	; 0x435c <__floatunsisf>
    27c6:	a7 01       	movw	r20, r14
    27c8:	96 01       	movw	r18, r12
    27ca:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    27ce:	0e 94 82 21 	call	0x4304	; 0x4304 <__fixunssfsi>
    27d2:	60 93 7e 04 	sts	0x047E, r22	; 0x80047e <v_millis>
    27d6:	70 93 7f 04 	sts	0x047F, r23	; 0x80047f <v_millis+0x1>
    27da:	80 93 80 04 	sts	0x0480, r24	; 0x800480 <v_millis+0x2>
    27de:	90 93 81 04 	sts	0x0481, r25	; 0x800481 <v_millis+0x3>
    27e2:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    27e6:	f0 e0       	ldi	r31, 0x00	; 0
    27e8:	e5 56       	subi	r30, 0x65	; 101
    27ea:	fb 4f       	sbci	r31, 0xFB	; 251
    27ec:	80 81       	ld	r24, Z
    27ee:	81 11       	cpse	r24, r1
    27f0:	fe c0       	rjmp	.+508    	; 0x29ee <__vector_17+0x306>
    27f2:	c0 91 ef 03 	lds	r28, 0x03EF	; 0x8003ef <N>
    27f6:	d0 e0       	ldi	r29, 0x00	; 0
    27f8:	80 90 92 04 	lds	r8, 0x0492	; 0x800492 <Kgiri>
    27fc:	90 90 93 04 	lds	r9, 0x0493	; 0x800493 <Kgiri+0x1>
    2800:	a0 90 94 04 	lds	r10, 0x0494	; 0x800494 <Kgiri+0x2>
    2804:	b0 90 95 04 	lds	r11, 0x0495	; 0x800495 <Kgiri+0x3>
    2808:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    280c:	f0 e0       	ldi	r31, 0x00	; 0
    280e:	ee 0f       	add	r30, r30
    2810:	ff 1f       	adc	r31, r31
    2812:	ee 0f       	add	r30, r30
    2814:	ff 1f       	adc	r31, r31
    2816:	e7 5c       	subi	r30, 0xC7	; 199
    2818:	fb 4f       	sbci	r31, 0xFB	; 251
    281a:	c0 80       	ld	r12, Z
    281c:	d1 80       	ldd	r13, Z+1	; 0x01
    281e:	e2 80       	ldd	r14, Z+2	; 0x02
    2820:	f3 80       	ldd	r15, Z+3	; 0x03
    2822:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2826:	f0 e0       	ldi	r31, 0x00	; 0
    2828:	ee 0f       	add	r30, r30
    282a:	ff 1f       	adc	r31, r31
    282c:	ee 0f       	add	r30, r30
    282e:	ff 1f       	adc	r31, r31
    2830:	ed 55       	subi	r30, 0x5D	; 93
    2832:	fb 4f       	sbci	r31, 0xFB	; 251
    2834:	40 80       	ld	r4, Z
    2836:	51 80       	ldd	r5, Z+1	; 0x01
    2838:	62 80       	ldd	r6, Z+2	; 0x02
    283a:	73 80       	ldd	r7, Z+3	; 0x03
    283c:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2840:	f0 e0       	ldi	r31, 0x00	; 0
    2842:	ee 0f       	add	r30, r30
    2844:	ff 1f       	adc	r31, r31
    2846:	ee 0f       	add	r30, r30
    2848:	ff 1f       	adc	r31, r31
    284a:	e7 5b       	subi	r30, 0xB7	; 183
    284c:	fb 4f       	sbci	r31, 0xFB	; 251
    284e:	20 81       	ld	r18, Z
    2850:	31 81       	ldd	r19, Z+1	; 0x01
    2852:	42 81       	ldd	r20, Z+2	; 0x02
    2854:	53 81       	ldd	r21, Z+3	; 0x03
    2856:	a0 91 bb 04 	lds	r26, 0x04BB	; 0x8004bb <TOP_PID>
    285a:	b0 91 bc 04 	lds	r27, 0x04BC	; 0x8004bc <TOP_PID+0x1>
    285e:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2862:	f0 e0       	ldi	r31, 0x00	; 0
    2864:	e9 56       	subi	r30, 0x69	; 105
    2866:	fb 4f       	sbci	r31, 0xFB	; 251
    2868:	10 81       	ld	r17, Z
    286a:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    286e:	f0 e0       	ldi	r31, 0x00	; 0
    2870:	ec 5d       	subi	r30, 0xDC	; 220
    2872:	fb 4f       	sbci	r31, 0xFB	; 251
    2874:	00 81       	ld	r16, Z
    2876:	0e 94 12 23 	call	0x4624	; 0x4624 <__muluhisi3>
    287a:	dc 01       	movw	r26, r24
    287c:	cb 01       	movw	r24, r22
    287e:	84 19       	sub	r24, r4
    2880:	95 09       	sbc	r25, r5
    2882:	a6 09       	sbc	r26, r6
    2884:	b7 09       	sbc	r27, r7
    2886:	bc 01       	movw	r22, r24
    2888:	cd 01       	movw	r24, r26
    288a:	6c 0d       	add	r22, r12
    288c:	7d 1d       	adc	r23, r13
    288e:	8e 1d       	adc	r24, r14
    2890:	9f 1d       	adc	r25, r15
    2892:	0e 94 ae 21 	call	0x435c	; 0x435c <__floatunsisf>
    2896:	9b 01       	movw	r18, r22
    2898:	ac 01       	movw	r20, r24
    289a:	c5 01       	movw	r24, r10
    289c:	b4 01       	movw	r22, r8
    289e:	0e 94 15 21 	call	0x422a	; 0x422a <__divsf3>
    28a2:	6b 01       	movw	r12, r22
    28a4:	7c 01       	movw	r14, r24
    28a6:	61 2f       	mov	r22, r17
    28a8:	11 0f       	add	r17, r17
    28aa:	77 0b       	sbc	r23, r23
    28ac:	88 0b       	sbc	r24, r24
    28ae:	99 0b       	sbc	r25, r25
    28b0:	0e 94 b0 21 	call	0x4360	; 0x4360 <__floatsisf>
    28b4:	9b 01       	movw	r18, r22
    28b6:	ac 01       	movw	r20, r24
    28b8:	c7 01       	movw	r24, r14
    28ba:	b6 01       	movw	r22, r12
    28bc:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    28c0:	6b 01       	movw	r12, r22
    28c2:	7c 01       	movw	r14, r24
    28c4:	60 2f       	mov	r22, r16
    28c6:	00 0f       	add	r16, r16
    28c8:	77 0b       	sbc	r23, r23
    28ca:	88 0b       	sbc	r24, r24
    28cc:	99 0b       	sbc	r25, r25
    28ce:	0e 94 b0 21 	call	0x4360	; 0x4360 <__floatsisf>
    28d2:	9b 01       	movw	r18, r22
    28d4:	ac 01       	movw	r20, r24
    28d6:	c7 01       	movw	r24, r14
    28d8:	b6 01       	movw	r22, r12
    28da:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    28de:	cc 0f       	add	r28, r28
    28e0:	dd 1f       	adc	r29, r29
    28e2:	cc 0f       	add	r28, r28
    28e4:	dd 1f       	adc	r29, r29
    28e6:	c0 5c       	subi	r28, 0xC0	; 192
    28e8:	dc 4f       	sbci	r29, 0xFC	; 252
    28ea:	68 83       	st	Y, r22
    28ec:	79 83       	std	Y+1, r23	; 0x01
    28ee:	8a 83       	std	Y+2, r24	; 0x02
    28f0:	9b 83       	std	Y+3, r25	; 0x03
    28f2:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    28f6:	f0 e0       	ldi	r31, 0x00	; 0
    28f8:	ee 0f       	add	r30, r30
    28fa:	ff 1f       	adc	r31, r31
    28fc:	ee 0f       	add	r30, r30
    28fe:	ff 1f       	adc	r31, r31
    2900:	e0 5c       	subi	r30, 0xC0	; 192
    2902:	fc 4f       	sbci	r31, 0xFC	; 252
    2904:	60 81       	ld	r22, Z
    2906:	71 81       	ldd	r23, Z+1	; 0x01
    2908:	82 81       	ldd	r24, Z+2	; 0x02
    290a:	93 81       	ldd	r25, Z+3	; 0x03
    290c:	0e 94 33 1e 	call	0x3c66	; 0x3c66 <ABS>
    2910:	20 e0       	ldi	r18, 0x00	; 0
    2912:	30 e0       	ldi	r19, 0x00	; 0
    2914:	40 e2       	ldi	r20, 0x20	; 32
    2916:	50 e4       	ldi	r21, 0x40	; 64
    2918:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    291c:	88 23       	and	r24, r24
    291e:	0c f0       	brlt	.+2      	; 0x2922 <__vector_17+0x23a>
    2920:	41 c0       	rjmp	.+130    	; 0x29a4 <__vector_17+0x2bc>
    2922:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2926:	f0 e0       	ldi	r31, 0x00	; 0
    2928:	ee 0f       	add	r30, r30
    292a:	ff 1f       	adc	r31, r31
    292c:	ee 0f       	add	r30, r30
    292e:	ff 1f       	adc	r31, r31
    2930:	e0 5c       	subi	r30, 0xC0	; 192
    2932:	fc 4f       	sbci	r31, 0xFC	; 252
    2934:	60 81       	ld	r22, Z
    2936:	71 81       	ldd	r23, Z+1	; 0x01
    2938:	82 81       	ldd	r24, Z+2	; 0x02
    293a:	93 81       	ldd	r25, Z+3	; 0x03
    293c:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2940:	f0 e0       	ldi	r31, 0x00	; 0
    2942:	ee 0f       	add	r30, r30
    2944:	ff 1f       	adc	r31, r31
    2946:	ee 0f       	add	r30, r30
    2948:	ff 1f       	adc	r31, r31
    294a:	e4 5d       	subi	r30, 0xD4	; 212
    294c:	fc 4f       	sbci	r31, 0xFC	; 252
    294e:	20 81       	ld	r18, Z
    2950:	31 81       	ldd	r19, Z+1	; 0x01
    2952:	42 81       	ldd	r20, Z+2	; 0x02
    2954:	53 81       	ldd	r21, Z+3	; 0x03
    2956:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    295a:	0e 94 33 1e 	call	0x3c66	; 0x3c66 <ABS>
    295e:	20 e0       	ldi	r18, 0x00	; 0
    2960:	30 e0       	ldi	r19, 0x00	; 0
    2962:	40 e0       	ldi	r20, 0x00	; 0
    2964:	5f e3       	ldi	r21, 0x3F	; 63
    2966:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    296a:	88 23       	and	r24, r24
    296c:	dc f4       	brge	.+54     	; 0x29a4 <__vector_17+0x2bc>
    296e:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2972:	f0 e0       	ldi	r31, 0x00	; 0
    2974:	a0 91 ef 03 	lds	r26, 0x03EF	; 0x8003ef <N>
    2978:	b0 e0       	ldi	r27, 0x00	; 0
    297a:	aa 0f       	add	r26, r26
    297c:	bb 1f       	adc	r27, r27
    297e:	aa 0f       	add	r26, r26
    2980:	bb 1f       	adc	r27, r27
    2982:	a0 5c       	subi	r26, 0xC0	; 192
    2984:	bc 4f       	sbci	r27, 0xFC	; 252
    2986:	8d 91       	ld	r24, X+
    2988:	9d 91       	ld	r25, X+
    298a:	0d 90       	ld	r0, X+
    298c:	bc 91       	ld	r27, X
    298e:	a0 2d       	mov	r26, r0
    2990:	ee 0f       	add	r30, r30
    2992:	ff 1f       	adc	r31, r31
    2994:	ee 0f       	add	r30, r30
    2996:	ff 1f       	adc	r31, r31
    2998:	e7 50       	subi	r30, 0x07	; 7
    299a:	fd 4f       	sbci	r31, 0xFD	; 253
    299c:	80 83       	st	Z, r24
    299e:	91 83       	std	Z+1, r25	; 0x01
    29a0:	a2 83       	std	Z+2, r26	; 0x02
    29a2:	b3 83       	std	Z+3, r27	; 0x03
    29a4:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    29a8:	f0 e0       	ldi	r31, 0x00	; 0
    29aa:	a0 91 ef 03 	lds	r26, 0x03EF	; 0x8003ef <N>
    29ae:	b0 e0       	ldi	r27, 0x00	; 0
    29b0:	aa 0f       	add	r26, r26
    29b2:	bb 1f       	adc	r27, r27
    29b4:	aa 0f       	add	r26, r26
    29b6:	bb 1f       	adc	r27, r27
    29b8:	a0 5c       	subi	r26, 0xC0	; 192
    29ba:	bc 4f       	sbci	r27, 0xFC	; 252
    29bc:	8d 91       	ld	r24, X+
    29be:	9d 91       	ld	r25, X+
    29c0:	0d 90       	ld	r0, X+
    29c2:	bc 91       	ld	r27, X
    29c4:	a0 2d       	mov	r26, r0
    29c6:	ee 0f       	add	r30, r30
    29c8:	ff 1f       	adc	r31, r31
    29ca:	ee 0f       	add	r30, r30
    29cc:	ff 1f       	adc	r31, r31
    29ce:	e4 5d       	subi	r30, 0xD4	; 212
    29d0:	fc 4f       	sbci	r31, 0xFC	; 252
    29d2:	80 83       	st	Z, r24
    29d4:	91 83       	std	Z+1, r25	; 0x01
    29d6:	a2 83       	std	Z+2, r26	; 0x02
    29d8:	b3 83       	std	Z+3, r27	; 0x03
    29da:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    29de:	f0 e0       	ldi	r31, 0x00	; 0
    29e0:	e5 56       	subi	r30, 0x65	; 101
    29e2:	fb 4f       	sbci	r31, 0xFB	; 251
    29e4:	81 e0       	ldi	r24, 0x01	; 1
    29e6:	80 83       	st	Z, r24
    29e8:	80 93 69 04 	sts	0x0469, r24	; 0x800469 <ok_pid>
    29ec:	5b c0       	rjmp	.+182    	; 0x2aa4 <__vector_17+0x3bc>
    29ee:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    29f2:	f0 e0       	ldi	r31, 0x00	; 0
    29f4:	ee 0f       	add	r30, r30
    29f6:	ff 1f       	adc	r31, r31
    29f8:	ee 0f       	add	r30, r30
    29fa:	ff 1f       	adc	r31, r31
    29fc:	e7 50       	subi	r30, 0x07	; 7
    29fe:	fd 4f       	sbci	r31, 0xFD	; 253
    2a00:	60 81       	ld	r22, Z
    2a02:	71 81       	ldd	r23, Z+1	; 0x01
    2a04:	82 81       	ldd	r24, Z+2	; 0x02
    2a06:	93 81       	ldd	r25, Z+3	; 0x03
    2a08:	0e 94 33 1e 	call	0x3c66	; 0x3c66 <ABS>
    2a0c:	2d ec       	ldi	r18, 0xCD	; 205
    2a0e:	3c ec       	ldi	r19, 0xCC	; 204
    2a10:	4c ec       	ldi	r20, 0xCC	; 204
    2a12:	5d e3       	ldi	r21, 0x3D	; 61
    2a14:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    2a18:	18 16       	cp	r1, r24
    2a1a:	74 f0       	brlt	.+28     	; 0x2a38 <__vector_17+0x350>
    2a1c:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2a20:	f0 e0       	ldi	r31, 0x00	; 0
    2a22:	ee 0f       	add	r30, r30
    2a24:	ff 1f       	adc	r31, r31
    2a26:	ee 0f       	add	r30, r30
    2a28:	ff 1f       	adc	r31, r31
    2a2a:	e7 50       	subi	r30, 0x07	; 7
    2a2c:	fd 4f       	sbci	r31, 0xFD	; 253
    2a2e:	10 82       	st	Z, r1
    2a30:	11 82       	std	Z+1, r1	; 0x01
    2a32:	12 82       	std	Z+2, r1	; 0x02
    2a34:	13 82       	std	Z+3, r1	; 0x03
    2a36:	28 c0       	rjmp	.+80     	; 0x2a88 <__vector_17+0x3a0>
    2a38:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2a3c:	f0 e0       	ldi	r31, 0x00	; 0
    2a3e:	ee 0f       	add	r30, r30
    2a40:	ff 1f       	adc	r31, r31
    2a42:	ee 0f       	add	r30, r30
    2a44:	ff 1f       	adc	r31, r31
    2a46:	e7 50       	subi	r30, 0x07	; 7
    2a48:	fd 4f       	sbci	r31, 0xFD	; 253
    2a4a:	60 81       	ld	r22, Z
    2a4c:	71 81       	ldd	r23, Z+1	; 0x01
    2a4e:	82 81       	ldd	r24, Z+2	; 0x02
    2a50:	93 81       	ldd	r25, Z+3	; 0x03
    2a52:	c0 91 ef 03 	lds	r28, 0x03EF	; 0x8003ef <N>
    2a56:	d0 e0       	ldi	r29, 0x00	; 0
    2a58:	cc 0f       	add	r28, r28
    2a5a:	dd 1f       	adc	r29, r29
    2a5c:	cc 0f       	add	r28, r28
    2a5e:	dd 1f       	adc	r29, r29
    2a60:	c7 50       	subi	r28, 0x07	; 7
    2a62:	dd 4f       	sbci	r29, 0xFD	; 253
    2a64:	c8 80       	ld	r12, Y
    2a66:	d9 80       	ldd	r13, Y+1	; 0x01
    2a68:	ea 80       	ldd	r14, Y+2	; 0x02
    2a6a:	fb 80       	ldd	r15, Y+3	; 0x03
    2a6c:	2d ec       	ldi	r18, 0xCD	; 205
    2a6e:	3c ec       	ldi	r19, 0xCC	; 204
    2a70:	4c ec       	ldi	r20, 0xCC	; 204
    2a72:	5d eb       	ldi	r21, 0xBD	; 189
    2a74:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    2a78:	a7 01       	movw	r20, r14
    2a7a:	96 01       	movw	r18, r12
    2a7c:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    2a80:	68 83       	st	Y, r22
    2a82:	79 83       	std	Y+1, r23	; 0x01
    2a84:	8a 83       	std	Y+2, r24	; 0x02
    2a86:	9b 83       	std	Y+3, r25	; 0x03
    2a88:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2a8c:	f0 e0       	ldi	r31, 0x00	; 0
    2a8e:	ee 0f       	add	r30, r30
    2a90:	ff 1f       	adc	r31, r31
    2a92:	ec 53       	subi	r30, 0x3C	; 60
    2a94:	fb 4f       	sbci	r31, 0xFB	; 251
    2a96:	80 81       	ld	r24, Z
    2a98:	91 81       	ldd	r25, Z+1	; 0x01
    2a9a:	06 97       	sbiw	r24, 0x06	; 6
    2a9c:	18 f0       	brcs	.+6      	; 0x2aa4 <__vector_17+0x3bc>
    2a9e:	81 e0       	ldi	r24, 0x01	; 1
    2aa0:	80 93 69 04 	sts	0x0469, r24	; 0x800469 <ok_pid>
    2aa4:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2aa8:	f0 e0       	ldi	r31, 0x00	; 0
    2aaa:	ee 0f       	add	r30, r30
    2aac:	ff 1f       	adc	r31, r31
    2aae:	ee 0f       	add	r30, r30
    2ab0:	ff 1f       	adc	r31, r31
    2ab2:	e7 50       	subi	r30, 0x07	; 7
    2ab4:	fd 4f       	sbci	r31, 0xFD	; 253
    2ab6:	60 81       	ld	r22, Z
    2ab8:	71 81       	ldd	r23, Z+1	; 0x01
    2aba:	82 81       	ldd	r24, Z+2	; 0x02
    2abc:	93 81       	ldd	r25, Z+3	; 0x03
    2abe:	20 91 9f 04 	lds	r18, 0x049F	; 0x80049f <kdist>
    2ac2:	30 91 a0 04 	lds	r19, 0x04A0	; 0x8004a0 <kdist+0x1>
    2ac6:	40 91 a1 04 	lds	r20, 0x04A1	; 0x8004a1 <kdist+0x2>
    2aca:	50 91 a2 04 	lds	r21, 0x04A2	; 0x8004a2 <kdist+0x3>
    2ace:	c0 91 ef 03 	lds	r28, 0x03EF	; 0x8003ef <N>
    2ad2:	d0 e0       	ldi	r29, 0x00	; 0
    2ad4:	cc 0f       	add	r28, r28
    2ad6:	dd 1f       	adc	r29, r29
    2ad8:	cc 0f       	add	r28, r28
    2ada:	dd 1f       	adc	r29, r29
    2adc:	ca 51       	subi	r28, 0x1A	; 26
    2ade:	dd 4f       	sbci	r29, 0xFD	; 253
    2ae0:	c8 80       	ld	r12, Y
    2ae2:	d9 80       	ldd	r13, Y+1	; 0x01
    2ae4:	ea 80       	ldd	r14, Y+2	; 0x02
    2ae6:	fb 80       	ldd	r15, Y+3	; 0x03
    2ae8:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    2aec:	a7 01       	movw	r20, r14
    2aee:	96 01       	movw	r18, r12
    2af0:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    2af4:	68 83       	st	Y, r22
    2af6:	79 83       	std	Y+1, r23	; 0x01
    2af8:	8a 83       	std	Y+2, r24	; 0x02
    2afa:	9b 83       	std	Y+3, r25	; 0x03
    2afc:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2b00:	f0 e0       	ldi	r31, 0x00	; 0
    2b02:	ee 0f       	add	r30, r30
    2b04:	ff 1f       	adc	r31, r31
    2b06:	ee 0f       	add	r30, r30
    2b08:	ff 1f       	adc	r31, r31
    2b0a:	e7 5f       	subi	r30, 0xF7	; 247
    2b0c:	fc 4f       	sbci	r31, 0xFC	; 252
    2b0e:	60 81       	ld	r22, Z
    2b10:	71 81       	ldd	r23, Z+1	; 0x01
    2b12:	82 81       	ldd	r24, Z+2	; 0x02
    2b14:	93 81       	ldd	r25, Z+3	; 0x03
    2b16:	d0 91 69 04 	lds	r29, 0x0469	; 0x800469 <ok_pid>
    2b1a:	c1 e0       	ldi	r28, 0x01	; 1
    2b1c:	20 e0       	ldi	r18, 0x00	; 0
    2b1e:	30 e0       	ldi	r19, 0x00	; 0
    2b20:	a9 01       	movw	r20, r18
    2b22:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    2b26:	81 11       	cpse	r24, r1
    2b28:	c0 e0       	ldi	r28, 0x00	; 0
    2b2a:	c1 11       	cpse	r28, r1
    2b2c:	07 c0       	rjmp	.+14     	; 0x2b3c <__vector_17+0x454>
    2b2e:	81 e0       	ldi	r24, 0x01	; 1
    2b30:	d1 30       	cpi	r29, 0x01	; 1
    2b32:	09 f0       	breq	.+2      	; 0x2b36 <__vector_17+0x44e>
    2b34:	80 e0       	ldi	r24, 0x00	; 0
    2b36:	88 23       	and	r24, r24
    2b38:	09 f4       	brne	.+2      	; 0x2b3c <__vector_17+0x454>
    2b3a:	29 c3       	rjmp	.+1618   	; 0x318e <__vector_17+0xaa6>
    2b3c:	10 92 69 04 	sts	0x0469, r1	; 0x800469 <ok_pid>
    2b40:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2b44:	f0 e0       	ldi	r31, 0x00	; 0
    2b46:	ee 0f       	add	r30, r30
    2b48:	ff 1f       	adc	r31, r31
    2b4a:	ee 0f       	add	r30, r30
    2b4c:	ff 1f       	adc	r31, r31
    2b4e:	e7 5f       	subi	r30, 0xF7	; 247
    2b50:	fc 4f       	sbci	r31, 0xFC	; 252
    2b52:	60 81       	ld	r22, Z
    2b54:	71 81       	ldd	r23, Z+1	; 0x01
    2b56:	82 81       	ldd	r24, Z+2	; 0x02
    2b58:	93 81       	ldd	r25, Z+3	; 0x03
    2b5a:	20 e0       	ldi	r18, 0x00	; 0
    2b5c:	30 e0       	ldi	r19, 0x00	; 0
    2b5e:	a9 01       	movw	r20, r18
    2b60:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    2b64:	81 11       	cpse	r24, r1
    2b66:	14 c0       	rjmp	.+40     	; 0x2b90 <__vector_17+0x4a8>
    2b68:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2b6c:	f0 e0       	ldi	r31, 0x00	; 0
    2b6e:	ee 0f       	add	r30, r30
    2b70:	ff 1f       	adc	r31, r31
    2b72:	ee 0f       	add	r30, r30
    2b74:	ff 1f       	adc	r31, r31
    2b76:	e7 50       	subi	r30, 0x07	; 7
    2b78:	fd 4f       	sbci	r31, 0xFD	; 253
    2b7a:	60 81       	ld	r22, Z
    2b7c:	71 81       	ldd	r23, Z+1	; 0x01
    2b7e:	82 81       	ldd	r24, Z+2	; 0x02
    2b80:	93 81       	ldd	r25, Z+3	; 0x03
    2b82:	20 e0       	ldi	r18, 0x00	; 0
    2b84:	30 e0       	ldi	r19, 0x00	; 0
    2b86:	a9 01       	movw	r20, r18
    2b88:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    2b8c:	81 11       	cpse	r24, r1
    2b8e:	15 c0       	rjmp	.+42     	; 0x2bba <__vector_17+0x4d2>
    2b90:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2b94:	f0 e0       	ldi	r31, 0x00	; 0
    2b96:	ee 0f       	add	r30, r30
    2b98:	ff 1f       	adc	r31, r31
    2b9a:	ee 0f       	add	r30, r30
    2b9c:	ff 1f       	adc	r31, r31
    2b9e:	e7 5f       	subi	r30, 0xF7	; 247
    2ba0:	fc 4f       	sbci	r31, 0xFC	; 252
    2ba2:	60 81       	ld	r22, Z
    2ba4:	71 81       	ldd	r23, Z+1	; 0x01
    2ba6:	82 81       	ldd	r24, Z+2	; 0x02
    2ba8:	93 81       	ldd	r25, Z+3	; 0x03
    2baa:	20 e0       	ldi	r18, 0x00	; 0
    2bac:	30 e0       	ldi	r19, 0x00	; 0
    2bae:	a9 01       	movw	r20, r18
    2bb0:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    2bb4:	88 23       	and	r24, r24
    2bb6:	09 f4       	brne	.+2      	; 0x2bba <__vector_17+0x4d2>
    2bb8:	d4 c1       	rjmp	.+936    	; 0x2f62 <__vector_17+0x87a>
    2bba:	c0 91 ef 03 	lds	r28, 0x03EF	; 0x8003ef <N>
    2bbe:	d0 e0       	ldi	r29, 0x00	; 0
    2bc0:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2bc4:	f0 e0       	ldi	r31, 0x00	; 0
    2bc6:	ee 0f       	add	r30, r30
    2bc8:	ff 1f       	adc	r31, r31
    2bca:	ee 0f       	add	r30, r30
    2bcc:	ff 1f       	adc	r31, r31
    2bce:	e7 5f       	subi	r30, 0xF7	; 247
    2bd0:	fc 4f       	sbci	r31, 0xFC	; 252
    2bd2:	60 81       	ld	r22, Z
    2bd4:	71 81       	ldd	r23, Z+1	; 0x01
    2bd6:	82 81       	ldd	r24, Z+2	; 0x02
    2bd8:	93 81       	ldd	r25, Z+3	; 0x03
    2bda:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2bde:	f0 e0       	ldi	r31, 0x00	; 0
    2be0:	ee 0f       	add	r30, r30
    2be2:	ff 1f       	adc	r31, r31
    2be4:	ee 0f       	add	r30, r30
    2be6:	ff 1f       	adc	r31, r31
    2be8:	e7 50       	subi	r30, 0x07	; 7
    2bea:	fd 4f       	sbci	r31, 0xFD	; 253
    2bec:	20 81       	ld	r18, Z
    2bee:	31 81       	ldd	r19, Z+1	; 0x01
    2bf0:	42 81       	ldd	r20, Z+2	; 0x02
    2bf2:	53 81       	ldd	r21, Z+3	; 0x03
    2bf4:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    2bf8:	cc 0f       	add	r28, r28
    2bfa:	dd 1f       	adc	r29, r29
    2bfc:	cc 0f       	add	r28, r28
    2bfe:	dd 1f       	adc	r29, r29
    2c00:	cc 50       	subi	r28, 0x0C	; 12
    2c02:	dc 4f       	sbci	r29, 0xFC	; 252
    2c04:	68 83       	st	Y, r22
    2c06:	79 83       	std	Y+1, r23	; 0x01
    2c08:	8a 83       	std	Y+2, r24	; 0x02
    2c0a:	9b 83       	std	Y+3, r25	; 0x03
    2c0c:	c0 91 ef 03 	lds	r28, 0x03EF	; 0x8003ef <N>
    2c10:	d0 e0       	ldi	r29, 0x00	; 0
    2c12:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2c16:	f0 e0       	ldi	r31, 0x00	; 0
    2c18:	ee 0f       	add	r30, r30
    2c1a:	ff 1f       	adc	r31, r31
    2c1c:	ee 0f       	add	r30, r30
    2c1e:	ff 1f       	adc	r31, r31
    2c20:	ec 50       	subi	r30, 0x0C	; 12
    2c22:	fc 4f       	sbci	r31, 0xFC	; 252
    2c24:	60 81       	ld	r22, Z
    2c26:	71 81       	ldd	r23, Z+1	; 0x01
    2c28:	82 81       	ldd	r24, Z+2	; 0x02
    2c2a:	93 81       	ldd	r25, Z+3	; 0x03
    2c2c:	20 e0       	ldi	r18, 0x00	; 0
    2c2e:	30 e0       	ldi	r19, 0x00	; 0
    2c30:	46 e1       	ldi	r20, 0x16	; 22
    2c32:	53 e4       	ldi	r21, 0x43	; 67
    2c34:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    2c38:	cc 0f       	add	r28, r28
    2c3a:	dd 1f       	adc	r29, r29
    2c3c:	cc 0f       	add	r28, r28
    2c3e:	dd 1f       	adc	r29, r29
    2c40:	ce 57       	subi	r28, 0x7E	; 126
    2c42:	db 4f       	sbci	r29, 0xFB	; 251
    2c44:	68 83       	st	Y, r22
    2c46:	79 83       	std	Y+1, r23	; 0x01
    2c48:	8a 83       	std	Y+2, r24	; 0x02
    2c4a:	9b 83       	std	Y+3, r25	; 0x03
    2c4c:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2c50:	f0 e0       	ldi	r31, 0x00	; 0
    2c52:	ee 0f       	add	r30, r30
    2c54:	ff 1f       	adc	r31, r31
    2c56:	ec 53       	subi	r30, 0x3C	; 60
    2c58:	fb 4f       	sbci	r31, 0xFB	; 251
    2c5a:	60 81       	ld	r22, Z
    2c5c:	71 81       	ldd	r23, Z+1	; 0x01
    2c5e:	c0 90 b7 04 	lds	r12, 0x04B7	; 0x8004b7 <kit>
    2c62:	d0 90 b8 04 	lds	r13, 0x04B8	; 0x8004b8 <kit+0x1>
    2c66:	e0 90 b9 04 	lds	r14, 0x04B9	; 0x8004b9 <kit+0x2>
    2c6a:	f0 90 ba 04 	lds	r15, 0x04BA	; 0x8004ba <kit+0x3>
    2c6e:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2c72:	f0 e0       	ldi	r31, 0x00	; 0
    2c74:	ee 0f       	add	r30, r30
    2c76:	ff 1f       	adc	r31, r31
    2c78:	ee 0f       	add	r30, r30
    2c7a:	ff 1f       	adc	r31, r31
    2c7c:	ec 50       	subi	r30, 0x0C	; 12
    2c7e:	fc 4f       	sbci	r31, 0xFC	; 252
    2c80:	40 80       	ld	r4, Z
    2c82:	51 80       	ldd	r5, Z+1	; 0x01
    2c84:	62 80       	ldd	r6, Z+2	; 0x02
    2c86:	73 80       	ldd	r7, Z+3	; 0x03
    2c88:	c0 91 ef 03 	lds	r28, 0x03EF	; 0x8003ef <N>
    2c8c:	d0 e0       	ldi	r29, 0x00	; 0
    2c8e:	cc 0f       	add	r28, r28
    2c90:	dd 1f       	adc	r29, r29
    2c92:	cc 0f       	add	r28, r28
    2c94:	dd 1f       	adc	r29, r29
    2c96:	c8 5d       	subi	r28, 0xD8	; 216
    2c98:	db 4f       	sbci	r29, 0xFB	; 251
    2c9a:	88 80       	ld	r8, Y
    2c9c:	99 80       	ldd	r9, Y+1	; 0x01
    2c9e:	aa 80       	ldd	r10, Y+2	; 0x02
    2ca0:	bb 80       	ldd	r11, Y+3	; 0x03
    2ca2:	80 e0       	ldi	r24, 0x00	; 0
    2ca4:	90 e0       	ldi	r25, 0x00	; 0
    2ca6:	0e 94 ae 21 	call	0x435c	; 0x435c <__floatunsisf>
    2caa:	a7 01       	movw	r20, r14
    2cac:	96 01       	movw	r18, r12
    2cae:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    2cb2:	a3 01       	movw	r20, r6
    2cb4:	92 01       	movw	r18, r4
    2cb6:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    2cba:	a5 01       	movw	r20, r10
    2cbc:	94 01       	movw	r18, r8
    2cbe:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    2cc2:	68 83       	st	Y, r22
    2cc4:	79 83       	std	Y+1, r23	; 0x01
    2cc6:	8a 83       	std	Y+2, r24	; 0x02
    2cc8:	9b 83       	std	Y+3, r25	; 0x03
    2cca:	c0 91 ef 03 	lds	r28, 0x03EF	; 0x8003ef <N>
    2cce:	d0 e0       	ldi	r29, 0x00	; 0
    2cd0:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2cd4:	f0 e0       	ldi	r31, 0x00	; 0
    2cd6:	ee 0f       	add	r30, r30
    2cd8:	ff 1f       	adc	r31, r31
    2cda:	ee 0f       	add	r30, r30
    2cdc:	ff 1f       	adc	r31, r31
    2cde:	ec 50       	subi	r30, 0x0C	; 12
    2ce0:	fc 4f       	sbci	r31, 0xFC	; 252
    2ce2:	60 81       	ld	r22, Z
    2ce4:	71 81       	ldd	r23, Z+1	; 0x01
    2ce6:	82 81       	ldd	r24, Z+2	; 0x02
    2ce8:	93 81       	ldd	r25, Z+3	; 0x03
    2cea:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2cee:	f0 e0       	ldi	r31, 0x00	; 0
    2cf0:	ee 0f       	add	r30, r30
    2cf2:	ff 1f       	adc	r31, r31
    2cf4:	ee 0f       	add	r30, r30
    2cf6:	ff 1f       	adc	r31, r31
    2cf8:	e6 59       	subi	r30, 0x96	; 150
    2cfa:	fb 4f       	sbci	r31, 0xFB	; 251
    2cfc:	20 81       	ld	r18, Z
    2cfe:	31 81       	ldd	r19, Z+1	; 0x01
    2d00:	42 81       	ldd	r20, Z+2	; 0x02
    2d02:	53 81       	ldd	r21, Z+3	; 0x03
    2d04:	c0 90 1c 04 	lds	r12, 0x041C	; 0x80041c <kdt>
    2d08:	d0 90 1d 04 	lds	r13, 0x041D	; 0x80041d <kdt+0x1>
    2d0c:	e0 90 1e 04 	lds	r14, 0x041E	; 0x80041e <kdt+0x2>
    2d10:	f0 90 1f 04 	lds	r15, 0x041F	; 0x80041f <kdt+0x3>
    2d14:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2d18:	f0 e0       	ldi	r31, 0x00	; 0
    2d1a:	ee 0f       	add	r30, r30
    2d1c:	ff 1f       	adc	r31, r31
    2d1e:	ec 53       	subi	r30, 0x3C	; 60
    2d20:	fb 4f       	sbci	r31, 0xFB	; 251
    2d22:	00 81       	ld	r16, Z
    2d24:	11 81       	ldd	r17, Z+1	; 0x01
    2d26:	0e 94 ac 20 	call	0x4158	; 0x4158 <__subsf3>
    2d2a:	a7 01       	movw	r20, r14
    2d2c:	96 01       	movw	r18, r12
    2d2e:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    2d32:	6b 01       	movw	r12, r22
    2d34:	7c 01       	movw	r14, r24
    2d36:	b8 01       	movw	r22, r16
    2d38:	80 e0       	ldi	r24, 0x00	; 0
    2d3a:	90 e0       	ldi	r25, 0x00	; 0
    2d3c:	0e 94 ae 21 	call	0x435c	; 0x435c <__floatunsisf>
    2d40:	9b 01       	movw	r18, r22
    2d42:	ac 01       	movw	r20, r24
    2d44:	c7 01       	movw	r24, r14
    2d46:	b6 01       	movw	r22, r12
    2d48:	0e 94 15 21 	call	0x422a	; 0x422a <__divsf3>
    2d4c:	cc 0f       	add	r28, r28
    2d4e:	dd 1f       	adc	r29, r29
    2d50:	cc 0f       	add	r28, r28
    2d52:	dd 1f       	adc	r29, r29
    2d54:	c8 5f       	subi	r28, 0xF8	; 248
    2d56:	db 4f       	sbci	r29, 0xFB	; 251
    2d58:	68 83       	st	Y, r22
    2d5a:	79 83       	std	Y+1, r23	; 0x01
    2d5c:	8a 83       	std	Y+2, r24	; 0x02
    2d5e:	9b 83       	std	Y+3, r25	; 0x03
    2d60:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2d64:	f0 e0       	ldi	r31, 0x00	; 0
    2d66:	a0 91 ef 03 	lds	r26, 0x03EF	; 0x8003ef <N>
    2d6a:	b0 e0       	ldi	r27, 0x00	; 0
    2d6c:	aa 0f       	add	r26, r26
    2d6e:	bb 1f       	adc	r27, r27
    2d70:	aa 0f       	add	r26, r26
    2d72:	bb 1f       	adc	r27, r27
    2d74:	ac 50       	subi	r26, 0x0C	; 12
    2d76:	bc 4f       	sbci	r27, 0xFC	; 252
    2d78:	8d 91       	ld	r24, X+
    2d7a:	9d 91       	ld	r25, X+
    2d7c:	0d 90       	ld	r0, X+
    2d7e:	bc 91       	ld	r27, X
    2d80:	a0 2d       	mov	r26, r0
    2d82:	ee 0f       	add	r30, r30
    2d84:	ff 1f       	adc	r31, r31
    2d86:	ee 0f       	add	r30, r30
    2d88:	ff 1f       	adc	r31, r31
    2d8a:	e6 59       	subi	r30, 0x96	; 150
    2d8c:	fb 4f       	sbci	r31, 0xFB	; 251
    2d8e:	80 83       	st	Z, r24
    2d90:	91 83       	std	Z+1, r25	; 0x01
    2d92:	a2 83       	std	Z+2, r26	; 0x02
    2d94:	b3 83       	std	Z+3, r27	; 0x03
    2d96:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2d9a:	f0 e0       	ldi	r31, 0x00	; 0
    2d9c:	ee 0f       	add	r30, r30
    2d9e:	ff 1f       	adc	r31, r31
    2da0:	ee 0f       	add	r30, r30
    2da2:	ff 1f       	adc	r31, r31
    2da4:	e8 5d       	subi	r30, 0xD8	; 216
    2da6:	fb 4f       	sbci	r31, 0xFB	; 251
    2da8:	60 81       	ld	r22, Z
    2daa:	71 81       	ldd	r23, Z+1	; 0x01
    2dac:	82 81       	ldd	r24, Z+2	; 0x02
    2dae:	93 81       	ldd	r25, Z+3	; 0x03
    2db0:	2a e9       	ldi	r18, 0x9A	; 154
    2db2:	39 e9       	ldi	r19, 0x99	; 153
    2db4:	49 e1       	ldi	r20, 0x19	; 25
    2db6:	5e e3       	ldi	r21, 0x3E	; 62
    2db8:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    2dbc:	18 16       	cp	r1, r24
    2dbe:	94 f4       	brge	.+36     	; 0x2de4 <__vector_17+0x6fc>
    2dc0:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2dc4:	f0 e0       	ldi	r31, 0x00	; 0
    2dc6:	ee 0f       	add	r30, r30
    2dc8:	ff 1f       	adc	r31, r31
    2dca:	ee 0f       	add	r30, r30
    2dcc:	ff 1f       	adc	r31, r31
    2dce:	e8 5d       	subi	r30, 0xD8	; 216
    2dd0:	fb 4f       	sbci	r31, 0xFB	; 251
    2dd2:	8a e9       	ldi	r24, 0x9A	; 154
    2dd4:	99 e9       	ldi	r25, 0x99	; 153
    2dd6:	a9 e1       	ldi	r26, 0x19	; 25
    2dd8:	be e3       	ldi	r27, 0x3E	; 62
    2dda:	80 83       	st	Z, r24
    2ddc:	91 83       	std	Z+1, r25	; 0x01
    2dde:	a2 83       	std	Z+2, r26	; 0x02
    2de0:	b3 83       	std	Z+3, r27	; 0x03
    2de2:	26 c0       	rjmp	.+76     	; 0x2e30 <__vector_17+0x748>
    2de4:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2de8:	f0 e0       	ldi	r31, 0x00	; 0
    2dea:	ee 0f       	add	r30, r30
    2dec:	ff 1f       	adc	r31, r31
    2dee:	ee 0f       	add	r30, r30
    2df0:	ff 1f       	adc	r31, r31
    2df2:	e8 5d       	subi	r30, 0xD8	; 216
    2df4:	fb 4f       	sbci	r31, 0xFB	; 251
    2df6:	60 81       	ld	r22, Z
    2df8:	71 81       	ldd	r23, Z+1	; 0x01
    2dfa:	82 81       	ldd	r24, Z+2	; 0x02
    2dfc:	93 81       	ldd	r25, Z+3	; 0x03
    2dfe:	2a e9       	ldi	r18, 0x9A	; 154
    2e00:	39 e9       	ldi	r19, 0x99	; 153
    2e02:	49 e1       	ldi	r20, 0x19	; 25
    2e04:	5e eb       	ldi	r21, 0xBE	; 190
    2e06:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    2e0a:	88 23       	and	r24, r24
    2e0c:	8c f4       	brge	.+34     	; 0x2e30 <__vector_17+0x748>
    2e0e:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2e12:	f0 e0       	ldi	r31, 0x00	; 0
    2e14:	ee 0f       	add	r30, r30
    2e16:	ff 1f       	adc	r31, r31
    2e18:	ee 0f       	add	r30, r30
    2e1a:	ff 1f       	adc	r31, r31
    2e1c:	e8 5d       	subi	r30, 0xD8	; 216
    2e1e:	fb 4f       	sbci	r31, 0xFB	; 251
    2e20:	8a e9       	ldi	r24, 0x9A	; 154
    2e22:	99 e9       	ldi	r25, 0x99	; 153
    2e24:	a9 e1       	ldi	r26, 0x19	; 25
    2e26:	be eb       	ldi	r27, 0xBE	; 190
    2e28:	80 83       	st	Z, r24
    2e2a:	91 83       	std	Z+1, r25	; 0x01
    2e2c:	a2 83       	std	Z+2, r26	; 0x02
    2e2e:	b3 83       	std	Z+3, r27	; 0x03
    2e30:	c0 91 ef 03 	lds	r28, 0x03EF	; 0x8003ef <N>
    2e34:	d0 e0       	ldi	r29, 0x00	; 0
    2e36:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2e3a:	f0 e0       	ldi	r31, 0x00	; 0
    2e3c:	ee 0f       	add	r30, r30
    2e3e:	ff 1f       	adc	r31, r31
    2e40:	ee 0f       	add	r30, r30
    2e42:	ff 1f       	adc	r31, r31
    2e44:	ee 57       	subi	r30, 0x7E	; 126
    2e46:	fb 4f       	sbci	r31, 0xFB	; 251
    2e48:	60 81       	ld	r22, Z
    2e4a:	71 81       	ldd	r23, Z+1	; 0x01
    2e4c:	82 81       	ldd	r24, Z+2	; 0x02
    2e4e:	93 81       	ldd	r25, Z+3	; 0x03
    2e50:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2e54:	f0 e0       	ldi	r31, 0x00	; 0
    2e56:	ee 0f       	add	r30, r30
    2e58:	ff 1f       	adc	r31, r31
    2e5a:	ee 0f       	add	r30, r30
    2e5c:	ff 1f       	adc	r31, r31
    2e5e:	e8 5d       	subi	r30, 0xD8	; 216
    2e60:	fb 4f       	sbci	r31, 0xFB	; 251
    2e62:	20 81       	ld	r18, Z
    2e64:	31 81       	ldd	r19, Z+1	; 0x01
    2e66:	42 81       	ldd	r20, Z+2	; 0x02
    2e68:	53 81       	ldd	r21, Z+3	; 0x03
    2e6a:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2e6e:	f0 e0       	ldi	r31, 0x00	; 0
    2e70:	ee 0f       	add	r30, r30
    2e72:	ff 1f       	adc	r31, r31
    2e74:	ee 0f       	add	r30, r30
    2e76:	ff 1f       	adc	r31, r31
    2e78:	e8 5f       	subi	r30, 0xF8	; 248
    2e7a:	fb 4f       	sbci	r31, 0xFB	; 251
    2e7c:	c0 80       	ld	r12, Z
    2e7e:	d1 80       	ldd	r13, Z+1	; 0x01
    2e80:	e2 80       	ldd	r14, Z+2	; 0x02
    2e82:	f3 80       	ldd	r15, Z+3	; 0x03
    2e84:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2e88:	f0 e0       	ldi	r31, 0x00	; 0
    2e8a:	ee 0f       	add	r30, r30
    2e8c:	ff 1f       	adc	r31, r31
    2e8e:	ee 0f       	add	r30, r30
    2e90:	ff 1f       	adc	r31, r31
    2e92:	e4 5e       	subi	r30, 0xE4	; 228
    2e94:	fc 4f       	sbci	r31, 0xFC	; 252
    2e96:	80 80       	ld	r8, Z
    2e98:	91 80       	ldd	r9, Z+1	; 0x01
    2e9a:	a2 80       	ldd	r10, Z+2	; 0x02
    2e9c:	b3 80       	ldd	r11, Z+3	; 0x03
    2e9e:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    2ea2:	a7 01       	movw	r20, r14
    2ea4:	96 01       	movw	r18, r12
    2ea6:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    2eaa:	a5 01       	movw	r20, r10
    2eac:	94 01       	movw	r18, r8
    2eae:	0e 94 ad 20 	call	0x415a	; 0x415a <__addsf3>
    2eb2:	cc 0f       	add	r28, r28
    2eb4:	dd 1f       	adc	r29, r29
    2eb6:	cc 0f       	add	r28, r28
    2eb8:	dd 1f       	adc	r29, r29
    2eba:	c0 5b       	subi	r28, 0xB0	; 176
    2ebc:	dc 4f       	sbci	r29, 0xFC	; 252
    2ebe:	68 83       	st	Y, r22
    2ec0:	79 83       	std	Y+1, r23	; 0x01
    2ec2:	8a 83       	std	Y+2, r24	; 0x02
    2ec4:	9b 83       	std	Y+3, r25	; 0x03
    2ec6:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2eca:	f0 e0       	ldi	r31, 0x00	; 0
    2ecc:	ee 0f       	add	r30, r30
    2ece:	ff 1f       	adc	r31, r31
    2ed0:	ee 0f       	add	r30, r30
    2ed2:	ff 1f       	adc	r31, r31
    2ed4:	e0 5b       	subi	r30, 0xB0	; 176
    2ed6:	fc 4f       	sbci	r31, 0xFC	; 252
    2ed8:	60 81       	ld	r22, Z
    2eda:	71 81       	ldd	r23, Z+1	; 0x01
    2edc:	82 81       	ldd	r24, Z+2	; 0x02
    2ede:	93 81       	ldd	r25, Z+3	; 0x03
    2ee0:	20 e0       	ldi	r18, 0x00	; 0
    2ee2:	30 ec       	ldi	r19, 0xC0	; 192
    2ee4:	4f e7       	ldi	r20, 0x7F	; 127
    2ee6:	54 e4       	ldi	r21, 0x44	; 68
    2ee8:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    2eec:	18 16       	cp	r1, r24
    2eee:	94 f4       	brge	.+36     	; 0x2f14 <__vector_17+0x82c>
    2ef0:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2ef4:	f0 e0       	ldi	r31, 0x00	; 0
    2ef6:	ee 0f       	add	r30, r30
    2ef8:	ff 1f       	adc	r31, r31
    2efa:	ee 0f       	add	r30, r30
    2efc:	ff 1f       	adc	r31, r31
    2efe:	e0 5b       	subi	r30, 0xB0	; 176
    2f00:	fc 4f       	sbci	r31, 0xFC	; 252
    2f02:	80 e0       	ldi	r24, 0x00	; 0
    2f04:	90 ec       	ldi	r25, 0xC0	; 192
    2f06:	af e7       	ldi	r26, 0x7F	; 127
    2f08:	b4 e4       	ldi	r27, 0x44	; 68
    2f0a:	80 83       	st	Z, r24
    2f0c:	91 83       	std	Z+1, r25	; 0x01
    2f0e:	a2 83       	std	Z+2, r26	; 0x02
    2f10:	b3 83       	std	Z+3, r27	; 0x03
    2f12:	34 c0       	rjmp	.+104    	; 0x2f7c <__vector_17+0x894>
    2f14:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2f18:	f0 e0       	ldi	r31, 0x00	; 0
    2f1a:	ee 0f       	add	r30, r30
    2f1c:	ff 1f       	adc	r31, r31
    2f1e:	ee 0f       	add	r30, r30
    2f20:	ff 1f       	adc	r31, r31
    2f22:	e0 5b       	subi	r30, 0xB0	; 176
    2f24:	fc 4f       	sbci	r31, 0xFC	; 252
    2f26:	60 81       	ld	r22, Z
    2f28:	71 81       	ldd	r23, Z+1	; 0x01
    2f2a:	82 81       	ldd	r24, Z+2	; 0x02
    2f2c:	93 81       	ldd	r25, Z+3	; 0x03
    2f2e:	20 e0       	ldi	r18, 0x00	; 0
    2f30:	30 ec       	ldi	r19, 0xC0	; 192
    2f32:	4f e7       	ldi	r20, 0x7F	; 127
    2f34:	54 ec       	ldi	r21, 0xC4	; 196
    2f36:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    2f3a:	88 23       	and	r24, r24
    2f3c:	fc f4       	brge	.+62     	; 0x2f7c <__vector_17+0x894>
    2f3e:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2f42:	f0 e0       	ldi	r31, 0x00	; 0
    2f44:	ee 0f       	add	r30, r30
    2f46:	ff 1f       	adc	r31, r31
    2f48:	ee 0f       	add	r30, r30
    2f4a:	ff 1f       	adc	r31, r31
    2f4c:	e0 5b       	subi	r30, 0xB0	; 176
    2f4e:	fc 4f       	sbci	r31, 0xFC	; 252
    2f50:	80 e0       	ldi	r24, 0x00	; 0
    2f52:	90 ec       	ldi	r25, 0xC0	; 192
    2f54:	af e7       	ldi	r26, 0x7F	; 127
    2f56:	b4 ec       	ldi	r27, 0xC4	; 196
    2f58:	80 83       	st	Z, r24
    2f5a:	91 83       	std	Z+1, r25	; 0x01
    2f5c:	a2 83       	std	Z+2, r26	; 0x02
    2f5e:	b3 83       	std	Z+3, r27	; 0x03
    2f60:	0d c0       	rjmp	.+26     	; 0x2f7c <__vector_17+0x894>
    2f62:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2f66:	f0 e0       	ldi	r31, 0x00	; 0
    2f68:	ee 0f       	add	r30, r30
    2f6a:	ff 1f       	adc	r31, r31
    2f6c:	ee 0f       	add	r30, r30
    2f6e:	ff 1f       	adc	r31, r31
    2f70:	e0 5b       	subi	r30, 0xB0	; 176
    2f72:	fc 4f       	sbci	r31, 0xFC	; 252
    2f74:	10 82       	st	Z, r1
    2f76:	11 82       	std	Z+1, r1	; 0x01
    2f78:	12 82       	std	Z+2, r1	; 0x02
    2f7a:	13 82       	std	Z+3, r1	; 0x03
    2f7c:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2f80:	f0 e0       	ldi	r31, 0x00	; 0
    2f82:	ee 0f       	add	r30, r30
    2f84:	ff 1f       	adc	r31, r31
    2f86:	ec 53       	subi	r30, 0x3C	; 60
    2f88:	fb 4f       	sbci	r31, 0xFB	; 251
    2f8a:	11 82       	std	Z+1, r1	; 0x01
    2f8c:	10 82       	st	Z, r1
    2f8e:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2f92:	f0 e0       	ldi	r31, 0x00	; 0
    2f94:	a0 91 ef 03 	lds	r26, 0x03EF	; 0x8003ef <N>
    2f98:	b0 e0       	ldi	r27, 0x00	; 0
    2f9a:	aa 0f       	add	r26, r26
    2f9c:	bb 1f       	adc	r27, r27
    2f9e:	aa 0f       	add	r26, r26
    2fa0:	bb 1f       	adc	r27, r27
    2fa2:	a0 5b       	subi	r26, 0xB0	; 176
    2fa4:	bc 4f       	sbci	r27, 0xFC	; 252
    2fa6:	8d 91       	ld	r24, X+
    2fa8:	9d 91       	ld	r25, X+
    2faa:	0d 90       	ld	r0, X+
    2fac:	bc 91       	ld	r27, X
    2fae:	a0 2d       	mov	r26, r0
    2fb0:	ee 0f       	add	r30, r30
    2fb2:	ff 1f       	adc	r31, r31
    2fb4:	ee 0f       	add	r30, r30
    2fb6:	ff 1f       	adc	r31, r31
    2fb8:	e4 5e       	subi	r30, 0xE4	; 228
    2fba:	fc 4f       	sbci	r31, 0xFC	; 252
    2fbc:	80 83       	st	Z, r24
    2fbe:	91 83       	std	Z+1, r25	; 0x01
    2fc0:	a2 83       	std	Z+2, r26	; 0x02
    2fc2:	b3 83       	std	Z+3, r27	; 0x03
    2fc4:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2fc8:	f0 e0       	ldi	r31, 0x00	; 0
    2fca:	ee 0f       	add	r30, r30
    2fcc:	ff 1f       	adc	r31, r31
    2fce:	ee 0f       	add	r30, r30
    2fd0:	ff 1f       	adc	r31, r31
    2fd2:	e0 5b       	subi	r30, 0xB0	; 176
    2fd4:	fc 4f       	sbci	r31, 0xFC	; 252
    2fd6:	60 81       	ld	r22, Z
    2fd8:	71 81       	ldd	r23, Z+1	; 0x01
    2fda:	82 81       	ldd	r24, Z+2	; 0x02
    2fdc:	93 81       	ldd	r25, Z+3	; 0x03
    2fde:	20 e0       	ldi	r18, 0x00	; 0
    2fe0:	30 e0       	ldi	r19, 0x00	; 0
    2fe2:	a9 01       	movw	r20, r18
    2fe4:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    2fe8:	81 11       	cpse	r24, r1
    2fea:	03 c0       	rjmp	.+6      	; 0x2ff2 <__vector_17+0x90a>
    2fec:	8f ef       	ldi	r24, 0xFF	; 255
    2fee:	82 b9       	out	0x02, r24	; 2
    2ff0:	6f c0       	rjmp	.+222    	; 0x30d0 <__vector_17+0x9e8>
    2ff2:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    2ff6:	f0 e0       	ldi	r31, 0x00	; 0
    2ff8:	ee 0f       	add	r30, r30
    2ffa:	ff 1f       	adc	r31, r31
    2ffc:	ee 0f       	add	r30, r30
    2ffe:	ff 1f       	adc	r31, r31
    3000:	e0 5b       	subi	r30, 0xB0	; 176
    3002:	fc 4f       	sbci	r31, 0xFC	; 252
    3004:	60 81       	ld	r22, Z
    3006:	71 81       	ldd	r23, Z+1	; 0x01
    3008:	82 81       	ldd	r24, Z+2	; 0x02
    300a:	93 81       	ldd	r25, Z+3	; 0x03
    300c:	20 e0       	ldi	r18, 0x00	; 0
    300e:	30 e0       	ldi	r19, 0x00	; 0
    3010:	a9 01       	movw	r20, r18
    3012:	0e 94 11 21 	call	0x4222	; 0x4222 <__cmpsf2>
    3016:	88 23       	and	r24, r24
    3018:	e4 f5       	brge	.+120    	; 0x3092 <__vector_17+0x9aa>
    301a:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    301e:	f0 e0       	ldi	r31, 0x00	; 0
    3020:	a0 91 ef 03 	lds	r26, 0x03EF	; 0x8003ef <N>
    3024:	b0 e0       	ldi	r27, 0x00	; 0
    3026:	aa 0f       	add	r26, r26
    3028:	bb 1f       	adc	r27, r27
    302a:	aa 0f       	add	r26, r26
    302c:	bb 1f       	adc	r27, r27
    302e:	a0 5b       	subi	r26, 0xB0	; 176
    3030:	bc 4f       	sbci	r27, 0xFC	; 252
    3032:	8d 91       	ld	r24, X+
    3034:	9d 91       	ld	r25, X+
    3036:	0d 90       	ld	r0, X+
    3038:	bc 91       	ld	r27, X
    303a:	a0 2d       	mov	r26, r0
    303c:	b0 58       	subi	r27, 0x80	; 128
    303e:	ee 0f       	add	r30, r30
    3040:	ff 1f       	adc	r31, r31
    3042:	ee 0f       	add	r30, r30
    3044:	ff 1f       	adc	r31, r31
    3046:	e0 5b       	subi	r30, 0xB0	; 176
    3048:	fc 4f       	sbci	r31, 0xFC	; 252
    304a:	80 83       	st	Z, r24
    304c:	91 83       	std	Z+1, r25	; 0x01
    304e:	a2 83       	std	Z+2, r26	; 0x02
    3050:	b3 83       	std	Z+3, r27	; 0x03
    3052:	32 b1       	in	r19, 0x02	; 2
    3054:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    3058:	f0 e0       	ldi	r31, 0x00	; 0
    305a:	e3 54       	subi	r30, 0x43	; 67
    305c:	fb 4f       	sbci	r31, 0xFB	; 251
    305e:	20 81       	ld	r18, Z
    3060:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    3064:	f0 e0       	ldi	r31, 0x00	; 0
    3066:	e6 58       	subi	r30, 0x86	; 134
    3068:	fb 4f       	sbci	r31, 0xFB	; 251
    306a:	60 81       	ld	r22, Z
    306c:	81 e0       	ldi	r24, 0x01	; 1
    306e:	90 e0       	ldi	r25, 0x00	; 0
    3070:	ac 01       	movw	r20, r24
    3072:	02 c0       	rjmp	.+4      	; 0x3078 <__vector_17+0x990>
    3074:	44 0f       	add	r20, r20
    3076:	55 1f       	adc	r21, r21
    3078:	2a 95       	dec	r18
    307a:	e2 f7       	brpl	.-8      	; 0x3074 <__vector_17+0x98c>
    307c:	24 2f       	mov	r18, r20
    307e:	20 95       	com	r18
    3080:	23 23       	and	r18, r19
    3082:	02 c0       	rjmp	.+4      	; 0x3088 <__vector_17+0x9a0>
    3084:	88 0f       	add	r24, r24
    3086:	99 1f       	adc	r25, r25
    3088:	6a 95       	dec	r22
    308a:	e2 f7       	brpl	.-8      	; 0x3084 <__vector_17+0x99c>
    308c:	82 2b       	or	r24, r18
    308e:	82 b9       	out	0x02, r24	; 2
    3090:	1f c0       	rjmp	.+62     	; 0x30d0 <__vector_17+0x9e8>
    3092:	32 b1       	in	r19, 0x02	; 2
    3094:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    3098:	f0 e0       	ldi	r31, 0x00	; 0
    309a:	e6 58       	subi	r30, 0x86	; 134
    309c:	fb 4f       	sbci	r31, 0xFB	; 251
    309e:	20 81       	ld	r18, Z
    30a0:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    30a4:	f0 e0       	ldi	r31, 0x00	; 0
    30a6:	e3 54       	subi	r30, 0x43	; 67
    30a8:	fb 4f       	sbci	r31, 0xFB	; 251
    30aa:	60 81       	ld	r22, Z
    30ac:	81 e0       	ldi	r24, 0x01	; 1
    30ae:	90 e0       	ldi	r25, 0x00	; 0
    30b0:	ac 01       	movw	r20, r24
    30b2:	02 c0       	rjmp	.+4      	; 0x30b8 <__vector_17+0x9d0>
    30b4:	44 0f       	add	r20, r20
    30b6:	55 1f       	adc	r21, r21
    30b8:	2a 95       	dec	r18
    30ba:	e2 f7       	brpl	.-8      	; 0x30b4 <__vector_17+0x9cc>
    30bc:	24 2f       	mov	r18, r20
    30be:	20 95       	com	r18
    30c0:	23 23       	and	r18, r19
    30c2:	02 c0       	rjmp	.+4      	; 0x30c8 <__vector_17+0x9e0>
    30c4:	88 0f       	add	r24, r24
    30c6:	99 1f       	adc	r25, r25
    30c8:	6a 95       	dec	r22
    30ca:	e2 f7       	brpl	.-8      	; 0x30c4 <__vector_17+0x9dc>
    30cc:	82 2b       	or	r24, r18
    30ce:	82 b9       	out	0x02, r24	; 2
    30d0:	80 91 ef 03 	lds	r24, 0x03EF	; 0x8003ef <N>
    30d4:	81 11       	cpse	r24, r1
    30d6:	14 c0       	rjmp	.+40     	; 0x3100 <__vector_17+0xa18>
    30d8:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    30dc:	f0 e0       	ldi	r31, 0x00	; 0
    30de:	ee 0f       	add	r30, r30
    30e0:	ff 1f       	adc	r31, r31
    30e2:	ee 0f       	add	r30, r30
    30e4:	ff 1f       	adc	r31, r31
    30e6:	e0 5b       	subi	r30, 0xB0	; 176
    30e8:	fc 4f       	sbci	r31, 0xFC	; 252
    30ea:	60 81       	ld	r22, Z
    30ec:	71 81       	ldd	r23, Z+1	; 0x01
    30ee:	82 81       	ldd	r24, Z+2	; 0x02
    30f0:	93 81       	ldd	r25, Z+3	; 0x03
    30f2:	0e 94 7d 21 	call	0x42fa	; 0x42fa <__fixsfsi>
    30f6:	70 93 ab 00 	sts	0x00AB, r23	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
    30fa:	60 93 aa 00 	sts	0x00AA, r22	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
    30fe:	47 c0       	rjmp	.+142    	; 0x318e <__vector_17+0xaa6>
    3100:	80 91 ef 03 	lds	r24, 0x03EF	; 0x8003ef <N>
    3104:	82 30       	cpi	r24, 0x02	; 2
    3106:	a1 f4       	brne	.+40     	; 0x3130 <__vector_17+0xa48>
    3108:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    310c:	f0 e0       	ldi	r31, 0x00	; 0
    310e:	ee 0f       	add	r30, r30
    3110:	ff 1f       	adc	r31, r31
    3112:	ee 0f       	add	r30, r30
    3114:	ff 1f       	adc	r31, r31
    3116:	e0 5b       	subi	r30, 0xB0	; 176
    3118:	fc 4f       	sbci	r31, 0xFC	; 252
    311a:	60 81       	ld	r22, Z
    311c:	71 81       	ldd	r23, Z+1	; 0x01
    311e:	82 81       	ldd	r24, Z+2	; 0x02
    3120:	93 81       	ldd	r25, Z+3	; 0x03
    3122:	0e 94 7d 21 	call	0x42fa	; 0x42fa <__fixsfsi>
    3126:	70 93 99 00 	sts	0x0099, r23	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
    312a:	60 93 98 00 	sts	0x0098, r22	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
    312e:	2f c0       	rjmp	.+94     	; 0x318e <__vector_17+0xaa6>
    3130:	80 91 ef 03 	lds	r24, 0x03EF	; 0x8003ef <N>
    3134:	83 30       	cpi	r24, 0x03	; 3
    3136:	a1 f4       	brne	.+40     	; 0x3160 <__vector_17+0xa78>
    3138:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    313c:	f0 e0       	ldi	r31, 0x00	; 0
    313e:	ee 0f       	add	r30, r30
    3140:	ff 1f       	adc	r31, r31
    3142:	ee 0f       	add	r30, r30
    3144:	ff 1f       	adc	r31, r31
    3146:	e0 5b       	subi	r30, 0xB0	; 176
    3148:	fc 4f       	sbci	r31, 0xFC	; 252
    314a:	60 81       	ld	r22, Z
    314c:	71 81       	ldd	r23, Z+1	; 0x01
    314e:	82 81       	ldd	r24, Z+2	; 0x02
    3150:	93 81       	ldd	r25, Z+3	; 0x03
    3152:	0e 94 7d 21 	call	0x42fa	; 0x42fa <__fixsfsi>
    3156:	70 93 ad 00 	sts	0x00AD, r23	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
    315a:	60 93 ac 00 	sts	0x00AC, r22	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
    315e:	17 c0       	rjmp	.+46     	; 0x318e <__vector_17+0xaa6>
    3160:	80 91 ef 03 	lds	r24, 0x03EF	; 0x8003ef <N>
    3164:	81 30       	cpi	r24, 0x01	; 1
    3166:	99 f4       	brne	.+38     	; 0x318e <__vector_17+0xaa6>
    3168:	e0 91 ef 03 	lds	r30, 0x03EF	; 0x8003ef <N>
    316c:	f0 e0       	ldi	r31, 0x00	; 0
    316e:	ee 0f       	add	r30, r30
    3170:	ff 1f       	adc	r31, r31
    3172:	ee 0f       	add	r30, r30
    3174:	ff 1f       	adc	r31, r31
    3176:	e0 5b       	subi	r30, 0xB0	; 176
    3178:	fc 4f       	sbci	r31, 0xFC	; 252
    317a:	60 81       	ld	r22, Z
    317c:	71 81       	ldd	r23, Z+1	; 0x01
    317e:	82 81       	ldd	r24, Z+2	; 0x02
    3180:	93 81       	ldd	r25, Z+3	; 0x03
    3182:	0e 94 7d 21 	call	0x42fa	; 0x42fa <__fixsfsi>
    3186:	70 93 a9 00 	sts	0x00A9, r23	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
    318a:	60 93 a8 00 	sts	0x00A8, r22	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
    318e:	ff 91       	pop	r31
    3190:	ef 91       	pop	r30
    3192:	df 91       	pop	r29
    3194:	cf 91       	pop	r28
    3196:	bf 91       	pop	r27
    3198:	af 91       	pop	r26
    319a:	9f 91       	pop	r25
    319c:	8f 91       	pop	r24
    319e:	7f 91       	pop	r23
    31a0:	6f 91       	pop	r22
    31a2:	5f 91       	pop	r21
    31a4:	4f 91       	pop	r20
    31a6:	3f 91       	pop	r19
    31a8:	2f 91       	pop	r18
    31aa:	1f 91       	pop	r17
    31ac:	0f 91       	pop	r16
    31ae:	ff 90       	pop	r15
    31b0:	ef 90       	pop	r14
    31b2:	df 90       	pop	r13
    31b4:	cf 90       	pop	r12
    31b6:	bf 90       	pop	r11
    31b8:	af 90       	pop	r10
    31ba:	9f 90       	pop	r9
    31bc:	8f 90       	pop	r8
    31be:	7f 90       	pop	r7
    31c0:	6f 90       	pop	r6
    31c2:	5f 90       	pop	r5
    31c4:	4f 90       	pop	r4
    31c6:	0f 90       	pop	r0
    31c8:	0b be       	out	0x3b, r0	; 59
    31ca:	0f 90       	pop	r0
    31cc:	0f be       	out	0x3f, r0	; 63
    31ce:	0f 90       	pop	r0
    31d0:	1f 90       	pop	r1
    31d2:	18 95       	reti

000031d4 <fISR>:
    31d4:	cf 93       	push	r28
    31d6:	df 93       	push	r29
    31d8:	c8 2f       	mov	r28, r24
    31da:	d0 e0       	ldi	r29, 0x00	; 0
    31dc:	fe 01       	movw	r30, r28
    31de:	e0 51       	subi	r30, 0x10	; 16
    31e0:	fc 4f       	sbci	r31, 0xFC	; 252
    31e2:	80 81       	ld	r24, Z
    31e4:	8f 5f       	subi	r24, 0xFF	; 255
    31e6:	80 83       	st	Z, r24
    31e8:	60 81       	ld	r22, Z
    31ea:	70 e0       	ldi	r23, 0x00	; 0
    31ec:	80 e0       	ldi	r24, 0x00	; 0
    31ee:	90 e0       	ldi	r25, 0x00	; 0
    31f0:	0e 94 b0 21 	call	0x4360	; 0x4360 <__floatsisf>
    31f4:	20 e0       	ldi	r18, 0x00	; 0
    31f6:	30 e0       	ldi	r19, 0x00	; 0
    31f8:	40 e4       	ldi	r20, 0x40	; 64
    31fa:	50 e4       	ldi	r21, 0x40	; 64
    31fc:	0e 94 60 22 	call	0x44c0	; 0x44c0 <__gesf2>
    3200:	88 23       	and	r24, r24
    3202:	0c f4       	brge	.+2      	; 0x3206 <fISR+0x32>
    3204:	51 c0       	rjmp	.+162    	; 0x32a8 <fISR+0xd4>
    3206:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <__TEXT_REGION_LENGTH__+0x700109>
    320a:	fe 01       	movw	r30, r28
    320c:	e8 5e       	subi	r30, 0xE8	; 232
    320e:	fb 4f       	sbci	r31, 0xFB	; 251
    3210:	20 81       	ld	r18, Z
    3212:	90 e0       	ldi	r25, 0x00	; 0
    3214:	02 c0       	rjmp	.+4      	; 0x321a <fISR+0x46>
    3216:	95 95       	asr	r25
    3218:	87 95       	ror	r24
    321a:	2a 95       	dec	r18
    321c:	e2 f7       	brpl	.-8      	; 0x3216 <fISR+0x42>
    321e:	80 fd       	sbrc	r24, 0
    3220:	06 c0       	rjmp	.+12     	; 0x322e <fISR+0x5a>
    3222:	81 e0       	ldi	r24, 0x01	; 1
    3224:	fe 01       	movw	r30, r28
    3226:	e9 56       	subi	r30, 0x69	; 105
    3228:	fb 4f       	sbci	r31, 0xFB	; 251
    322a:	80 83       	st	Z, r24
    322c:	05 c0       	rjmp	.+10     	; 0x3238 <fISR+0x64>
    322e:	8f ef       	ldi	r24, 0xFF	; 255
    3230:	fe 01       	movw	r30, r28
    3232:	e9 56       	subi	r30, 0x69	; 105
    3234:	fb 4f       	sbci	r31, 0xFB	; 251
    3236:	80 83       	st	Z, r24
    3238:	ce 01       	movw	r24, r28
    323a:	88 0f       	add	r24, r24
    323c:	99 1f       	adc	r25, r25
    323e:	88 0f       	add	r24, r24
    3240:	99 1f       	adc	r25, r25
    3242:	fc 01       	movw	r30, r24
    3244:	e7 5c       	subi	r30, 0xC7	; 199
    3246:	fb 4f       	sbci	r31, 0xFB	; 251
    3248:	40 81       	ld	r20, Z
    324a:	51 81       	ldd	r21, Z+1	; 0x01
    324c:	62 81       	ldd	r22, Z+2	; 0x02
    324e:	73 81       	ldd	r23, Z+3	; 0x03
    3250:	dc 01       	movw	r26, r24
    3252:	ad 55       	subi	r26, 0x5D	; 93
    3254:	bb 4f       	sbci	r27, 0xFB	; 251
    3256:	4d 93       	st	X+, r20
    3258:	5d 93       	st	X+, r21
    325a:	6d 93       	st	X+, r22
    325c:	7c 93       	st	X, r23
    325e:	13 97       	sbiw	r26, 0x03	; 3
    3260:	40 91 84 00 	lds	r20, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
    3264:	50 91 85 00 	lds	r21, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
    3268:	60 e0       	ldi	r22, 0x00	; 0
    326a:	70 e0       	ldi	r23, 0x00	; 0
    326c:	40 83       	st	Z, r20
    326e:	51 83       	std	Z+1, r21	; 0x01
    3270:	62 83       	std	Z+2, r22	; 0x02
    3272:	73 83       	std	Z+3, r23	; 0x03
    3274:	fe 01       	movw	r30, r28
    3276:	e0 51       	subi	r30, 0x10	; 16
    3278:	fc 4f       	sbci	r31, 0xFC	; 252
    327a:	10 82       	st	Z, r1
    327c:	fc 01       	movw	r30, r24
    327e:	e7 5a       	subi	r30, 0xA7	; 167
    3280:	fb 4f       	sbci	r31, 0xFB	; 251
    3282:	40 81       	ld	r20, Z
    3284:	51 81       	ldd	r21, Z+1	; 0x01
    3286:	62 81       	ldd	r22, Z+2	; 0x02
    3288:	73 81       	ldd	r23, Z+3	; 0x03
    328a:	dc 01       	movw	r26, r24
    328c:	a7 5b       	subi	r26, 0xB7	; 183
    328e:	bb 4f       	sbci	r27, 0xFB	; 251
    3290:	4d 93       	st	X+, r20
    3292:	5d 93       	st	X+, r21
    3294:	6d 93       	st	X+, r22
    3296:	7c 93       	st	X, r23
    3298:	13 97       	sbiw	r26, 0x03	; 3
    329a:	10 82       	st	Z, r1
    329c:	11 82       	std	Z+1, r1	; 0x01
    329e:	12 82       	std	Z+2, r1	; 0x02
    32a0:	13 82       	std	Z+3, r1	; 0x03
    32a2:	c5 56       	subi	r28, 0x65	; 101
    32a4:	db 4f       	sbci	r29, 0xFB	; 251
    32a6:	18 82       	st	Y, r1
    32a8:	df 91       	pop	r29
    32aa:	cf 91       	pop	r28
    32ac:	08 95       	ret

000032ae <inizializzaCostanti>:
    32ae:	8a e0       	ldi	r24, 0x0A	; 10
    32b0:	97 ed       	ldi	r25, 0xD7	; 215
    32b2:	a3 e2       	ldi	r26, 0x23	; 35
    32b4:	bc e3       	ldi	r27, 0x3C	; 60
    32b6:	80 93 04 04 	sts	0x0404, r24	; 0x800404 <periodoPID_s>
    32ba:	90 93 05 04 	sts	0x0405, r25	; 0x800405 <periodoPID_s+0x1>
    32be:	a0 93 06 04 	sts	0x0406, r26	; 0x800406 <periodoPID_s+0x2>
    32c2:	b0 93 07 04 	sts	0x0407, r27	; 0x800407 <periodoPID_s+0x3>
    32c6:	8f e3       	ldi	r24, 0x3F	; 63
    32c8:	9c e9       	ldi	r25, 0x9C	; 156
    32ca:	90 93 bc 04 	sts	0x04BC, r25	; 0x8004bc <TOP_PID+0x1>
    32ce:	80 93 bb 04 	sts	0x04BB, r24	; 0x8004bb <TOP_PID>
    32d2:	60 91 04 04 	lds	r22, 0x0404	; 0x800404 <periodoPID_s>
    32d6:	70 91 05 04 	lds	r23, 0x0405	; 0x800405 <periodoPID_s+0x1>
    32da:	80 91 06 04 	lds	r24, 0x0406	; 0x800406 <periodoPID_s+0x2>
    32de:	90 91 07 04 	lds	r25, 0x0407	; 0x800407 <periodoPID_s+0x3>
    32e2:	9b 01       	movw	r18, r22
    32e4:	ac 01       	movw	r20, r24
    32e6:	39 d7       	rcall	.+3698   	; 0x415a <__addsf3>
    32e8:	60 93 b7 04 	sts	0x04B7, r22	; 0x8004b7 <kit>
    32ec:	70 93 b8 04 	sts	0x04B8, r23	; 0x8004b8 <kit+0x1>
    32f0:	80 93 b9 04 	sts	0x04B9, r24	; 0x8004b9 <kit+0x2>
    32f4:	90 93 ba 04 	sts	0x04BA, r25	; 0x8004ba <kit+0x3>
    32f8:	20 91 04 04 	lds	r18, 0x0404	; 0x800404 <periodoPID_s>
    32fc:	30 91 05 04 	lds	r19, 0x0405	; 0x800405 <periodoPID_s+0x1>
    3300:	40 91 06 04 	lds	r20, 0x0406	; 0x800406 <periodoPID_s+0x2>
    3304:	50 91 07 04 	lds	r21, 0x0407	; 0x800407 <periodoPID_s+0x3>
    3308:	60 e0       	ldi	r22, 0x00	; 0
    330a:	70 e0       	ldi	r23, 0x00	; 0
    330c:	80 ee       	ldi	r24, 0xE0	; 224
    330e:	90 e4       	ldi	r25, 0x40	; 64
    3310:	8c d7       	rcall	.+3864   	; 0x422a <__divsf3>
    3312:	60 93 1c 04 	sts	0x041C, r22	; 0x80041c <kdt>
    3316:	70 93 1d 04 	sts	0x041D, r23	; 0x80041d <kdt+0x1>
    331a:	80 93 1e 04 	sts	0x041E, r24	; 0x80041e <kdt+0x2>
    331e:	90 93 1f 04 	sts	0x041F, r25	; 0x80041f <kdt+0x3>
    3322:	89 ed       	ldi	r24, 0xD9	; 217
    3324:	94 e6       	ldi	r25, 0x64	; 100
    3326:	ad e3       	ldi	r26, 0x3D	; 61
    3328:	b7 e4       	ldi	r27, 0x47	; 71
    332a:	80 93 92 04 	sts	0x0492, r24	; 0x800492 <Kgiri>
    332e:	90 93 93 04 	sts	0x0493, r25	; 0x800493 <Kgiri+0x1>
    3332:	a0 93 94 04 	sts	0x0494, r26	; 0x800494 <Kgiri+0x2>
    3336:	b0 93 95 04 	sts	0x0495, r27	; 0x800495 <Kgiri+0x3>
    333a:	60 91 04 04 	lds	r22, 0x0404	; 0x800404 <periodoPID_s>
    333e:	70 91 05 04 	lds	r23, 0x0405	; 0x800405 <periodoPID_s+0x1>
    3342:	80 91 06 04 	lds	r24, 0x0406	; 0x800406 <periodoPID_s+0x2>
    3346:	90 91 07 04 	lds	r25, 0x0407	; 0x800407 <periodoPID_s+0x3>
    334a:	2a ef       	ldi	r18, 0xFA	; 250
    334c:	3d ee       	ldi	r19, 0xED	; 237
    334e:	4f ea       	ldi	r20, 0xAF	; 175
    3350:	51 e4       	ldi	r21, 0x41	; 65
    3352:	0e 94 64 22 	call	0x44c8	; 0x44c8 <__mulsf3>
    3356:	60 93 9f 04 	sts	0x049F, r22	; 0x80049f <kdist>
    335a:	70 93 a0 04 	sts	0x04A0, r23	; 0x8004a0 <kdist+0x1>
    335e:	80 93 a1 04 	sts	0x04A1, r24	; 0x8004a1 <kdist+0x2>
    3362:	90 93 a2 04 	sts	0x04A2, r25	; 0x8004a2 <kdist+0x3>
    3366:	80 e0       	ldi	r24, 0x00	; 0
    3368:	90 e0       	ldi	r25, 0x00	; 0
    336a:	a0 e2       	ldi	r26, 0x20	; 32
    336c:	b0 e4       	ldi	r27, 0x40	; 64
    336e:	80 93 20 04 	sts	0x0420, r24	; 0x800420 <k_millis>
    3372:	90 93 21 04 	sts	0x0421, r25	; 0x800421 <k_millis+0x1>
    3376:	a0 93 22 04 	sts	0x0422, r26	; 0x800422 <k_millis+0x2>
    337a:	b0 93 23 04 	sts	0x0423, r27	; 0x800423 <k_millis+0x3>
    337e:	08 95       	ret

00003380 <stop_PID>:
    3380:	10 92 81 00 	sts	0x0081, r1	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
    3384:	8f ef       	ldi	r24, 0xFF	; 255
    3386:	82 b9       	out	0x02, r24	; 2
    3388:	10 92 ab 00 	sts	0x00AB, r1	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
    338c:	10 92 aa 00 	sts	0x00AA, r1	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
    3390:	10 92 99 00 	sts	0x0099, r1	; 0x800099 <__TEXT_REGION_LENGTH__+0x700099>
    3394:	10 92 98 00 	sts	0x0098, r1	; 0x800098 <__TEXT_REGION_LENGTH__+0x700098>
    3398:	10 92 ad 00 	sts	0x00AD, r1	; 0x8000ad <__TEXT_REGION_LENGTH__+0x7000ad>
    339c:	10 92 ac 00 	sts	0x00AC, r1	; 0x8000ac <__TEXT_REGION_LENGTH__+0x7000ac>
    33a0:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
    33a4:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
    33a8:	08 95       	ret

000033aa <start_PID>:
    33aa:	89 e0       	ldi	r24, 0x09	; 9
    33ac:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x700081>
    33b0:	08 95       	ret

000033b2 <resetta_distanza>:
    33b2:	10 92 38 04 	sts	0x0438, r1	; 0x800438 <cie>
    33b6:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <cie>
    33ba:	84 30       	cpi	r24, 0x04	; 4
    33bc:	b0 f4       	brcc	.+44     	; 0x33ea <resetta_distanza+0x38>
    33be:	e0 91 38 04 	lds	r30, 0x0438	; 0x800438 <cie>
    33c2:	f0 e0       	ldi	r31, 0x00	; 0
    33c4:	ee 0f       	add	r30, r30
    33c6:	ff 1f       	adc	r31, r31
    33c8:	ee 0f       	add	r30, r30
    33ca:	ff 1f       	adc	r31, r31
    33cc:	ea 51       	subi	r30, 0x1A	; 26
    33ce:	fd 4f       	sbci	r31, 0xFD	; 253
    33d0:	10 82       	st	Z, r1
    33d2:	11 82       	std	Z+1, r1	; 0x01
    33d4:	12 82       	std	Z+2, r1	; 0x02
    33d6:	13 82       	std	Z+3, r1	; 0x03
    33d8:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <cie>
    33dc:	8f 5f       	subi	r24, 0xFF	; 255
    33de:	80 93 38 04 	sts	0x0438, r24	; 0x800438 <cie>
    33e2:	80 91 38 04 	lds	r24, 0x0438	; 0x800438 <cie>
    33e6:	84 30       	cpi	r24, 0x04	; 4
    33e8:	50 f3       	brcs	.-44     	; 0x33be <resetta_distanza+0xc>
    33ea:	08 95       	ret

000033ec <resetta_PID>:
    33ec:	10 92 ef 03 	sts	0x03EF, r1	; 0x8003ef <N>
    33f0:	10 92 c1 04 	sts	0x04C1, r1	; 0x8004c1 <cib>
    33f4:	80 91 c1 04 	lds	r24, 0x04C1	; 0x8004c1 <cib>
    33f8:	84 30       	cpi	r24, 0x04	; 4
    33fa:	08 f0       	brcs	.+2      	; 0x33fe <resetta_PID+0x12>
    33fc:	c6 c0       	rjmp	.+396    	; 0x358a <resetta_PID+0x19e>
    33fe:	81 e0       	ldi	r24, 0x01	; 1
    3400:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <cib>
    3404:	f0 e0       	ldi	r31, 0x00	; 0
    3406:	ee 0f       	add	r30, r30
    3408:	ff 1f       	adc	r31, r31
    340a:	ee 0f       	add	r30, r30
    340c:	ff 1f       	adc	r31, r31
    340e:	e7 50       	subi	r30, 0x07	; 7
    3410:	fd 4f       	sbci	r31, 0xFD	; 253
    3412:	10 82       	st	Z, r1
    3414:	11 82       	std	Z+1, r1	; 0x01
    3416:	12 82       	std	Z+2, r1	; 0x02
    3418:	13 82       	std	Z+3, r1	; 0x03
    341a:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <cib>
    341e:	f0 e0       	ldi	r31, 0x00	; 0
    3420:	ee 0f       	add	r30, r30
    3422:	ff 1f       	adc	r31, r31
    3424:	ee 0f       	add	r30, r30
    3426:	ff 1f       	adc	r31, r31
    3428:	e6 59       	subi	r30, 0x96	; 150
    342a:	fb 4f       	sbci	r31, 0xFB	; 251
    342c:	10 82       	st	Z, r1
    342e:	11 82       	std	Z+1, r1	; 0x01
    3430:	12 82       	std	Z+2, r1	; 0x02
    3432:	13 82       	std	Z+3, r1	; 0x03
    3434:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <cib>
    3438:	f0 e0       	ldi	r31, 0x00	; 0
    343a:	ee 0f       	add	r30, r30
    343c:	ff 1f       	adc	r31, r31
    343e:	ee 0f       	add	r30, r30
    3440:	ff 1f       	adc	r31, r31
    3442:	e8 5d       	subi	r30, 0xD8	; 216
    3444:	fb 4f       	sbci	r31, 0xFB	; 251
    3446:	10 82       	st	Z, r1
    3448:	11 82       	std	Z+1, r1	; 0x01
    344a:	12 82       	std	Z+2, r1	; 0x02
    344c:	13 82       	std	Z+3, r1	; 0x03
    344e:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <cib>
    3452:	f0 e0       	ldi	r31, 0x00	; 0
    3454:	e9 56       	subi	r30, 0x69	; 105
    3456:	fb 4f       	sbci	r31, 0xFB	; 251
    3458:	10 82       	st	Z, r1
    345a:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <cib>
    345e:	f0 e0       	ldi	r31, 0x00	; 0
    3460:	ee 0f       	add	r30, r30
    3462:	ff 1f       	adc	r31, r31
    3464:	ee 0f       	add	r30, r30
    3466:	ff 1f       	adc	r31, r31
    3468:	ed 55       	subi	r30, 0x5D	; 93
    346a:	fb 4f       	sbci	r31, 0xFB	; 251
    346c:	10 82       	st	Z, r1
    346e:	11 82       	std	Z+1, r1	; 0x01
    3470:	12 82       	std	Z+2, r1	; 0x02
    3472:	13 82       	std	Z+3, r1	; 0x03
    3474:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <cib>
    3478:	f0 e0       	ldi	r31, 0x00	; 0
    347a:	ee 0f       	add	r30, r30
    347c:	ff 1f       	adc	r31, r31
    347e:	ee 0f       	add	r30, r30
    3480:	ff 1f       	adc	r31, r31
    3482:	e7 5c       	subi	r30, 0xC7	; 199
    3484:	fb 4f       	sbci	r31, 0xFB	; 251
    3486:	10 82       	st	Z, r1
    3488:	11 82       	std	Z+1, r1	; 0x01
    348a:	12 82       	std	Z+2, r1	; 0x02
    348c:	13 82       	std	Z+3, r1	; 0x03
    348e:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <cib>
    3492:	f0 e0       	ldi	r31, 0x00	; 0
    3494:	ee 0f       	add	r30, r30
    3496:	ff 1f       	adc	r31, r31
    3498:	ee 0f       	add	r30, r30
    349a:	ff 1f       	adc	r31, r31
    349c:	e7 5b       	subi	r30, 0xB7	; 183
    349e:	fb 4f       	sbci	r31, 0xFB	; 251
    34a0:	10 82       	st	Z, r1
    34a2:	11 82       	std	Z+1, r1	; 0x01
    34a4:	12 82       	std	Z+2, r1	; 0x02
    34a6:	13 82       	std	Z+3, r1	; 0x03
    34a8:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <cib>
    34ac:	f0 e0       	ldi	r31, 0x00	; 0
    34ae:	e5 56       	subi	r30, 0x65	; 101
    34b0:	fb 4f       	sbci	r31, 0xFB	; 251
    34b2:	80 83       	st	Z, r24
    34b4:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <cib>
    34b8:	f0 e0       	ldi	r31, 0x00	; 0
    34ba:	ee 0f       	add	r30, r30
    34bc:	ff 1f       	adc	r31, r31
    34be:	ee 0f       	add	r30, r30
    34c0:	ff 1f       	adc	r31, r31
    34c2:	e4 5e       	subi	r30, 0xE4	; 228
    34c4:	fc 4f       	sbci	r31, 0xFC	; 252
    34c6:	10 82       	st	Z, r1
    34c8:	11 82       	std	Z+1, r1	; 0x01
    34ca:	12 82       	std	Z+2, r1	; 0x02
    34cc:	13 82       	std	Z+3, r1	; 0x03
    34ce:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <cib>
    34d2:	f0 e0       	ldi	r31, 0x00	; 0
    34d4:	e0 51       	subi	r30, 0x10	; 16
    34d6:	fc 4f       	sbci	r31, 0xFC	; 252
    34d8:	80 83       	st	Z, r24
    34da:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <cib>
    34de:	f0 e0       	ldi	r31, 0x00	; 0
    34e0:	ee 0f       	add	r30, r30
    34e2:	ff 1f       	adc	r31, r31
    34e4:	ee 0f       	add	r30, r30
    34e6:	ff 1f       	adc	r31, r31
    34e8:	e7 5a       	subi	r30, 0xA7	; 167
    34ea:	fb 4f       	sbci	r31, 0xFB	; 251
    34ec:	10 82       	st	Z, r1
    34ee:	11 82       	std	Z+1, r1	; 0x01
    34f0:	12 82       	std	Z+2, r1	; 0x02
    34f2:	13 82       	std	Z+3, r1	; 0x03
    34f4:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <cib>
    34f8:	f0 e0       	ldi	r31, 0x00	; 0
    34fa:	ee 0f       	add	r30, r30
    34fc:	ff 1f       	adc	r31, r31
    34fe:	ee 0f       	add	r30, r30
    3500:	ff 1f       	adc	r31, r31
    3502:	ec 50       	subi	r30, 0x0C	; 12
    3504:	fc 4f       	sbci	r31, 0xFC	; 252
    3506:	10 82       	st	Z, r1
    3508:	11 82       	std	Z+1, r1	; 0x01
    350a:	12 82       	std	Z+2, r1	; 0x02
    350c:	13 82       	std	Z+3, r1	; 0x03
    350e:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <cib>
    3512:	f0 e0       	ldi	r31, 0x00	; 0
    3514:	ee 0f       	add	r30, r30
    3516:	ff 1f       	adc	r31, r31
    3518:	ee 0f       	add	r30, r30
    351a:	ff 1f       	adc	r31, r31
    351c:	e6 59       	subi	r30, 0x96	; 150
    351e:	fb 4f       	sbci	r31, 0xFB	; 251
    3520:	10 82       	st	Z, r1
    3522:	11 82       	std	Z+1, r1	; 0x01
    3524:	12 82       	std	Z+2, r1	; 0x02
    3526:	13 82       	std	Z+3, r1	; 0x03
    3528:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <cib>
    352c:	f0 e0       	ldi	r31, 0x00	; 0
    352e:	ee 0f       	add	r30, r30
    3530:	ff 1f       	adc	r31, r31
    3532:	ee 0f       	add	r30, r30
    3534:	ff 1f       	adc	r31, r31
    3536:	ee 57       	subi	r30, 0x7E	; 126
    3538:	fb 4f       	sbci	r31, 0xFB	; 251
    353a:	10 82       	st	Z, r1
    353c:	11 82       	std	Z+1, r1	; 0x01
    353e:	12 82       	std	Z+2, r1	; 0x02
    3540:	13 82       	std	Z+3, r1	; 0x03
    3542:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <cib>
    3546:	f0 e0       	ldi	r31, 0x00	; 0
    3548:	ee 0f       	add	r30, r30
    354a:	ff 1f       	adc	r31, r31
    354c:	ee 0f       	add	r30, r30
    354e:	ff 1f       	adc	r31, r31
    3550:	e8 5f       	subi	r30, 0xF8	; 248
    3552:	fb 4f       	sbci	r31, 0xFB	; 251
    3554:	10 82       	st	Z, r1
    3556:	11 82       	std	Z+1, r1	; 0x01
    3558:	12 82       	std	Z+2, r1	; 0x02
    355a:	13 82       	std	Z+3, r1	; 0x03
    355c:	e0 91 c1 04 	lds	r30, 0x04C1	; 0x8004c1 <cib>
    3560:	f0 e0       	ldi	r31, 0x00	; 0
    3562:	ee 0f       	add	r30, r30
    3564:	ff 1f       	adc	r31, r31
    3566:	ee 0f       	add	r30, r30
    3568:	ff 1f       	adc	r31, r31
    356a:	e0 5b       	subi	r30, 0xB0	; 176
    356c:	fc 4f       	sbci	r31, 0xFC	; 252
    356e:	10 82       	st	Z, r1
    3570:	11 82       	std	Z+1, r1	; 0x01
    3572:	12 82       	std	Z+2, r1	; 0x02
    3574:	13 82       	std	Z+3, r1	; 0x03
    3576:	90 91 c1 04 	lds	r25, 0x04C1	; 0x8004c1 <cib>
    357a:	9f 5f       	subi	r25, 0xFF	; 255
    357c:	90 93 c1 04 	sts	0x04C1, r25	; 0x8004c1 <cib>
    3580:	90 91 c1 04 	lds	r25, 0x04C1	; 0x8004c1 <cib>
    3584:	94 30       	cpi	r25, 0x04	; 4
    3586:	08 f4       	brcc	.+2      	; 0x358a <resetta_PID+0x19e>
    3588:	3b cf       	rjmp	.-394    	; 0x3400 <resetta_PID+0x14>
    358a:	91 ce       	rjmp	.-734    	; 0x32ae <inizializzaCostanti>
    358c:	08 95       	ret

0000358e <init_PID>:
    358e:	2e df       	rcall	.-420    	; 0x33ec <resetta_PID>
    3590:	80 91 bb 04 	lds	r24, 0x04BB	; 0x8004bb <TOP_PID>
    3594:	90 91 bc 04 	lds	r25, 0x04BC	; 0x8004bc <TOP_PID+0x1>
    3598:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x700089>
    359c:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x700088>
    35a0:	22 e0       	ldi	r18, 0x02	; 2
    35a2:	20 93 6f 00 	sts	0x006F, r18	; 0x80006f <__TEXT_REGION_LENGTH__+0x70006f>
    35a6:	8a b1       	in	r24, 0x0a	; 10
    35a8:	83 7f       	andi	r24, 0xF3	; 243
    35aa:	8a b9       	out	0x0a, r24	; 10
    35ac:	8b b1       	in	r24, 0x0b	; 11
    35ae:	8c 60       	ori	r24, 0x0C	; 12
    35b0:	8b b9       	out	0x0b, r24	; 11
    35b2:	8d b1       	in	r24, 0x0d	; 13
    35b4:	8f 7c       	andi	r24, 0xCF	; 207
    35b6:	8d b9       	out	0x0d, r24	; 13
    35b8:	8e b1       	in	r24, 0x0e	; 14
    35ba:	80 63       	ori	r24, 0x30	; 48
    35bc:	8e b9       	out	0x0e, r24	; 14
    35be:	e9 e6       	ldi	r30, 0x69	; 105
    35c0:	f0 e0       	ldi	r31, 0x00	; 0
    35c2:	80 81       	ld	r24, Z
    35c4:	80 63       	ori	r24, 0x30	; 48
    35c6:	80 83       	st	Z, r24
    35c8:	80 81       	ld	r24, Z
    35ca:	80 6c       	ori	r24, 0xC0	; 192
    35cc:	80 83       	st	Z, r24
    35ce:	ea e6       	ldi	r30, 0x6A	; 106
    35d0:	f0 e0       	ldi	r31, 0x00	; 0
    35d2:	80 81       	ld	r24, Z
    35d4:	83 60       	ori	r24, 0x03	; 3
    35d6:	80 83       	st	Z, r24
    35d8:	80 81       	ld	r24, Z
    35da:	8c 60       	ori	r24, 0x0C	; 12
    35dc:	80 83       	st	Z, r24
    35de:	8d b3       	in	r24, 0x1d	; 29
    35e0:	8c 63       	ori	r24, 0x3C	; 60
    35e2:	8d bb       	out	0x1d, r24	; 29
    35e4:	6b 9a       	sbi	0x0d, 3	; 13
    35e6:	e1 e0       	ldi	r30, 0x01	; 1
    35e8:	f1 e0       	ldi	r31, 0x01	; 1
    35ea:	80 81       	ld	r24, Z
    35ec:	88 63       	ori	r24, 0x38	; 56
    35ee:	80 83       	st	Z, r24
    35f0:	8f ef       	ldi	r24, 0xFF	; 255
    35f2:	81 b9       	out	0x01, r24	; 1
    35f4:	82 b9       	out	0x02, r24	; 2
    35f6:	ea e0       	ldi	r30, 0x0A	; 10
    35f8:	f1 e0       	ldi	r31, 0x01	; 1
    35fa:	90 81       	ld	r25, Z
    35fc:	9f 70       	andi	r25, 0x0F	; 15
    35fe:	90 83       	st	Z, r25
    3600:	e0 e9       	ldi	r30, 0x90	; 144
    3602:	f0 e0       	ldi	r31, 0x00	; 0
    3604:	90 81       	ld	r25, Z
    3606:	90 68       	ori	r25, 0x80	; 128
    3608:	90 83       	st	Z, r25
    360a:	90 81       	ld	r25, Z
    360c:	93 60       	ori	r25, 0x03	; 3
    360e:	90 83       	st	Z, r25
    3610:	a1 e9       	ldi	r26, 0x91	; 145
    3612:	b0 e0       	ldi	r27, 0x00	; 0
    3614:	9c 91       	ld	r25, X
    3616:	98 60       	ori	r25, 0x08	; 8
    3618:	9c 93       	st	X, r25
    361a:	e0 ea       	ldi	r30, 0xA0	; 160
    361c:	f0 e0       	ldi	r31, 0x00	; 0
    361e:	90 81       	ld	r25, Z
    3620:	90 68       	ori	r25, 0x80	; 128
    3622:	90 83       	st	Z, r25
    3624:	90 81       	ld	r25, Z
    3626:	90 62       	ori	r25, 0x20	; 32
    3628:	90 83       	st	Z, r25
    362a:	90 81       	ld	r25, Z
    362c:	98 60       	ori	r25, 0x08	; 8
    362e:	90 83       	st	Z, r25
    3630:	90 81       	ld	r25, Z
    3632:	93 60       	ori	r25, 0x03	; 3
    3634:	90 83       	st	Z, r25
    3636:	e1 ea       	ldi	r30, 0xA1	; 161
    3638:	f0 e0       	ldi	r31, 0x00	; 0
    363a:	90 81       	ld	r25, Z
    363c:	98 60       	ori	r25, 0x08	; 8
    363e:	90 83       	st	Z, r25
    3640:	90 81       	ld	r25, Z
    3642:	93 60       	ori	r25, 0x03	; 3
    3644:	90 83       	st	Z, r25
    3646:	9c 91       	ld	r25, X
    3648:	93 60       	ori	r25, 0x03	; 3
    364a:	9c 93       	st	X, r25
    364c:	e8 e1       	ldi	r30, 0x18	; 24
    364e:	f4 e0       	ldi	r31, 0x04	; 4
    3650:	35 e0       	ldi	r19, 0x05	; 5
    3652:	30 83       	st	Z, r19
    3654:	54 e0       	ldi	r21, 0x04	; 4
    3656:	51 83       	std	Z+1, r21	; 0x01
    3658:	46 e0       	ldi	r20, 0x06	; 6
    365a:	42 83       	std	Z+2, r20	; 0x02
    365c:	97 e0       	ldi	r25, 0x07	; 7
    365e:	93 83       	std	Z+3, r25	; 0x03
    3660:	ea e7       	ldi	r30, 0x7A	; 122
    3662:	f4 e0       	ldi	r31, 0x04	; 4
    3664:	90 83       	st	Z, r25
    3666:	91 e0       	ldi	r25, 0x01	; 1
    3668:	91 83       	std	Z+1, r25	; 0x01
    366a:	63 e0       	ldi	r22, 0x03	; 3
    366c:	62 83       	std	Z+2, r22	; 0x02
    366e:	53 83       	std	Z+3, r21	; 0x03
    3670:	ed eb       	ldi	r30, 0xBD	; 189
    3672:	f4 e0       	ldi	r31, 0x04	; 4
    3674:	40 83       	st	Z, r20
    3676:	11 82       	std	Z+1, r1	; 0x01
    3678:	22 83       	std	Z+2, r18	; 0x02
    367a:	33 83       	std	Z+3, r19	; 0x03
    367c:	e4 e2       	ldi	r30, 0x24	; 36
    367e:	f4 e0       	ldi	r31, 0x04	; 4
    3680:	80 83       	st	Z, r24
    3682:	91 83       	std	Z+1, r25	; 0x01
    3684:	82 83       	std	Z+2, r24	; 0x02
    3686:	93 83       	std	Z+3, r25	; 0x03
    3688:	7b de       	rcall	.-778    	; 0x3380 <stop_PID>
    368a:	93 de       	rcall	.-730    	; 0x33b2 <resetta_distanza>
    368c:	78 94       	sei
    368e:	08 95       	ret

00003690 <distanzaPercorsa>:
    3690:	cf 92       	push	r12
    3692:	df 92       	push	r13
    3694:	ef 92       	push	r14
    3696:	ff 92       	push	r15
    3698:	c0 90 e6 02 	lds	r12, 0x02E6	; 0x8002e6 <distanza>
    369c:	d0 90 e7 02 	lds	r13, 0x02E7	; 0x8002e7 <distanza+0x1>
    36a0:	e0 90 e8 02 	lds	r14, 0x02E8	; 0x8002e8 <distanza+0x2>
    36a4:	f0 90 e9 02 	lds	r15, 0x02E9	; 0x8002e9 <distanza+0x3>
    36a8:	81 e0       	ldi	r24, 0x01	; 1
    36aa:	80 93 c2 04 	sts	0x04C2, r24	; 0x8004c2 <cic>
    36ae:	80 91 c2 04 	lds	r24, 0x04C2	; 0x8004c2 <cic>
    36b2:	84 30       	cpi	r24, 0x04	; 4
    36b4:	40 f5       	brcc	.+80     	; 0x3706 <distanzaPercorsa+0x76>
    36b6:	e0 91 c2 04 	lds	r30, 0x04C2	; 0x8004c2 <cic>
    36ba:	f0 e0       	ldi	r31, 0x00	; 0
    36bc:	ee 0f       	add	r30, r30
    36be:	ff 1f       	adc	r31, r31
    36c0:	ee 0f       	add	r30, r30
    36c2:	ff 1f       	adc	r31, r31
    36c4:	ea 51       	subi	r30, 0x1A	; 26
    36c6:	fd 4f       	sbci	r31, 0xFD	; 253
    36c8:	60 81       	ld	r22, Z
    36ca:	71 81       	ldd	r23, Z+1	; 0x01
    36cc:	82 81       	ldd	r24, Z+2	; 0x02
    36ce:	93 81       	ldd	r25, Z+3	; 0x03
    36d0:	a7 01       	movw	r20, r14
    36d2:	96 01       	movw	r18, r12
    36d4:	a6 d5       	rcall	.+2892   	; 0x4222 <__cmpsf2>
    36d6:	88 23       	and	r24, r24
    36d8:	6c f4       	brge	.+26     	; 0x36f4 <distanzaPercorsa+0x64>
    36da:	e0 91 c2 04 	lds	r30, 0x04C2	; 0x8004c2 <cic>
    36de:	f0 e0       	ldi	r31, 0x00	; 0
    36e0:	ee 0f       	add	r30, r30
    36e2:	ff 1f       	adc	r31, r31
    36e4:	ee 0f       	add	r30, r30
    36e6:	ff 1f       	adc	r31, r31
    36e8:	ea 51       	subi	r30, 0x1A	; 26
    36ea:	fd 4f       	sbci	r31, 0xFD	; 253
    36ec:	c0 80       	ld	r12, Z
    36ee:	d1 80       	ldd	r13, Z+1	; 0x01
    36f0:	e2 80       	ldd	r14, Z+2	; 0x02
    36f2:	f3 80       	ldd	r15, Z+3	; 0x03
    36f4:	80 91 c2 04 	lds	r24, 0x04C2	; 0x8004c2 <cic>
    36f8:	8f 5f       	subi	r24, 0xFF	; 255
    36fa:	80 93 c2 04 	sts	0x04C2, r24	; 0x8004c2 <cic>
    36fe:	80 91 c2 04 	lds	r24, 0x04C2	; 0x8004c2 <cic>
    3702:	84 30       	cpi	r24, 0x04	; 4
    3704:	c0 f2       	brcs	.-80     	; 0x36b6 <distanzaPercorsa+0x26>
    3706:	c7 01       	movw	r24, r14
    3708:	b6 01       	movw	r22, r12
    370a:	ff 90       	pop	r15
    370c:	ef 90       	pop	r14
    370e:	df 90       	pop	r13
    3710:	cf 90       	pop	r12
    3712:	08 95       	ret

00003714 <set_giri>:
    3714:	ab 01       	movw	r20, r22
    3716:	bc 01       	movw	r22, r24
    3718:	10 92 c3 04 	sts	0x04C3, r1	; 0x8004c3 <cid>
    371c:	80 91 c3 04 	lds	r24, 0x04C3	; 0x8004c3 <cid>
    3720:	84 30       	cpi	r24, 0x04	; 4
    3722:	b0 f4       	brcc	.+44     	; 0x3750 <set_giri+0x3c>
    3724:	e0 91 c3 04 	lds	r30, 0x04C3	; 0x8004c3 <cid>
    3728:	f0 e0       	ldi	r31, 0x00	; 0
    372a:	ee 0f       	add	r30, r30
    372c:	ff 1f       	adc	r31, r31
    372e:	ee 0f       	add	r30, r30
    3730:	ff 1f       	adc	r31, r31
    3732:	e7 5f       	subi	r30, 0xF7	; 247
    3734:	fc 4f       	sbci	r31, 0xFC	; 252
    3736:	40 83       	st	Z, r20
    3738:	51 83       	std	Z+1, r21	; 0x01
    373a:	62 83       	std	Z+2, r22	; 0x02
    373c:	73 83       	std	Z+3, r23	; 0x03
    373e:	80 91 c3 04 	lds	r24, 0x04C3	; 0x8004c3 <cid>
    3742:	8f 5f       	subi	r24, 0xFF	; 255
    3744:	80 93 c3 04 	sts	0x04C3, r24	; 0x8004c3 <cid>
    3748:	80 91 c3 04 	lds	r24, 0x04C3	; 0x8004c3 <cid>
    374c:	84 30       	cpi	r24, 0x04	; 4
    374e:	50 f3       	brcs	.-44     	; 0x3724 <set_giri+0x10>
    3750:	08 95       	ret

00003752 <StopMotori>:
    3752:	60 e0       	ldi	r22, 0x00	; 0
    3754:	70 e0       	ldi	r23, 0x00	; 0
    3756:	cb 01       	movw	r24, r22
    3758:	dd cf       	rjmp	.-70     	; 0x3714 <set_giri>
    375a:	08 95       	ret

0000375c <set_giri_coppia>:
    375c:	e9 e0       	ldi	r30, 0x09	; 9
    375e:	f3 e0       	ldi	r31, 0x03	; 3
    3760:	24 83       	std	Z+4, r18	; 0x04
    3762:	35 83       	std	Z+5, r19	; 0x05
    3764:	46 83       	std	Z+6, r20	; 0x06
    3766:	57 83       	std	Z+7, r21	; 0x07
    3768:	24 87       	std	Z+12, r18	; 0x0c
    376a:	35 87       	std	Z+13, r19	; 0x0d
    376c:	46 87       	std	Z+14, r20	; 0x0e
    376e:	57 87       	std	Z+15, r21	; 0x0f
    3770:	60 83       	st	Z, r22
    3772:	71 83       	std	Z+1, r23	; 0x01
    3774:	82 83       	std	Z+2, r24	; 0x02
    3776:	93 83       	std	Z+3, r25	; 0x03
    3778:	60 87       	std	Z+8, r22	; 0x08
    377a:	71 87       	std	Z+9, r23	; 0x09
    377c:	82 87       	std	Z+10, r24	; 0x0a
    377e:	93 87       	std	Z+11, r25	; 0x0b
    3780:	08 95       	ret

00003782 <dritto>:
    3782:	8f 92       	push	r8
    3784:	9f 92       	push	r9
    3786:	af 92       	push	r10
    3788:	bf 92       	push	r11
    378a:	cf 92       	push	r12
    378c:	df 92       	push	r13
    378e:	ef 92       	push	r14
    3790:	ff 92       	push	r15
    3792:	6b 01       	movw	r12, r22
    3794:	7c 01       	movw	r14, r24
    3796:	49 01       	movw	r8, r18
    3798:	5a 01       	movw	r10, r20
    379a:	7a df       	rcall	.-268    	; 0x3690 <distanzaPercorsa>
    379c:	60 93 b3 04 	sts	0x04B3, r22	; 0x8004b3 <distanza_old>
    37a0:	70 93 b4 04 	sts	0x04B4, r23	; 0x8004b4 <distanza_old+0x1>
    37a4:	80 93 b5 04 	sts	0x04B5, r24	; 0x8004b5 <distanza_old+0x2>
    37a8:	90 93 b6 04 	sts	0x04B6, r25	; 0x8004b6 <distanza_old+0x3>
    37ac:	c5 01       	movw	r24, r10
    37ae:	b4 01       	movw	r22, r8
    37b0:	b1 df       	rcall	.-158    	; 0x3714 <set_giri>
    37b2:	6e df       	rcall	.-292    	; 0x3690 <distanzaPercorsa>
    37b4:	20 91 b3 04 	lds	r18, 0x04B3	; 0x8004b3 <distanza_old>
    37b8:	30 91 b4 04 	lds	r19, 0x04B4	; 0x8004b4 <distanza_old+0x1>
    37bc:	40 91 b5 04 	lds	r20, 0x04B5	; 0x8004b5 <distanza_old+0x2>
    37c0:	50 91 b6 04 	lds	r21, 0x04B6	; 0x8004b6 <distanza_old+0x3>
    37c4:	c9 d4       	rcall	.+2450   	; 0x4158 <__subsf3>
    37c6:	4f d2       	rcall	.+1182   	; 0x3c66 <ABS>
    37c8:	a7 01       	movw	r20, r14
    37ca:	96 01       	movw	r18, r12
    37cc:	2a d5       	rcall	.+2644   	; 0x4222 <__cmpsf2>
    37ce:	88 23       	and	r24, r24
    37d0:	84 f3       	brlt	.-32     	; 0x37b2 <dritto+0x30>
    37d2:	bf df       	rcall	.-130    	; 0x3752 <StopMotori>
    37d4:	ff 90       	pop	r15
    37d6:	ef 90       	pop	r14
    37d8:	df 90       	pop	r13
    37da:	cf 90       	pop	r12
    37dc:	bf 90       	pop	r11
    37de:	af 90       	pop	r10
    37e0:	9f 90       	pop	r9
    37e2:	8f 90       	pop	r8
    37e4:	08 95       	ret

000037e6 <reset_millis>:
    37e6:	10 92 7e 04 	sts	0x047E, r1	; 0x80047e <v_millis>
    37ea:	10 92 7f 04 	sts	0x047F, r1	; 0x80047f <v_millis+0x1>
    37ee:	10 92 80 04 	sts	0x0480, r1	; 0x800480 <v_millis+0x2>
    37f2:	10 92 81 04 	sts	0x0481, r1	; 0x800481 <v_millis+0x3>
    37f6:	08 95       	ret

000037f8 <millis>:
    37f8:	60 91 7e 04 	lds	r22, 0x047E	; 0x80047e <v_millis>
    37fc:	70 91 7f 04 	lds	r23, 0x047F	; 0x80047f <v_millis+0x1>
    3800:	80 91 80 04 	lds	r24, 0x0480	; 0x800480 <v_millis+0x2>
    3804:	90 91 81 04 	lds	r25, 0x0481	; 0x800481 <v_millis+0x3>
    3808:	08 95       	ret

0000380a <Fotoresistenza>:
	if(pulsante())Serial_Send_String("Pulsante \n");
	if(finecorsaCentrale())Serial_Send_String("Pala Davanti \n");
	if(finecorsaDX())Serial_Send_String("Baffo Dx \n");
	if(finecorsaSX())Serial_Send_String("Baffo Sx \n");
	if(finecorsaDietroDx())Serial_Send_String("Baffo Di Dx \n");
	if(finecorsaDietroSx())Serial_Send_String("Baffo Di Sx \n");
    380a:	cf 93       	push	r28
    380c:	df 93       	push	r29
    380e:	10 92 e0 04 	sts	0x04E0, r1	; 0x8004e0 <SFoto>
    3812:	10 92 e1 04 	sts	0x04E1, r1	; 0x8004e1 <SFoto+0x1>
    3816:	10 92 e2 04 	sts	0x04E2, r1	; 0x8004e2 <SFoto+0x2>
    381a:	10 92 e3 04 	sts	0x04E3, r1	; 0x8004e3 <SFoto+0x3>
    381e:	c5 e0       	ldi	r28, 0x05	; 5
    3820:	d0 e0       	ldi	r29, 0x00	; 0
    3822:	87 e0       	ldi	r24, 0x07	; 7
    3824:	0e 94 c0 00 	call	0x180	; 0x180 <StartADC>
    3828:	bc 01       	movw	r22, r24
    382a:	99 0f       	add	r25, r25
    382c:	88 0b       	sbc	r24, r24
    382e:	99 0b       	sbc	r25, r25
    3830:	97 d5       	rcall	.+2862   	; 0x4360 <__floatsisf>
    3832:	20 91 e0 04 	lds	r18, 0x04E0	; 0x8004e0 <SFoto>
    3836:	30 91 e1 04 	lds	r19, 0x04E1	; 0x8004e1 <SFoto+0x1>
    383a:	40 91 e2 04 	lds	r20, 0x04E2	; 0x8004e2 <SFoto+0x2>
    383e:	50 91 e3 04 	lds	r21, 0x04E3	; 0x8004e3 <SFoto+0x3>
    3842:	8b d4       	rcall	.+2326   	; 0x415a <__addsf3>
    3844:	60 93 e0 04 	sts	0x04E0, r22	; 0x8004e0 <SFoto>
    3848:	70 93 e1 04 	sts	0x04E1, r23	; 0x8004e1 <SFoto+0x1>
    384c:	80 93 e2 04 	sts	0x04E2, r24	; 0x8004e2 <SFoto+0x2>
    3850:	90 93 e3 04 	sts	0x04E3, r25	; 0x8004e3 <SFoto+0x3>
    3854:	21 97       	sbiw	r28, 0x01	; 1
    3856:	29 f7       	brne	.-54     	; 0x3822 <Fotoresistenza+0x18>
    3858:	20 e0       	ldi	r18, 0x00	; 0
    385a:	30 e0       	ldi	r19, 0x00	; 0
    385c:	40 ea       	ldi	r20, 0xA0	; 160
    385e:	50 e4       	ldi	r21, 0x40	; 64
    3860:	e4 d4       	rcall	.+2504   	; 0x422a <__divsf3>
    3862:	df 91       	pop	r29
    3864:	cf 91       	pop	r28
    3866:	08 95       	ret

00003868 <DistanzaIR>:
    3868:	cf 92       	push	r12
    386a:	df 92       	push	r13
    386c:	ef 92       	push	r14
    386e:	ff 92       	push	r15
    3870:	1f 93       	push	r17
    3872:	cf 93       	push	r28
    3874:	df 93       	push	r29
    3876:	18 2f       	mov	r17, r24
    3878:	c3 e0       	ldi	r28, 0x03	; 3
    387a:	d0 e0       	ldi	r29, 0x00	; 0
    387c:	c1 2c       	mov	r12, r1
    387e:	d1 2c       	mov	r13, r1
    3880:	76 01       	movw	r14, r12
    3882:	81 2f       	mov	r24, r17
    3884:	0e 94 c0 00 	call	0x180	; 0x180 <StartADC>
    3888:	bc 01       	movw	r22, r24
    388a:	99 0f       	add	r25, r25
    388c:	88 0b       	sbc	r24, r24
    388e:	99 0b       	sbc	r25, r25
    3890:	67 d5       	rcall	.+2766   	; 0x4360 <__floatsisf>
    3892:	9b 01       	movw	r18, r22
    3894:	ac 01       	movw	r20, r24
    3896:	c7 01       	movw	r24, r14
    3898:	b6 01       	movw	r22, r12
    389a:	5f d4       	rcall	.+2238   	; 0x415a <__addsf3>
    389c:	6b 01       	movw	r12, r22
    389e:	7c 01       	movw	r14, r24
    38a0:	21 97       	sbiw	r28, 0x01	; 1
    38a2:	79 f7       	brne	.-34     	; 0x3882 <DistanzaIR+0x1a>
    38a4:	20 e0       	ldi	r18, 0x00	; 0
    38a6:	30 e0       	ldi	r19, 0x00	; 0
    38a8:	40 e4       	ldi	r20, 0x40	; 64
    38aa:	50 e4       	ldi	r21, 0x40	; 64
    38ac:	be d4       	rcall	.+2428   	; 0x422a <__divsf3>
    38ae:	20 e0       	ldi	r18, 0x00	; 0
    38b0:	30 e0       	ldi	r19, 0x00	; 0
    38b2:	40 ea       	ldi	r20, 0xA0	; 160
    38b4:	50 e4       	ldi	r21, 0x40	; 64
    38b6:	08 d6       	rcall	.+3088   	; 0x44c8 <__mulsf3>
    38b8:	9b 01       	movw	r18, r22
    38ba:	ac 01       	movw	r20, r24
    38bc:	60 e0       	ldi	r22, 0x00	; 0
    38be:	7c ec       	ldi	r23, 0xCC	; 204
    38c0:	8f e4       	ldi	r24, 0x4F	; 79
    38c2:	96 e4       	ldi	r25, 0x46	; 70
    38c4:	b2 d4       	rcall	.+2404   	; 0x422a <__divsf3>
    38c6:	6b 01       	movw	r12, r22
    38c8:	7c 01       	movw	r14, r24
    38ca:	20 e0       	ldi	r18, 0x00	; 0
    38cc:	30 e0       	ldi	r19, 0x00	; 0
    38ce:	4c e0       	ldi	r20, 0x0C	; 12
    38d0:	52 e4       	ldi	r21, 0x42	; 66
    38d2:	f6 d5       	rcall	.+3052   	; 0x44c0 <__gesf2>
    38d4:	18 16       	cp	r1, r24
    38d6:	44 f4       	brge	.+16     	; 0x38e8 <DistanzaIR+0x80>
    38d8:	0f 2e       	mov	r0, r31
    38da:	c1 2c       	mov	r12, r1
    38dc:	d1 2c       	mov	r13, r1
    38de:	fa e7       	ldi	r31, 0x7A	; 122
    38e0:	ef 2e       	mov	r14, r31
    38e2:	f4 e4       	ldi	r31, 0x44	; 68
    38e4:	ff 2e       	mov	r15, r31
    38e6:	f0 2d       	mov	r31, r0
    38e8:	c7 01       	movw	r24, r14
    38ea:	b6 01       	movw	r22, r12
    38ec:	df 91       	pop	r29
    38ee:	cf 91       	pop	r28
    38f0:	1f 91       	pop	r17
    38f2:	ff 90       	pop	r15
    38f4:	ef 90       	pop	r14
    38f6:	df 90       	pop	r13
    38f8:	cf 90       	pop	r12
    38fa:	08 95       	ret

000038fc <TemperaturaDX>:
    38fc:	af 92       	push	r10
    38fe:	bf 92       	push	r11
    3900:	cf 92       	push	r12
    3902:	df 92       	push	r13
    3904:	ef 92       	push	r14
    3906:	ff 92       	push	r15
    3908:	0f 93       	push	r16
    390a:	1f 93       	push	r17
    390c:	cf 93       	push	r28
    390e:	df 93       	push	r29
    3910:	c2 e0       	ldi	r28, 0x02	; 2
    3912:	d0 e0       	ldi	r29, 0x00	; 0
    3914:	e1 2c       	mov	r14, r1
    3916:	f1 2c       	mov	r15, r1
    3918:	00 e0       	ldi	r16, 0x00	; 0
    391a:	10 e0       	ldi	r17, 0x00	; 0
    391c:	be 01       	movw	r22, r28
    391e:	8e ed       	ldi	r24, 0xDE	; 222
    3920:	90 e0       	ldi	r25, 0x00	; 0
    3922:	26 d3       	rcall	.+1612   	; 0x3f70 <TWI_read>
    3924:	bc 01       	movw	r22, r24
    3926:	99 0f       	add	r25, r25
    3928:	88 0b       	sbc	r24, r24
    392a:	99 0b       	sbc	r25, r25
    392c:	19 d5       	rcall	.+2610   	; 0x4360 <__floatsisf>
    392e:	a6 2e       	mov	r10, r22
    3930:	b7 2e       	mov	r11, r23
    3932:	c8 2e       	mov	r12, r24
    3934:	d9 2e       	mov	r13, r25
    3936:	2e 2d       	mov	r18, r14
    3938:	3f 2d       	mov	r19, r15
    393a:	40 2f       	mov	r20, r16
    393c:	51 2f       	mov	r21, r17
    393e:	c0 d5       	rcall	.+2944   	; 0x44c0 <__gesf2>
    3940:	18 16       	cp	r1, r24
    3942:	24 f4       	brge	.+8      	; 0x394c <TemperaturaDX+0x50>
    3944:	ea 2c       	mov	r14, r10
    3946:	fb 2c       	mov	r15, r11
    3948:	0c 2d       	mov	r16, r12
    394a:	1d 2d       	mov	r17, r13
    394c:	21 96       	adiw	r28, 0x01	; 1
    394e:	c9 30       	cpi	r28, 0x09	; 9
    3950:	d1 05       	cpc	r29, r1
    3952:	21 f7       	brne	.-56     	; 0x391c <TemperaturaDX+0x20>
    3954:	6e 2d       	mov	r22, r14
    3956:	7f 2d       	mov	r23, r15
    3958:	80 2f       	mov	r24, r16
    395a:	91 2f       	mov	r25, r17
    395c:	df 91       	pop	r29
    395e:	cf 91       	pop	r28
    3960:	1f 91       	pop	r17
    3962:	0f 91       	pop	r16
    3964:	ff 90       	pop	r15
    3966:	ef 90       	pop	r14
    3968:	df 90       	pop	r13
    396a:	cf 90       	pop	r12
    396c:	bf 90       	pop	r11
    396e:	af 90       	pop	r10
    3970:	08 95       	ret

00003972 <TemperaturaSX>:
    3972:	af 92       	push	r10
    3974:	bf 92       	push	r11
    3976:	cf 92       	push	r12
    3978:	df 92       	push	r13
    397a:	ef 92       	push	r14
    397c:	ff 92       	push	r15
    397e:	0f 93       	push	r16
    3980:	1f 93       	push	r17
    3982:	cf 93       	push	r28
    3984:	df 93       	push	r29
    3986:	c2 e0       	ldi	r28, 0x02	; 2
    3988:	d0 e0       	ldi	r29, 0x00	; 0
    398a:	e1 2c       	mov	r14, r1
    398c:	f1 2c       	mov	r15, r1
    398e:	00 e0       	ldi	r16, 0x00	; 0
    3990:	10 e0       	ldi	r17, 0x00	; 0
    3992:	be 01       	movw	r22, r28
    3994:	80 ed       	ldi	r24, 0xD0	; 208
    3996:	90 e0       	ldi	r25, 0x00	; 0
    3998:	eb d2       	rcall	.+1494   	; 0x3f70 <TWI_read>
    399a:	bc 01       	movw	r22, r24
    399c:	99 0f       	add	r25, r25
    399e:	88 0b       	sbc	r24, r24
    39a0:	99 0b       	sbc	r25, r25
    39a2:	de d4       	rcall	.+2492   	; 0x4360 <__floatsisf>
    39a4:	a6 2e       	mov	r10, r22
    39a6:	b7 2e       	mov	r11, r23
    39a8:	c8 2e       	mov	r12, r24
    39aa:	d9 2e       	mov	r13, r25
    39ac:	2e 2d       	mov	r18, r14
    39ae:	3f 2d       	mov	r19, r15
    39b0:	40 2f       	mov	r20, r16
    39b2:	51 2f       	mov	r21, r17
    39b4:	85 d5       	rcall	.+2826   	; 0x44c0 <__gesf2>
    39b6:	18 16       	cp	r1, r24
    39b8:	24 f4       	brge	.+8      	; 0x39c2 <TemperaturaSX+0x50>
    39ba:	ea 2c       	mov	r14, r10
    39bc:	fb 2c       	mov	r15, r11
    39be:	0c 2d       	mov	r16, r12
    39c0:	1d 2d       	mov	r17, r13
    39c2:	21 96       	adiw	r28, 0x01	; 1
    39c4:	c9 30       	cpi	r28, 0x09	; 9
    39c6:	d1 05       	cpc	r29, r1
    39c8:	21 f7       	brne	.-56     	; 0x3992 <TemperaturaSX+0x20>
    39ca:	6e 2d       	mov	r22, r14
    39cc:	7f 2d       	mov	r23, r15
    39ce:	80 2f       	mov	r24, r16
    39d0:	91 2f       	mov	r25, r17
    39d2:	df 91       	pop	r29
    39d4:	cf 91       	pop	r28
    39d6:	1f 91       	pop	r17
    39d8:	0f 91       	pop	r16
    39da:	ff 90       	pop	r15
    39dc:	ef 90       	pop	r14
    39de:	df 90       	pop	r13
    39e0:	cf 90       	pop	r12
    39e2:	bf 90       	pop	r11
    39e4:	af 90       	pop	r10
    39e6:	08 95       	ret

000039e8 <ColoreCasella>:
    39e8:	cf 92       	push	r12
    39ea:	df 92       	push	r13
    39ec:	ef 92       	push	r14
    39ee:	ff 92       	push	r15
    39f0:	cf 93       	push	r28
    39f2:	0b df       	rcall	.-490    	; 0x380a <Fotoresistenza>
    39f4:	6b 01       	movw	r12, r22
    39f6:	7c 01       	movw	r14, r24
    39f8:	8a e3       	ldi	r24, 0x3A	; 58
    39fa:	92 e0       	ldi	r25, 0x02	; 2
    39fc:	6e d1       	rcall	.+732    	; 0x3cda <Serial_Send_String>
    39fe:	c7 01       	movw	r24, r14
    3a00:	b6 01       	movw	r22, r12
    3a02:	19 d2       	rcall	.+1074   	; 0x3e36 <Serial_Send_Float>
    3a04:	8e e3       	ldi	r24, 0x3E	; 62
    3a06:	92 e0       	ldi	r25, 0x02	; 2
    3a08:	68 d1       	rcall	.+720    	; 0x3cda <Serial_Send_String>
    3a0a:	20 e0       	ldi	r18, 0x00	; 0
    3a0c:	30 e0       	ldi	r19, 0x00	; 0
    3a0e:	48 e4       	ldi	r20, 0x48	; 72
    3a10:	54 e4       	ldi	r21, 0x44	; 68
    3a12:	c7 01       	movw	r24, r14
    3a14:	b6 01       	movw	r22, r12
    3a16:	54 d5       	rcall	.+2728   	; 0x44c0 <__gesf2>
    3a18:	18 16       	cp	r1, r24
    3a1a:	ac f0       	brlt	.+42     	; 0x3a46 <ColoreCasella+0x5e>
    3a1c:	20 e0       	ldi	r18, 0x00	; 0
    3a1e:	30 e8       	ldi	r19, 0x80	; 128
    3a20:	49 e0       	ldi	r20, 0x09	; 9
    3a22:	54 e4       	ldi	r21, 0x44	; 68
    3a24:	c7 01       	movw	r24, r14
    3a26:	b6 01       	movw	r22, r12
    3a28:	4b d5       	rcall	.+2710   	; 0x44c0 <__gesf2>
    3a2a:	18 16       	cp	r1, r24
    3a2c:	74 f0       	brlt	.+28     	; 0x3a4a <ColoreCasella+0x62>
    3a2e:	c1 e0       	ldi	r28, 0x01	; 1
    3a30:	20 e0       	ldi	r18, 0x00	; 0
    3a32:	30 e0       	ldi	r19, 0x00	; 0
    3a34:	48 e4       	ldi	r20, 0x48	; 72
    3a36:	53 e4       	ldi	r21, 0x43	; 67
    3a38:	c7 01       	movw	r24, r14
    3a3a:	b6 01       	movw	r22, r12
    3a3c:	41 d5       	rcall	.+2690   	; 0x44c0 <__gesf2>
    3a3e:	18 16       	cp	r1, r24
    3a40:	2c f0       	brlt	.+10     	; 0x3a4c <ColoreCasella+0x64>
    3a42:	c0 e0       	ldi	r28, 0x00	; 0
    3a44:	03 c0       	rjmp	.+6      	; 0x3a4c <ColoreCasella+0x64>
    3a46:	c2 e0       	ldi	r28, 0x02	; 2
    3a48:	01 c0       	rjmp	.+2      	; 0x3a4c <ColoreCasella+0x64>
    3a4a:	c0 e0       	ldi	r28, 0x00	; 0
    3a4c:	8c 2f       	mov	r24, r28
    3a4e:	cf 91       	pop	r28
    3a50:	ff 90       	pop	r15
    3a52:	ef 90       	pop	r14
    3a54:	df 90       	pop	r13
    3a56:	cf 90       	pop	r12
    3a58:	08 95       	ret

00003a5a <finecorsaDX>:
    3a5a:	10 92 da 04 	sts	0x04DA, r1	; 0x8004da <valore>
    3a5e:	10 92 d5 04 	sts	0x04D5, r1	; 0x8004d5 <i>
    3a62:	18 99       	sbic	0x03, 0	; 3
    3a64:	0f c0       	rjmp	.+30     	; 0x3a84 <finecorsaDX+0x2a>
    3a66:	02 c0       	rjmp	.+4      	; 0x3a6c <finecorsaDX+0x12>
    3a68:	18 99       	sbic	0x03, 0	; 3
    3a6a:	04 c0       	rjmp	.+8      	; 0x3a74 <finecorsaDX+0x1a>
    3a6c:	81 e0       	ldi	r24, 0x01	; 1
    3a6e:	80 93 da 04 	sts	0x04DA, r24	; 0x8004da <valore>
    3a72:	05 c0       	rjmp	.+10     	; 0x3a7e <finecorsaDX+0x24>
    3a74:	80 93 d5 04 	sts	0x04D5, r24	; 0x8004d5 <i>
    3a78:	8f 5f       	subi	r24, 0xFF	; 255
    3a7a:	87 30       	cpi	r24, 0x07	; 7
    3a7c:	a9 f7       	brne	.-22     	; 0x3a68 <finecorsaDX+0xe>
    3a7e:	80 91 da 04 	lds	r24, 0x04DA	; 0x8004da <valore>
    3a82:	08 95       	ret
    3a84:	81 e0       	ldi	r24, 0x01	; 1
    3a86:	80 93 d5 04 	sts	0x04D5, r24	; 0x8004d5 <i>
    3a8a:	82 e0       	ldi	r24, 0x02	; 2
    3a8c:	ed cf       	rjmp	.-38     	; 0x3a68 <finecorsaDX+0xe>

00003a8e <finecorsaSX>:
    3a8e:	10 92 da 04 	sts	0x04DA, r1	; 0x8004da <valore>
    3a92:	10 92 d5 04 	sts	0x04D5, r1	; 0x8004d5 <i>
    3a96:	1a 99       	sbic	0x03, 2	; 3
    3a98:	0f c0       	rjmp	.+30     	; 0x3ab8 <finecorsaSX+0x2a>
    3a9a:	02 c0       	rjmp	.+4      	; 0x3aa0 <finecorsaSX+0x12>
    3a9c:	1a 99       	sbic	0x03, 2	; 3
    3a9e:	04 c0       	rjmp	.+8      	; 0x3aa8 <finecorsaSX+0x1a>
    3aa0:	81 e0       	ldi	r24, 0x01	; 1
    3aa2:	80 93 da 04 	sts	0x04DA, r24	; 0x8004da <valore>
    3aa6:	05 c0       	rjmp	.+10     	; 0x3ab2 <finecorsaSX+0x24>
    3aa8:	80 93 d5 04 	sts	0x04D5, r24	; 0x8004d5 <i>
    3aac:	8f 5f       	subi	r24, 0xFF	; 255
    3aae:	87 30       	cpi	r24, 0x07	; 7
    3ab0:	a9 f7       	brne	.-22     	; 0x3a9c <finecorsaSX+0xe>
    3ab2:	80 91 da 04 	lds	r24, 0x04DA	; 0x8004da <valore>
    3ab6:	08 95       	ret
    3ab8:	81 e0       	ldi	r24, 0x01	; 1
    3aba:	80 93 d5 04 	sts	0x04D5, r24	; 0x8004d5 <i>
    3abe:	82 e0       	ldi	r24, 0x02	; 2
    3ac0:	ed cf       	rjmp	.-38     	; 0x3a9c <finecorsaSX+0xe>

00003ac2 <finecorsaCentrale>:
    3ac2:	10 92 da 04 	sts	0x04DA, r1	; 0x8004da <valore>
    3ac6:	10 92 d5 04 	sts	0x04D5, r1	; 0x8004d5 <i>
    3aca:	19 99       	sbic	0x03, 1	; 3
    3acc:	0f c0       	rjmp	.+30     	; 0x3aec <finecorsaCentrale+0x2a>
    3ace:	02 c0       	rjmp	.+4      	; 0x3ad4 <finecorsaCentrale+0x12>
    3ad0:	19 99       	sbic	0x03, 1	; 3
    3ad2:	04 c0       	rjmp	.+8      	; 0x3adc <finecorsaCentrale+0x1a>
    3ad4:	81 e0       	ldi	r24, 0x01	; 1
    3ad6:	80 93 da 04 	sts	0x04DA, r24	; 0x8004da <valore>
    3ada:	05 c0       	rjmp	.+10     	; 0x3ae6 <finecorsaCentrale+0x24>
    3adc:	80 93 d5 04 	sts	0x04D5, r24	; 0x8004d5 <i>
    3ae0:	8f 5f       	subi	r24, 0xFF	; 255
    3ae2:	87 30       	cpi	r24, 0x07	; 7
    3ae4:	a9 f7       	brne	.-22     	; 0x3ad0 <finecorsaCentrale+0xe>
    3ae6:	80 91 da 04 	lds	r24, 0x04DA	; 0x8004da <valore>
    3aea:	08 95       	ret
    3aec:	81 e0       	ldi	r24, 0x01	; 1
    3aee:	80 93 d5 04 	sts	0x04D5, r24	; 0x8004d5 <i>
    3af2:	82 e0       	ldi	r24, 0x02	; 2
    3af4:	ed cf       	rjmp	.-38     	; 0x3ad0 <finecorsaCentrale+0xe>

00003af6 <finecorsaDietroDx>:
    3af6:	10 92 da 04 	sts	0x04DA, r1	; 0x8004da <valore>
    3afa:	10 92 d5 04 	sts	0x04D5, r1	; 0x8004d5 <i>
    3afe:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__TEXT_REGION_LENGTH__+0x700106>
    3b02:	80 fd       	sbrc	r24, 0
    3b04:	10 c0       	rjmp	.+32     	; 0x3b26 <finecorsaDietroDx+0x30>
    3b06:	03 c0       	rjmp	.+6      	; 0x3b0e <finecorsaDietroDx+0x18>
    3b08:	90 81       	ld	r25, Z
    3b0a:	90 fd       	sbrc	r25, 0
    3b0c:	04 c0       	rjmp	.+8      	; 0x3b16 <finecorsaDietroDx+0x20>
    3b0e:	81 e0       	ldi	r24, 0x01	; 1
    3b10:	80 93 da 04 	sts	0x04DA, r24	; 0x8004da <valore>
    3b14:	05 c0       	rjmp	.+10     	; 0x3b20 <finecorsaDietroDx+0x2a>
    3b16:	80 93 d5 04 	sts	0x04D5, r24	; 0x8004d5 <i>
    3b1a:	8f 5f       	subi	r24, 0xFF	; 255
    3b1c:	87 30       	cpi	r24, 0x07	; 7
    3b1e:	a1 f7       	brne	.-24     	; 0x3b08 <finecorsaDietroDx+0x12>
    3b20:	80 91 da 04 	lds	r24, 0x04DA	; 0x8004da <valore>
    3b24:	08 95       	ret
    3b26:	81 e0       	ldi	r24, 0x01	; 1
    3b28:	80 93 d5 04 	sts	0x04D5, r24	; 0x8004d5 <i>
    3b2c:	82 e0       	ldi	r24, 0x02	; 2
    3b2e:	e6 e0       	ldi	r30, 0x06	; 6
    3b30:	f1 e0       	ldi	r31, 0x01	; 1
    3b32:	ea cf       	rjmp	.-44     	; 0x3b08 <finecorsaDietroDx+0x12>

00003b34 <finecorsaDietroSx>:
    3b34:	10 92 da 04 	sts	0x04DA, r1	; 0x8004da <valore>
    3b38:	10 92 d5 04 	sts	0x04D5, r1	; 0x8004d5 <i>
    3b3c:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <__TEXT_REGION_LENGTH__+0x700106>
    3b40:	81 fd       	sbrc	r24, 1
    3b42:	10 c0       	rjmp	.+32     	; 0x3b64 <finecorsaDietroSx+0x30>
    3b44:	03 c0       	rjmp	.+6      	; 0x3b4c <finecorsaDietroSx+0x18>
    3b46:	90 81       	ld	r25, Z
    3b48:	91 fd       	sbrc	r25, 1
    3b4a:	04 c0       	rjmp	.+8      	; 0x3b54 <finecorsaDietroSx+0x20>
    3b4c:	81 e0       	ldi	r24, 0x01	; 1
    3b4e:	80 93 da 04 	sts	0x04DA, r24	; 0x8004da <valore>
    3b52:	05 c0       	rjmp	.+10     	; 0x3b5e <finecorsaDietroSx+0x2a>
    3b54:	80 93 d5 04 	sts	0x04D5, r24	; 0x8004d5 <i>
    3b58:	8f 5f       	subi	r24, 0xFF	; 255
    3b5a:	87 30       	cpi	r24, 0x07	; 7
    3b5c:	a1 f7       	brne	.-24     	; 0x3b46 <finecorsaDietroSx+0x12>
    3b5e:	80 91 da 04 	lds	r24, 0x04DA	; 0x8004da <valore>
    3b62:	08 95       	ret
    3b64:	81 e0       	ldi	r24, 0x01	; 1
    3b66:	80 93 d5 04 	sts	0x04D5, r24	; 0x8004d5 <i>
    3b6a:	82 e0       	ldi	r24, 0x02	; 2
    3b6c:	e6 e0       	ldi	r30, 0x06	; 6
    3b6e:	f1 e0       	ldi	r31, 0x01	; 1
    3b70:	ea cf       	rjmp	.-44     	; 0x3b46 <finecorsaDietroSx+0x12>

00003b72 <initPulsanti>:
    3b72:	84 b1       	in	r24, 0x04	; 4
    3b74:	88 7f       	andi	r24, 0xF8	; 248
    3b76:	84 b9       	out	0x04, r24	; 4
    3b78:	85 b1       	in	r24, 0x05	; 5
    3b7a:	87 60       	ori	r24, 0x07	; 7
    3b7c:	85 b9       	out	0x05, r24	; 5
    3b7e:	99 98       	cbi	0x13, 1	; 19
    3b80:	a1 9a       	sbi	0x14, 1	; 20
    3b82:	e7 e0       	ldi	r30, 0x07	; 7
    3b84:	f1 e0       	ldi	r31, 0x01	; 1
    3b86:	80 81       	ld	r24, Z
    3b88:	8c 7f       	andi	r24, 0xFC	; 252
    3b8a:	80 83       	st	Z, r24
    3b8c:	e8 e0       	ldi	r30, 0x08	; 8
    3b8e:	f1 e0       	ldi	r31, 0x01	; 1
    3b90:	80 81       	ld	r24, Z
    3b92:	83 60       	ori	r24, 0x03	; 3
    3b94:	80 83       	st	Z, r24
    3b96:	08 95       	ret

00003b98 <inclinazione>:

}

uint8_t ultimainclinazione, casella_inc;
float gradi_inc;
uint8_t inclinazione(){
    3b98:	cf 92       	push	r12
    3b9a:	df 92       	push	r13
    3b9c:	ef 92       	push	r14
    3b9e:	ff 92       	push	r15
	casella_inc=piano;
    3ba0:	10 92 df 04 	sts	0x04DF, r1	; 0x8004df <casella_inc>
	gradi_inc=gradiGiroscopio(asseY);
    3ba4:	82 e0       	ldi	r24, 0x02	; 2
    3ba6:	90 e0       	ldi	r25, 0x00	; 0
    3ba8:	0e 94 c8 01 	call	0x390	; 0x390 <gradiGiroscopio>
    3bac:	6b 01       	movw	r12, r22
    3bae:	7c 01       	movw	r14, r24
    3bb0:	60 93 d6 04 	sts	0x04D6, r22	; 0x8004d6 <gradi_inc>
    3bb4:	70 93 d7 04 	sts	0x04D7, r23	; 0x8004d7 <gradi_inc+0x1>
    3bb8:	80 93 d8 04 	sts	0x04D8, r24	; 0x8004d8 <gradi_inc+0x2>
    3bbc:	90 93 d9 04 	sts	0x04D9, r25	; 0x8004d9 <gradi_inc+0x3>
	if((gradi_inc>gradiSalita_errore)||(gradi_inc<gradiDiscesa_errore)){
    3bc0:	20 e0       	ldi	r18, 0x00	; 0
    3bc2:	30 e0       	ldi	r19, 0x00	; 0
    3bc4:	4c e0       	ldi	r20, 0x0C	; 12
    3bc6:	52 e4       	ldi	r21, 0x42	; 66
    3bc8:	7b d4       	rcall	.+2294   	; 0x44c0 <__gesf2>
    3bca:	18 16       	cp	r1, r24
    3bcc:	4c f0       	brlt	.+18     	; 0x3be0 <inclinazione+0x48>
    3bce:	20 e0       	ldi	r18, 0x00	; 0
    3bd0:	30 e0       	ldi	r19, 0x00	; 0
    3bd2:	4c e0       	ldi	r20, 0x0C	; 12
    3bd4:	52 ec       	ldi	r21, 0xC2	; 194
    3bd6:	c7 01       	movw	r24, r14
    3bd8:	b6 01       	movw	r22, r12
    3bda:	23 d3       	rcall	.+1606   	; 0x4222 <__cmpsf2>
    3bdc:	88 23       	and	r24, r24
    3bde:	24 f4       	brge	.+8      	; 0x3be8 <inclinazione+0x50>
		casella_inc=errore_inc;
    3be0:	83 e0       	ldi	r24, 0x03	; 3
    3be2:	80 93 df 04 	sts	0x04DF, r24	; 0x8004df <casella_inc>
    3be6:	36 c0       	rjmp	.+108    	; 0x3c54 <inclinazione+0xbc>
	}
	else if((gradi_inc>gradiSalita)||((gradi_inc>gradiMinSalita)&&(ultimainclinazione==salita))){
    3be8:	20 e0       	ldi	r18, 0x00	; 0
    3bea:	30 e0       	ldi	r19, 0x00	; 0
    3bec:	40 e2       	ldi	r20, 0x20	; 32
    3bee:	51 e4       	ldi	r21, 0x41	; 65
    3bf0:	c7 01       	movw	r24, r14
    3bf2:	b6 01       	movw	r22, r12
    3bf4:	65 d4       	rcall	.+2250   	; 0x44c0 <__gesf2>
    3bf6:	18 16       	cp	r1, r24
    3bf8:	6c f0       	brlt	.+26     	; 0x3c14 <inclinazione+0x7c>
    3bfa:	20 e0       	ldi	r18, 0x00	; 0
    3bfc:	30 e0       	ldi	r19, 0x00	; 0
    3bfe:	40 ea       	ldi	r20, 0xA0	; 160
    3c00:	50 e4       	ldi	r21, 0x40	; 64
    3c02:	c7 01       	movw	r24, r14
    3c04:	b6 01       	movw	r22, r12
    3c06:	5c d4       	rcall	.+2232   	; 0x44c0 <__gesf2>
    3c08:	18 16       	cp	r1, r24
    3c0a:	44 f4       	brge	.+16     	; 0x3c1c <inclinazione+0x84>
    3c0c:	80 91 d4 04 	lds	r24, 0x04D4	; 0x8004d4 <ultimainclinazione>
    3c10:	81 30       	cpi	r24, 0x01	; 1
    3c12:	21 f4       	brne	.+8      	; 0x3c1c <inclinazione+0x84>
		casella_inc=salita;
    3c14:	81 e0       	ldi	r24, 0x01	; 1
    3c16:	80 93 df 04 	sts	0x04DF, r24	; 0x8004df <casella_inc>
    3c1a:	1c c0       	rjmp	.+56     	; 0x3c54 <inclinazione+0xbc>
	}
	else if((gradi_inc<gradiDiscea)||((gradi_inc<gradiMinDiscesa)&&(ultimainclinazione==discesa))){
    3c1c:	20 e0       	ldi	r18, 0x00	; 0
    3c1e:	30 e0       	ldi	r19, 0x00	; 0
    3c20:	40 e2       	ldi	r20, 0x20	; 32
    3c22:	51 ec       	ldi	r21, 0xC1	; 193
    3c24:	c7 01       	movw	r24, r14
    3c26:	b6 01       	movw	r22, r12
    3c28:	fc d2       	rcall	.+1528   	; 0x4222 <__cmpsf2>
    3c2a:	88 23       	and	r24, r24
    3c2c:	6c f0       	brlt	.+26     	; 0x3c48 <inclinazione+0xb0>
    3c2e:	20 e0       	ldi	r18, 0x00	; 0
    3c30:	30 e0       	ldi	r19, 0x00	; 0
    3c32:	40 ea       	ldi	r20, 0xA0	; 160
    3c34:	50 ec       	ldi	r21, 0xC0	; 192
    3c36:	c7 01       	movw	r24, r14
    3c38:	b6 01       	movw	r22, r12
    3c3a:	f3 d2       	rcall	.+1510   	; 0x4222 <__cmpsf2>
    3c3c:	88 23       	and	r24, r24
    3c3e:	44 f4       	brge	.+16     	; 0x3c50 <inclinazione+0xb8>
    3c40:	80 91 d4 04 	lds	r24, 0x04D4	; 0x8004d4 <ultimainclinazione>
    3c44:	82 30       	cpi	r24, 0x02	; 2
    3c46:	21 f4       	brne	.+8      	; 0x3c50 <inclinazione+0xb8>
		casella_inc=discesa;
    3c48:	82 e0       	ldi	r24, 0x02	; 2
    3c4a:	80 93 df 04 	sts	0x04DF, r24	; 0x8004df <casella_inc>
    3c4e:	02 c0       	rjmp	.+4      	; 0x3c54 <inclinazione+0xbc>
	}
	else{
		casella_inc=piano;
    3c50:	10 92 df 04 	sts	0x04DF, r1	; 0x8004df <casella_inc>
	}
	ultimainclinazione=casella_inc;
    3c54:	80 91 df 04 	lds	r24, 0x04DF	; 0x8004df <casella_inc>
    3c58:	80 93 d4 04 	sts	0x04D4, r24	; 0x8004d4 <ultimainclinazione>
	return casella_inc;
}
    3c5c:	ff 90       	pop	r15
    3c5e:	ef 90       	pop	r14
    3c60:	df 90       	pop	r13
    3c62:	cf 90       	pop	r12
    3c64:	08 95       	ret

00003c66 <ABS>:
}
unsigned char Serial_Rx( void )
{
	while ( !(UCSR0A & (1<<RXC0)) );
	return UDR0;
}
    3c66:	cf 92       	push	r12
    3c68:	df 92       	push	r13
    3c6a:	ef 92       	push	r14
    3c6c:	ff 92       	push	r15
    3c6e:	6b 01       	movw	r12, r22
    3c70:	7c 01       	movw	r14, r24
    3c72:	20 e0       	ldi	r18, 0x00	; 0
    3c74:	30 e0       	ldi	r19, 0x00	; 0
    3c76:	a9 01       	movw	r20, r18
    3c78:	d4 d2       	rcall	.+1448   	; 0x4222 <__cmpsf2>
    3c7a:	88 23       	and	r24, r24
    3c7c:	24 f4       	brge	.+8      	; 0x3c86 <ABS+0x20>
    3c7e:	f7 fa       	bst	r15, 7
    3c80:	f0 94       	com	r15
    3c82:	f7 f8       	bld	r15, 7
    3c84:	f0 94       	com	r15
    3c86:	c7 01       	movw	r24, r14
    3c88:	b6 01       	movw	r22, r12
    3c8a:	ff 90       	pop	r15
    3c8c:	ef 90       	pop	r14
    3c8e:	df 90       	pop	r13
    3c90:	cf 90       	pop	r12
    3c92:	08 95       	ret

00003c94 <Serial_Init>:
    3c94:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <BAUD0>
    3c98:	90 91 9e 02 	lds	r25, 0x029E	; 0x80029e <BAUD0+0x1>
    3c9c:	a0 91 9f 02 	lds	r26, 0x029F	; 0x80029f <BAUD0+0x2>
    3ca0:	b0 91 a0 02 	lds	r27, 0x02A0	; 0x8002a0 <BAUD0+0x3>
    3ca4:	89 2f       	mov	r24, r25
    3ca6:	9a 2f       	mov	r25, r26
    3ca8:	ab 2f       	mov	r26, r27
    3caa:	bb 27       	eor	r27, r27
    3cac:	a7 fd       	sbrc	r26, 7
    3cae:	ba 95       	dec	r27
    3cb0:	80 93 c5 00 	sts	0x00C5, r24	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
    3cb4:	80 91 9d 02 	lds	r24, 0x029D	; 0x80029d <BAUD0>
    3cb8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
    3cbc:	88 e1       	ldi	r24, 0x18	; 24
    3cbe:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7000c1>
    3cc2:	86 e0       	ldi	r24, 0x06	; 6
    3cc4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7000c2>
    3cc8:	08 95       	ret

00003cca <Serial_Tx>:
    3cca:	e0 ec       	ldi	r30, 0xC0	; 192
    3ccc:	f0 e0       	ldi	r31, 0x00	; 0
    3cce:	90 81       	ld	r25, Z
    3cd0:	95 ff       	sbrs	r25, 5
    3cd2:	fd cf       	rjmp	.-6      	; 0x3cce <Serial_Tx+0x4>
    3cd4:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
    3cd8:	08 95       	ret

00003cda <Serial_Send_String>:
	}
}


void Serial_Send_String(char *string1)
{
    3cda:	ef 92       	push	r14
    3cdc:	ff 92       	push	r15
    3cde:	0f 93       	push	r16
    3ce0:	1f 93       	push	r17
    3ce2:	cf 93       	push	r28
    3ce4:	df 93       	push	r29
    3ce6:	8c 01       	movw	r16, r24
    3ce8:	7c 01       	movw	r14, r24
	int i=0;
	for(i=0;i<strlen(string1);i++)
    3cea:	c0 e0       	ldi	r28, 0x00	; 0
    3cec:	d0 e0       	ldi	r29, 0x00	; 0
    3cee:	05 c0       	rjmp	.+10     	; 0x3cfa <Serial_Send_String+0x20>
	{
		Serial_Tx(string1[i]);
    3cf0:	f7 01       	movw	r30, r14
    3cf2:	81 91       	ld	r24, Z+
    3cf4:	7f 01       	movw	r14, r30
    3cf6:	e9 df       	rcall	.-46     	; 0x3cca <Serial_Tx>


void Serial_Send_String(char *string1)
{
	int i=0;
	for(i=0;i<strlen(string1);i++)
    3cf8:	21 96       	adiw	r28, 0x01	; 1
    3cfa:	f8 01       	movw	r30, r16
    3cfc:	01 90       	ld	r0, Z+
    3cfe:	00 20       	and	r0, r0
    3d00:	e9 f7       	brne	.-6      	; 0x3cfc <Serial_Send_String+0x22>
    3d02:	31 97       	sbiw	r30, 0x01	; 1
    3d04:	e0 1b       	sub	r30, r16
    3d06:	f1 0b       	sbc	r31, r17
    3d08:	ce 17       	cp	r28, r30
    3d0a:	df 07       	cpc	r29, r31
    3d0c:	88 f3       	brcs	.-30     	; 0x3cf0 <Serial_Send_String+0x16>
	{
		Serial_Tx(string1[i]);
	}
}
    3d0e:	df 91       	pop	r29
    3d10:	cf 91       	pop	r28
    3d12:	1f 91       	pop	r17
    3d14:	0f 91       	pop	r16
    3d16:	ff 90       	pop	r15
    3d18:	ef 90       	pop	r14
    3d1a:	08 95       	ret

00003d1c <Serial_Send_Int>:
	while ( !(UCSR0A & (1<<RXC0)) );
	return UDR0;
}

void Serial_Send_Int(int32_t num)
{
    3d1c:	2f 92       	push	r2
    3d1e:	3f 92       	push	r3
    3d20:	4f 92       	push	r4
    3d22:	5f 92       	push	r5
    3d24:	7f 92       	push	r7
    3d26:	8f 92       	push	r8
    3d28:	9f 92       	push	r9
    3d2a:	af 92       	push	r10
    3d2c:	bf 92       	push	r11
    3d2e:	cf 92       	push	r12
    3d30:	df 92       	push	r13
    3d32:	ef 92       	push	r14
    3d34:	ff 92       	push	r15
    3d36:	0f 93       	push	r16
    3d38:	1f 93       	push	r17
    3d3a:	cf 93       	push	r28
    3d3c:	df 93       	push	r29
    3d3e:	cd b7       	in	r28, 0x3d	; 61
    3d40:	de b7       	in	r29, 0x3e	; 62
    3d42:	a0 97       	sbiw	r28, 0x20	; 32
    3d44:	0f b6       	in	r0, 0x3f	; 63
    3d46:	f8 94       	cli
    3d48:	de bf       	out	0x3e, r29	; 62
    3d4a:	0f be       	out	0x3f, r0	; 63
    3d4c:	cd bf       	out	0x3d, r28	; 61
    3d4e:	6b 01       	movw	r12, r22
    3d50:	7c 01       	movw	r14, r24
	if(num<0)
    3d52:	99 23       	and	r25, r25
    3d54:	0c f0       	brlt	.+2      	; 0x3d58 <Serial_Send_Int+0x3c>
    3d56:	4c c0       	rjmp	.+152    	; 0x3df0 <Serial_Send_Int+0xd4>
	{
		Serial_Send_String("-");
    3d58:	81 e9       	ldi	r24, 0x91	; 145
    3d5a:	92 e0       	ldi	r25, 0x02	; 2
    3d5c:	be df       	rcall	.-132    	; 0x3cda <Serial_Send_String>
		num=-num;
    3d5e:	f0 94       	com	r15
    3d60:	e0 94       	com	r14
    3d62:	d0 94       	com	r13
    3d64:	c0 94       	com	r12
    3d66:	c1 1c       	adc	r12, r1
    3d68:	d1 1c       	adc	r13, r1
    3d6a:	e1 1c       	adc	r14, r1
    3d6c:	f1 1c       	adc	r15, r1
	}
	if(num==0){Serial_Tx('0');}
    3d6e:	c1 14       	cp	r12, r1
    3d70:	d1 04       	cpc	r13, r1
    3d72:	e1 04       	cpc	r14, r1
    3d74:	f1 04       	cpc	r15, r1
    3d76:	19 f4       	brne	.+6      	; 0x3d7e <Serial_Send_Int+0x62>
    3d78:	80 e3       	ldi	r24, 0x30	; 48
    3d7a:	a7 df       	rcall	.-178    	; 0x3cca <Serial_Tx>
    3d7c:	3f c0       	rjmp	.+126    	; 0x3dfc <Serial_Send_Int+0xe0>
    3d7e:	8e 01       	movw	r16, r28
    3d80:	0f 5f       	subi	r16, 0xFF	; 255
    3d82:	1f 4f       	sbci	r17, 0xFF	; 255
    3d84:	5e 01       	movw	r10, r28
    3d86:	81 e2       	ldi	r24, 0x21	; 33
    3d88:	a8 0e       	add	r10, r24
    3d8a:	b1 1c       	adc	r11, r1
	while ( !(UCSR0A & (1<<RXC0)) );
	return UDR0;
}

void Serial_Send_Int(int32_t num)
{
    3d8c:	f8 01       	movw	r30, r16
	if(num==0){Serial_Tx('0');}
	else
	{
		char str[32];				// definisce una stringa sulla quale convertire il numero da trasmettere (max 10 cifre)
		char i;						// contatore ciclo
		for(i=0;i<32;i++) str[i]=0; // cancella la stringa
    3d8e:	11 92       	st	Z+, r1
    3d90:	ea 15       	cp	r30, r10
    3d92:	fb 05       	cpc	r31, r11
    3d94:	e1 f7       	brne	.-8      	; 0x3d8e <Serial_Send_Int+0x72>
    3d96:	0f 2e       	mov	r0, r31
    3d98:	ff e1       	ldi	r31, 0x1F	; 31
    3d9a:	7f 2e       	mov	r7, r31
    3d9c:	f0 2d       	mov	r31, r0
		i=31;
		while (num)
		{
			str[i]=num%10+'0';		// converte il numero da trasmettere in una stringa (dalla cifra meno significativa)
    3d9e:	0f 2e       	mov	r0, r31
    3da0:	fa e0       	ldi	r31, 0x0A	; 10
    3da2:	2f 2e       	mov	r2, r31
    3da4:	31 2c       	mov	r3, r1
    3da6:	41 2c       	mov	r4, r1
    3da8:	51 2c       	mov	r5, r1
    3daa:	f0 2d       	mov	r31, r0
    3dac:	88 24       	eor	r8, r8
    3dae:	83 94       	inc	r8
    3db0:	91 2c       	mov	r9, r1
    3db2:	8c 0e       	add	r8, r28
    3db4:	9d 1e       	adc	r9, r29
    3db6:	87 0c       	add	r8, r7
    3db8:	91 1c       	adc	r9, r1
    3dba:	c7 01       	movw	r24, r14
    3dbc:	b6 01       	movw	r22, r12
    3dbe:	a2 01       	movw	r20, r4
    3dc0:	91 01       	movw	r18, r2
    3dc2:	0c d4       	rcall	.+2072   	; 0x45dc <__divmodsi4>
    3dc4:	60 5d       	subi	r22, 0xD0	; 208
    3dc6:	f4 01       	movw	r30, r8
    3dc8:	60 83       	st	Z, r22
			num/=10;
    3dca:	c2 2e       	mov	r12, r18
    3dcc:	d3 2e       	mov	r13, r19
    3dce:	e4 2e       	mov	r14, r20
    3dd0:	f5 2e       	mov	r15, r21
			i--;
    3dd2:	7a 94       	dec	r7
	{
		char str[32];				// definisce una stringa sulla quale convertire il numero da trasmettere (max 10 cifre)
		char i;						// contatore ciclo
		for(i=0;i<32;i++) str[i]=0; // cancella la stringa
		i=31;
		while (num)
    3dd4:	c1 14       	cp	r12, r1
    3dd6:	d1 04       	cpc	r13, r1
    3dd8:	e1 04       	cpc	r14, r1
    3dda:	f1 04       	cpc	r15, r1
    3ddc:	39 f7       	brne	.-50     	; 0x3dac <Serial_Send_Int+0x90>
			str[i]=num%10+'0';		// converte il numero da trasmettere in una stringa (dalla cifra meno significativa)
			num/=10;
			i--;
		}
		for (i=0;i<32;i++)			// invia la stringa un carattere alla volta
		if (str[i]) Serial_Tx(str[i]);
    3dde:	f8 01       	movw	r30, r16
    3de0:	81 91       	ld	r24, Z+
    3de2:	8f 01       	movw	r16, r30
    3de4:	81 11       	cpse	r24, r1
    3de6:	71 df       	rcall	.-286    	; 0x3cca <Serial_Tx>
		{
			str[i]=num%10+'0';		// converte il numero da trasmettere in una stringa (dalla cifra meno significativa)
			num/=10;
			i--;
		}
		for (i=0;i<32;i++)			// invia la stringa un carattere alla volta
    3de8:	0a 15       	cp	r16, r10
    3dea:	1b 05       	cpc	r17, r11
    3dec:	c1 f7       	brne	.-16     	; 0x3dde <Serial_Send_Int+0xc2>
    3dee:	06 c0       	rjmp	.+12     	; 0x3dfc <Serial_Send_Int+0xe0>
	if(num<0)
	{
		Serial_Send_String("-");
		num=-num;
	}
	if(num==0){Serial_Tx('0');}
    3df0:	67 2b       	or	r22, r23
    3df2:	68 2b       	or	r22, r24
    3df4:	69 2b       	or	r22, r25
    3df6:	09 f0       	breq	.+2      	; 0x3dfa <Serial_Send_Int+0xde>
    3df8:	c2 cf       	rjmp	.-124    	; 0x3d7e <Serial_Send_Int+0x62>
    3dfa:	be cf       	rjmp	.-132    	; 0x3d78 <Serial_Send_Int+0x5c>
			i--;
		}
		for (i=0;i<32;i++)			// invia la stringa un carattere alla volta
		if (str[i]) Serial_Tx(str[i]);
	}
}
    3dfc:	a0 96       	adiw	r28, 0x20	; 32
    3dfe:	0f b6       	in	r0, 0x3f	; 63
    3e00:	f8 94       	cli
    3e02:	de bf       	out	0x3e, r29	; 62
    3e04:	0f be       	out	0x3f, r0	; 63
    3e06:	cd bf       	out	0x3d, r28	; 61
    3e08:	df 91       	pop	r29
    3e0a:	cf 91       	pop	r28
    3e0c:	1f 91       	pop	r17
    3e0e:	0f 91       	pop	r16
    3e10:	ff 90       	pop	r15
    3e12:	ef 90       	pop	r14
    3e14:	df 90       	pop	r13
    3e16:	cf 90       	pop	r12
    3e18:	bf 90       	pop	r11
    3e1a:	af 90       	pop	r10
    3e1c:	9f 90       	pop	r9
    3e1e:	8f 90       	pop	r8
    3e20:	7f 90       	pop	r7
    3e22:	5f 90       	pop	r5
    3e24:	4f 90       	pop	r4
    3e26:	3f 90       	pop	r3
    3e28:	2f 90       	pop	r2
    3e2a:	08 95       	ret

00003e2c <SerialN>:
		Serial_Tx(string1[i]);
	}
}
void SerialN()
{
	Serial_Tx(13);
    3e2c:	8d e0       	ldi	r24, 0x0D	; 13
    3e2e:	4d df       	rcall	.-358    	; 0x3cca <Serial_Tx>
	Serial_Tx(10);
    3e30:	8a e0       	ldi	r24, 0x0A	; 10
    3e32:	4b cf       	rjmp	.-362    	; 0x3cca <Serial_Tx>
    3e34:	08 95       	ret

00003e36 <Serial_Send_Float>:
}
void Serial_Send_Float(float data)
{
    3e36:	8f 92       	push	r8
    3e38:	9f 92       	push	r9
    3e3a:	af 92       	push	r10
    3e3c:	bf 92       	push	r11
    3e3e:	cf 92       	push	r12
    3e40:	df 92       	push	r13
    3e42:	ef 92       	push	r14
    3e44:	ff 92       	push	r15
    3e46:	4b 01       	movw	r8, r22
    3e48:	5c 01       	movw	r10, r24
	if(data<0)
    3e4a:	20 e0       	ldi	r18, 0x00	; 0
    3e4c:	30 e0       	ldi	r19, 0x00	; 0
    3e4e:	a9 01       	movw	r20, r18
    3e50:	e8 d1       	rcall	.+976    	; 0x4222 <__cmpsf2>
    3e52:	88 23       	and	r24, r24
    3e54:	3c f4       	brge	.+14     	; 0x3e64 <Serial_Send_Float+0x2e>
	{
		Serial_Send_String("-");
    3e56:	81 e9       	ldi	r24, 0x91	; 145
    3e58:	92 e0       	ldi	r25, 0x02	; 2
    3e5a:	3f df       	rcall	.-386    	; 0x3cda <Serial_Send_String>
		data=-data;
    3e5c:	b7 fa       	bst	r11, 7
    3e5e:	b0 94       	com	r11
    3e60:	b7 f8       	bld	r11, 7
    3e62:	b0 94       	com	r11
	}
	int size=3;
	int var=data;
    3e64:	c5 01       	movw	r24, r10
    3e66:	b4 01       	movw	r22, r8
    3e68:	48 d2       	rcall	.+1168   	; 0x42fa <__fixsfsi>
    3e6a:	6b 01       	movw	r12, r22
    3e6c:	7c 01       	movw	r14, r24
	float data1=data*pow(10,size);
    3e6e:	20 e0       	ldi	r18, 0x00	; 0
    3e70:	30 e0       	ldi	r19, 0x00	; 0
    3e72:	4a e7       	ldi	r20, 0x7A	; 122
    3e74:	54 e4       	ldi	r21, 0x44	; 68
    3e76:	c5 01       	movw	r24, r10
    3e78:	b4 01       	movw	r22, r8
    3e7a:	26 d3       	rcall	.+1612   	; 0x44c8 <__mulsf3>
    3e7c:	4b 01       	movw	r8, r22
    3e7e:	5c 01       	movw	r10, r24
	Serial_Send_Int(var);
    3e80:	0d 2c       	mov	r0, r13
    3e82:	00 0c       	add	r0, r0
    3e84:	ee 08       	sbc	r14, r14
    3e86:	ff 08       	sbc	r15, r15
    3e88:	c7 01       	movw	r24, r14
    3e8a:	b6 01       	movw	r22, r12
	Serial_Send_String(".");
    3e8c:	47 df       	rcall	.-370    	; 0x3d1c <Serial_Send_Int>
    3e8e:	83 e9       	ldi	r24, 0x93	; 147
    3e90:	92 e0       	ldi	r25, 0x02	; 2
	var=var*pow(10,size);
    3e92:	23 df       	rcall	.-442    	; 0x3cda <Serial_Send_String>
    3e94:	c7 01       	movw	r24, r14
    3e96:	b6 01       	movw	r22, r12
    3e98:	63 d2       	rcall	.+1222   	; 0x4360 <__floatsisf>
    3e9a:	20 e0       	ldi	r18, 0x00	; 0
    3e9c:	30 e0       	ldi	r19, 0x00	; 0
    3e9e:	4a e7       	ldi	r20, 0x7A	; 122
	data1=data1-var;
    3ea0:	54 e4       	ldi	r21, 0x44	; 68
    3ea2:	12 d3       	rcall	.+1572   	; 0x44c8 <__mulsf3>
    3ea4:	2a d2       	rcall	.+1108   	; 0x42fa <__fixsfsi>
    3ea6:	07 2e       	mov	r0, r23
    3ea8:	00 0c       	add	r0, r0
    3eaa:	88 0b       	sbc	r24, r24
    3eac:	99 0b       	sbc	r25, r25
    3eae:	58 d2       	rcall	.+1200   	; 0x4360 <__floatsisf>
    3eb0:	9b 01       	movw	r18, r22
    3eb2:	ac 01       	movw	r20, r24
    3eb4:	c5 01       	movw	r24, r10
	var=data1;
	Serial_Send_Int(var);
    3eb6:	b4 01       	movw	r22, r8
    3eb8:	4f d1       	rcall	.+670    	; 0x4158 <__subsf3>
    3eba:	1f d2       	rcall	.+1086   	; 0x42fa <__fixsfsi>
    3ebc:	07 2e       	mov	r0, r23
    3ebe:	00 0c       	add	r0, r0
    3ec0:	88 0b       	sbc	r24, r24
    3ec2:	99 0b       	sbc	r25, r25
    3ec4:	2b df       	rcall	.-426    	; 0x3d1c <Serial_Send_Int>
}
    3ec6:	ff 90       	pop	r15
    3ec8:	ef 90       	pop	r14
    3eca:	df 90       	pop	r13
    3ecc:	cf 90       	pop	r12
    3ece:	bf 90       	pop	r11
    3ed0:	af 90       	pop	r10
    3ed2:	9f 90       	pop	r9
    3ed4:	8f 90       	pop	r8
    3ed6:	08 95       	ret

00003ed8 <TWI_status>:
	while (!(TWCR & (1<<TWINT)));
	*(var+i)=TWDR;
	}
	}
	TWI_stop();
}
    3ed8:	82 30       	cpi	r24, 0x02	; 2
    3eda:	91 05       	cpc	r25, r1
    3edc:	3c f4       	brge	.+14     	; 0x3eec <TWI_status+0x14>
    3ede:	90 93 e5 04 	sts	0x04E5, r25	; 0x8004e5 <TWI_stat+0x1>
    3ee2:	80 93 e4 04 	sts	0x04E4, r24	; 0x8004e4 <TWI_stat>
    3ee6:	80 e0       	ldi	r24, 0x00	; 0
    3ee8:	90 e0       	ldi	r25, 0x00	; 0
    3eea:	08 95       	ret
    3eec:	80 91 e4 04 	lds	r24, 0x04E4	; 0x8004e4 <TWI_stat>
    3ef0:	90 91 e5 04 	lds	r25, 0x04E5	; 0x8004e5 <TWI_stat+0x1>
    3ef4:	08 95       	ret

00003ef6 <TWI_init>:
    3ef6:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    3efa:	88 e4       	ldi	r24, 0x48	; 72
    3efc:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
    3f00:	08 95       	ret

00003f02 <TWI_start>:
    3f02:	ec eb       	ldi	r30, 0xBC	; 188
    3f04:	f0 e0       	ldi	r31, 0x00	; 0
    3f06:	80 81       	ld	r24, Z
    3f08:	84 6a       	ori	r24, 0xA4	; 164
    3f0a:	80 83       	st	Z, r24
    3f0c:	80 81       	ld	r24, Z
    3f0e:	88 23       	and	r24, r24
    3f10:	ec f7       	brge	.-6      	; 0x3f0c <TWI_start+0xa>
    3f12:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    3f16:	88 30       	cpi	r24, 0x08	; 8
    3f18:	41 f0       	breq	.+16     	; 0x3f2a <TWI_start+0x28>
    3f1a:	20 91 b9 00 	lds	r18, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    3f1e:	81 e0       	ldi	r24, 0x01	; 1
    3f20:	90 e0       	ldi	r25, 0x00	; 0
    3f22:	20 31       	cpi	r18, 0x10	; 16
    3f24:	21 f4       	brne	.+8      	; 0x3f2e <TWI_start+0x2c>
    3f26:	80 e0       	ldi	r24, 0x00	; 0
    3f28:	08 95       	ret
    3f2a:	80 e0       	ldi	r24, 0x00	; 0
    3f2c:	90 e0       	ldi	r25, 0x00	; 0
    3f2e:	08 95       	ret

00003f30 <TWI_write>:
    3f30:	80 93 bb 00 	sts	0x00BB, r24	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    3f34:	84 e8       	ldi	r24, 0x84	; 132
    3f36:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    3f3a:	ec eb       	ldi	r30, 0xBC	; 188
    3f3c:	f0 e0       	ldi	r31, 0x00	; 0
    3f3e:	80 81       	ld	r24, Z
    3f40:	88 23       	and	r24, r24
    3f42:	ec f7       	brge	.-6      	; 0x3f3e <TWI_write+0xe>
    3f44:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    3f48:	88 31       	cpi	r24, 0x18	; 24
    3f4a:	61 f0       	breq	.+24     	; 0x3f64 <TWI_write+0x34>
    3f4c:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    3f50:	88 32       	cpi	r24, 0x28	; 40
    3f52:	59 f0       	breq	.+22     	; 0x3f6a <TWI_write+0x3a>
    3f54:	20 91 b9 00 	lds	r18, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    3f58:	81 e0       	ldi	r24, 0x01	; 1
    3f5a:	90 e0       	ldi	r25, 0x00	; 0
    3f5c:	20 34       	cpi	r18, 0x40	; 64
    3f5e:	39 f4       	brne	.+14     	; 0x3f6e <TWI_write+0x3e>
    3f60:	80 e0       	ldi	r24, 0x00	; 0
    3f62:	08 95       	ret
    3f64:	80 e0       	ldi	r24, 0x00	; 0
    3f66:	90 e0       	ldi	r25, 0x00	; 0
    3f68:	08 95       	ret
    3f6a:	80 e0       	ldi	r24, 0x00	; 0
    3f6c:	90 e0       	ldi	r25, 0x00	; 0
    3f6e:	08 95       	ret

00003f70 <TWI_read>:
    3f70:	cf 92       	push	r12
    3f72:	df 92       	push	r13
    3f74:	ef 92       	push	r14
    3f76:	ff 92       	push	r15
    3f78:	0f 93       	push	r16
    3f7a:	1f 93       	push	r17
    3f7c:	cf 93       	push	r28
    3f7e:	df 93       	push	r29
    3f80:	8c 01       	movw	r16, r24
    3f82:	7b 01       	movw	r14, r22
    3f84:	be df       	rcall	.-132    	; 0x3f02 <TWI_start>
    3f86:	ec 01       	movw	r28, r24
    3f88:	89 2b       	or	r24, r25
    3f8a:	31 f0       	breq	.+12     	; 0x3f98 <TWI_read+0x28>
    3f8c:	84 e9       	ldi	r24, 0x94	; 148
    3f8e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    3f92:	c0 e0       	ldi	r28, 0x00	; 0
    3f94:	d0 e0       	ldi	r29, 0x00	; 0
    3f96:	2b c0       	rjmp	.+86     	; 0x3fee <TWI_read+0x7e>
    3f98:	c8 01       	movw	r24, r16
    3f9a:	ca df       	rcall	.-108    	; 0x3f30 <TWI_write>
    3f9c:	6c 01       	movw	r12, r24
    3f9e:	89 2b       	or	r24, r25
    3fa0:	21 f0       	breq	.+8      	; 0x3faa <TWI_read+0x3a>
    3fa2:	84 e9       	ldi	r24, 0x94	; 148
    3fa4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    3fa8:	22 c0       	rjmp	.+68     	; 0x3fee <TWI_read+0x7e>
    3faa:	c7 01       	movw	r24, r14
    3fac:	c1 df       	rcall	.-126    	; 0x3f30 <TWI_write>
    3fae:	ec 01       	movw	r28, r24
    3fb0:	89 2b       	or	r24, r25
    3fb2:	29 f0       	breq	.+10     	; 0x3fbe <TWI_read+0x4e>
    3fb4:	84 e9       	ldi	r24, 0x94	; 148
    3fb6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    3fba:	e6 01       	movw	r28, r12
    3fbc:	18 c0       	rjmp	.+48     	; 0x3fee <TWI_read+0x7e>
    3fbe:	a1 df       	rcall	.-190    	; 0x3f02 <TWI_start>
    3fc0:	c8 01       	movw	r24, r16
    3fc2:	81 60       	ori	r24, 0x01	; 1
    3fc4:	b5 df       	rcall	.-150    	; 0x3f30 <TWI_write>
    3fc6:	89 2b       	or	r24, r25
    3fc8:	21 f0       	breq	.+8      	; 0x3fd2 <TWI_read+0x62>
    3fca:	84 e9       	ldi	r24, 0x94	; 148
    3fcc:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    3fd0:	0e c0       	rjmp	.+28     	; 0x3fee <TWI_read+0x7e>
    3fd2:	84 e8       	ldi	r24, 0x84	; 132
    3fd4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    3fd8:	ec eb       	ldi	r30, 0xBC	; 188
    3fda:	f0 e0       	ldi	r31, 0x00	; 0
    3fdc:	80 81       	ld	r24, Z
    3fde:	88 23       	and	r24, r24
    3fe0:	ec f7       	brge	.-6      	; 0x3fdc <TWI_read+0x6c>
    3fe2:	84 e9       	ldi	r24, 0x94	; 148
    3fe4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    3fe8:	c0 91 bb 00 	lds	r28, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    3fec:	d0 e0       	ldi	r29, 0x00	; 0
    3fee:	ce 01       	movw	r24, r28
    3ff0:	df 91       	pop	r29
    3ff2:	cf 91       	pop	r28
    3ff4:	1f 91       	pop	r17
    3ff6:	0f 91       	pop	r16
    3ff8:	ff 90       	pop	r15
    3ffa:	ef 90       	pop	r14
    3ffc:	df 90       	pop	r13
    3ffe:	cf 90       	pop	r12
    4000:	08 95       	ret

00004002 <TWI_read2>:
    4002:	cf 92       	push	r12
    4004:	df 92       	push	r13
    4006:	ef 92       	push	r14
    4008:	ff 92       	push	r15
    400a:	0f 93       	push	r16
    400c:	1f 93       	push	r17
    400e:	cf 93       	push	r28
    4010:	df 93       	push	r29
    4012:	8c 01       	movw	r16, r24
    4014:	7b 01       	movw	r14, r22
    4016:	75 df       	rcall	.-278    	; 0x3f02 <TWI_start>
    4018:	ec 01       	movw	r28, r24
    401a:	89 2b       	or	r24, r25
    401c:	31 f0       	breq	.+12     	; 0x402a <TWI_read2+0x28>
    401e:	84 e9       	ldi	r24, 0x94	; 148
    4020:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    4024:	c0 e0       	ldi	r28, 0x00	; 0
    4026:	d0 e0       	ldi	r29, 0x00	; 0
    4028:	36 c0       	rjmp	.+108    	; 0x4096 <TWI_read2+0x94>
    402a:	c8 01       	movw	r24, r16
    402c:	81 df       	rcall	.-254    	; 0x3f30 <TWI_write>
    402e:	6c 01       	movw	r12, r24
    4030:	89 2b       	or	r24, r25
    4032:	21 f0       	breq	.+8      	; 0x403c <TWI_read2+0x3a>
    4034:	84 e9       	ldi	r24, 0x94	; 148
    4036:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    403a:	2d c0       	rjmp	.+90     	; 0x4096 <TWI_read2+0x94>
    403c:	c7 01       	movw	r24, r14
    403e:	78 df       	rcall	.-272    	; 0x3f30 <TWI_write>
    4040:	ec 01       	movw	r28, r24
    4042:	89 2b       	or	r24, r25
    4044:	29 f0       	breq	.+10     	; 0x4050 <TWI_read2+0x4e>
    4046:	84 e9       	ldi	r24, 0x94	; 148
    4048:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    404c:	e6 01       	movw	r28, r12
    404e:	23 c0       	rjmp	.+70     	; 0x4096 <TWI_read2+0x94>
    4050:	58 df       	rcall	.-336    	; 0x3f02 <TWI_start>
    4052:	c8 01       	movw	r24, r16
    4054:	81 60       	ori	r24, 0x01	; 1
    4056:	6c df       	rcall	.-296    	; 0x3f30 <TWI_write>
    4058:	89 2b       	or	r24, r25
    405a:	21 f0       	breq	.+8      	; 0x4064 <TWI_read2+0x62>
    405c:	84 e9       	ldi	r24, 0x94	; 148
    405e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    4062:	19 c0       	rjmp	.+50     	; 0x4096 <TWI_read2+0x94>
    4064:	84 ec       	ldi	r24, 0xC4	; 196
    4066:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    406a:	ec eb       	ldi	r30, 0xBC	; 188
    406c:	f0 e0       	ldi	r31, 0x00	; 0
    406e:	80 81       	ld	r24, Z
    4070:	88 23       	and	r24, r24
    4072:	ec f7       	brge	.-6      	; 0x406e <TWI_read2+0x6c>
    4074:	c0 91 bb 00 	lds	r28, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    4078:	84 e8       	ldi	r24, 0x84	; 132
    407a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    407e:	ec eb       	ldi	r30, 0xBC	; 188
    4080:	f0 e0       	ldi	r31, 0x00	; 0
    4082:	80 81       	ld	r24, Z
    4084:	88 23       	and	r24, r24
    4086:	ec f7       	brge	.-6      	; 0x4082 <TWI_read2+0x80>
    4088:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
    408c:	94 e9       	ldi	r25, 0x94	; 148
    408e:	90 93 bc 00 	sts	0x00BC, r25	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    4092:	d0 e0       	ldi	r29, 0x00	; 0
    4094:	d8 2b       	or	r29, r24
    4096:	ce 01       	movw	r24, r28
    4098:	df 91       	pop	r29
    409a:	cf 91       	pop	r28
    409c:	1f 91       	pop	r17
    409e:	0f 91       	pop	r16
    40a0:	ff 90       	pop	r15
    40a2:	ef 90       	pop	r14
    40a4:	df 90       	pop	r13
    40a6:	cf 90       	pop	r12
    40a8:	08 95       	ret

000040aa <TWI_send>:

short TWI_send(short slave, short address, short data)  //Scrivo 1 BYTE sullo SLAVE all'ADDRESS indicato
{
    40aa:	cf 92       	push	r12
    40ac:	df 92       	push	r13
    40ae:	ef 92       	push	r14
    40b0:	ff 92       	push	r15
    40b2:	0f 93       	push	r16
    40b4:	1f 93       	push	r17
    40b6:	cf 93       	push	r28
    40b8:	df 93       	push	r29
    40ba:	8c 01       	movw	r16, r24
    40bc:	7b 01       	movw	r14, r22
    40be:	6a 01       	movw	r12, r20
	if(TWI_start()) {TWI_stop(); return(0);}  //START
    40c0:	20 df       	rcall	.-448    	; 0x3f02 <TWI_start>
    40c2:	ec 01       	movw	r28, r24
    40c4:	89 2b       	or	r24, r25
    40c6:	31 f0       	breq	.+12     	; 0x40d4 <TWI_send+0x2a>
	TWBR = ((F_CPU / TWI_FREQ) - 16) / 2;  //12=400KHz 72=100KHz
}

void TWI_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);  //Invio il bit di STOP
    40c8:	84 e9       	ldi	r24, 0x94	; 148
    40ca:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	TWI_stop();
}

short TWI_send(short slave, short address, short data)  //Scrivo 1 BYTE sullo SLAVE all'ADDRESS indicato
{
	if(TWI_start()) {TWI_stop(); return(0);}  //START
    40ce:	c0 e0       	ldi	r28, 0x00	; 0
    40d0:	d0 e0       	ldi	r29, 0x00	; 0
    40d2:	38 c0       	rjmp	.+112    	; 0x4144 <TWI_send+0x9a>
	if(TWI_write(slave)) {TWI_stop(); _delay_ms(5); return(0);}  //WRITE MODE
    40d4:	c8 01       	movw	r24, r16
    40d6:	2c df       	rcall	.-424    	; 0x3f30 <TWI_write>
    40d8:	8c 01       	movw	r16, r24
    40da:	89 2b       	or	r24, r25
    40dc:	51 f0       	breq	.+20     	; 0x40f2 <TWI_send+0x48>
	TWBR = ((F_CPU / TWI_FREQ) - 16) / 2;  //12=400KHz 72=100KHz
}

void TWI_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);  //Invio il bit di STOP
    40de:	84 e9       	ldi	r24, 0x94	; 148
    40e0:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    40e4:	8f e1       	ldi	r24, 0x1F	; 31
    40e6:	9e e4       	ldi	r25, 0x4E	; 78
    40e8:	01 97       	sbiw	r24, 0x01	; 1
    40ea:	f1 f7       	brne	.-4      	; 0x40e8 <TWI_send+0x3e>
    40ec:	00 c0       	rjmp	.+0      	; 0x40ee <TWI_send+0x44>
    40ee:	00 00       	nop

short TWI_send(short slave, short address, short data)  //Scrivo 1 BYTE sullo SLAVE all'ADDRESS indicato
{
	if(TWI_start()) {TWI_stop(); return(0);}  //START
	if(TWI_write(slave)) {TWI_stop(); _delay_ms(5); return(0);}  //WRITE MODE
	if(TWI_write(address)) {TWI_stop(); _delay_ms(5); return(0);}  //ADDRESS
    40f0:	29 c0       	rjmp	.+82     	; 0x4144 <TWI_send+0x9a>
    40f2:	c7 01       	movw	r24, r14
    40f4:	1d df       	rcall	.-454    	; 0x3f30 <TWI_write>
    40f6:	ec 01       	movw	r28, r24
    40f8:	89 2b       	or	r24, r25
    40fa:	59 f0       	breq	.+22     	; 0x4112 <TWI_send+0x68>
	TWBR = ((F_CPU / TWI_FREQ) - 16) / 2;  //12=400KHz 72=100KHz
}

void TWI_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);  //Invio il bit di STOP
    40fc:	84 e9       	ldi	r24, 0x94	; 148
    40fe:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    4102:	8f e1       	ldi	r24, 0x1F	; 31
    4104:	9e e4       	ldi	r25, 0x4E	; 78
    4106:	01 97       	sbiw	r24, 0x01	; 1
    4108:	f1 f7       	brne	.-4      	; 0x4106 <TWI_send+0x5c>
    410a:	00 c0       	rjmp	.+0      	; 0x410c <TWI_send+0x62>
    410c:	00 00       	nop

short TWI_send(short slave, short address, short data)  //Scrivo 1 BYTE sullo SLAVE all'ADDRESS indicato
{
	if(TWI_start()) {TWI_stop(); return(0);}  //START
	if(TWI_write(slave)) {TWI_stop(); _delay_ms(5); return(0);}  //WRITE MODE
	if(TWI_write(address)) {TWI_stop(); _delay_ms(5); return(0);}  //ADDRESS
    410e:	e8 01       	movw	r28, r16
	if(TWI_write(data)) {TWI_stop(); _delay_ms(5); return(0);}  //Invio il BYTE da scrivere
    4110:	19 c0       	rjmp	.+50     	; 0x4144 <TWI_send+0x9a>
    4112:	c6 01       	movw	r24, r12
    4114:	0d df       	rcall	.-486    	; 0x3f30 <TWI_write>
    4116:	89 2b       	or	r24, r25
    4118:	51 f0       	breq	.+20     	; 0x412e <TWI_send+0x84>
	TWBR = ((F_CPU / TWI_FREQ) - 16) / 2;  //12=400KHz 72=100KHz
}

void TWI_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);  //Invio il bit di STOP
    411a:	84 e9       	ldi	r24, 0x94	; 148
    411c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    4120:	8f e1       	ldi	r24, 0x1F	; 31
    4122:	9e e4       	ldi	r25, 0x4E	; 78
    4124:	01 97       	sbiw	r24, 0x01	; 1
    4126:	f1 f7       	brne	.-4      	; 0x4124 <TWI_send+0x7a>
    4128:	00 c0       	rjmp	.+0      	; 0x412a <TWI_send+0x80>
    412a:	00 00       	nop
short TWI_send(short slave, short address, short data)  //Scrivo 1 BYTE sullo SLAVE all'ADDRESS indicato
{
	if(TWI_start()) {TWI_stop(); return(0);}  //START
	if(TWI_write(slave)) {TWI_stop(); _delay_ms(5); return(0);}  //WRITE MODE
	if(TWI_write(address)) {TWI_stop(); _delay_ms(5); return(0);}  //ADDRESS
	if(TWI_write(data)) {TWI_stop(); _delay_ms(5); return(0);}  //Invio il BYTE da scrivere
    412c:	0b c0       	rjmp	.+22     	; 0x4144 <TWI_send+0x9a>
	TWBR = ((F_CPU / TWI_FREQ) - 16) / 2;  //12=400KHz 72=100KHz
}

void TWI_stop()
{
	TWCR = (1<<TWINT)|(1<<TWEN)|(1<<TWSTO);  //Invio il bit di STOP
    412e:	84 e9       	ldi	r24, 0x94	; 148
    4130:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
    4134:	8f e1       	ldi	r24, 0x1F	; 31
    4136:	9e e4       	ldi	r25, 0x4E	; 78
    4138:	01 97       	sbiw	r24, 0x01	; 1
    413a:	f1 f7       	brne	.-4      	; 0x4138 <TWI_send+0x8e>
    413c:	00 c0       	rjmp	.+0      	; 0x413e <TWI_send+0x94>
    413e:	00 00       	nop
	if(TWI_write(slave)) {TWI_stop(); _delay_ms(5); return(0);}  //WRITE MODE
	if(TWI_write(address)) {TWI_stop(); _delay_ms(5); return(0);}  //ADDRESS
	if(TWI_write(data)) {TWI_stop(); _delay_ms(5); return(0);}  //Invio il BYTE da scrivere
	TWI_stop();
	_delay_ms(5);  //delay tra 1 operazione e l'altra
	return(1);
    4140:	c1 e0       	ldi	r28, 0x01	; 1
    4142:	d0 e0       	ldi	r29, 0x00	; 0
}
    4144:	ce 01       	movw	r24, r28
    4146:	df 91       	pop	r29
    4148:	cf 91       	pop	r28
    414a:	1f 91       	pop	r17
    414c:	0f 91       	pop	r16
    414e:	ff 90       	pop	r15
    4150:	ef 90       	pop	r14
    4152:	df 90       	pop	r13
    4154:	cf 90       	pop	r12
    4156:	08 95       	ret

00004158 <__subsf3>:
    4158:	50 58       	subi	r21, 0x80	; 128

0000415a <__addsf3>:
    415a:	bb 27       	eor	r27, r27
    415c:	aa 27       	eor	r26, r26
    415e:	0e d0       	rcall	.+28     	; 0x417c <__addsf3x>
    4160:	75 c1       	rjmp	.+746    	; 0x444c <__fp_round>
    4162:	66 d1       	rcall	.+716    	; 0x4430 <__fp_pscA>
    4164:	30 f0       	brcs	.+12     	; 0x4172 <__addsf3+0x18>
    4166:	6b d1       	rcall	.+726    	; 0x443e <__fp_pscB>
    4168:	20 f0       	brcs	.+8      	; 0x4172 <__addsf3+0x18>
    416a:	31 f4       	brne	.+12     	; 0x4178 <__addsf3+0x1e>
    416c:	9f 3f       	cpi	r25, 0xFF	; 255
    416e:	11 f4       	brne	.+4      	; 0x4174 <__addsf3+0x1a>
    4170:	1e f4       	brtc	.+6      	; 0x4178 <__addsf3+0x1e>
    4172:	5b c1       	rjmp	.+694    	; 0x442a <__fp_nan>
    4174:	0e f4       	brtc	.+2      	; 0x4178 <__addsf3+0x1e>
    4176:	e0 95       	com	r30
    4178:	e7 fb       	bst	r30, 7
    417a:	51 c1       	rjmp	.+674    	; 0x441e <__fp_inf>

0000417c <__addsf3x>:
    417c:	e9 2f       	mov	r30, r25
    417e:	77 d1       	rcall	.+750    	; 0x446e <__fp_split3>
    4180:	80 f3       	brcs	.-32     	; 0x4162 <__addsf3+0x8>
    4182:	ba 17       	cp	r27, r26
    4184:	62 07       	cpc	r22, r18
    4186:	73 07       	cpc	r23, r19
    4188:	84 07       	cpc	r24, r20
    418a:	95 07       	cpc	r25, r21
    418c:	18 f0       	brcs	.+6      	; 0x4194 <__addsf3x+0x18>
    418e:	71 f4       	brne	.+28     	; 0x41ac <__addsf3x+0x30>
    4190:	9e f5       	brtc	.+102    	; 0x41f8 <__addsf3x+0x7c>
    4192:	8f c1       	rjmp	.+798    	; 0x44b2 <__fp_zero>
    4194:	0e f4       	brtc	.+2      	; 0x4198 <__addsf3x+0x1c>
    4196:	e0 95       	com	r30
    4198:	0b 2e       	mov	r0, r27
    419a:	ba 2f       	mov	r27, r26
    419c:	a0 2d       	mov	r26, r0
    419e:	0b 01       	movw	r0, r22
    41a0:	b9 01       	movw	r22, r18
    41a2:	90 01       	movw	r18, r0
    41a4:	0c 01       	movw	r0, r24
    41a6:	ca 01       	movw	r24, r20
    41a8:	a0 01       	movw	r20, r0
    41aa:	11 24       	eor	r1, r1
    41ac:	ff 27       	eor	r31, r31
    41ae:	59 1b       	sub	r21, r25
    41b0:	99 f0       	breq	.+38     	; 0x41d8 <__addsf3x+0x5c>
    41b2:	59 3f       	cpi	r21, 0xF9	; 249
    41b4:	50 f4       	brcc	.+20     	; 0x41ca <__addsf3x+0x4e>
    41b6:	50 3e       	cpi	r21, 0xE0	; 224
    41b8:	68 f1       	brcs	.+90     	; 0x4214 <__addsf3x+0x98>
    41ba:	1a 16       	cp	r1, r26
    41bc:	f0 40       	sbci	r31, 0x00	; 0
    41be:	a2 2f       	mov	r26, r18
    41c0:	23 2f       	mov	r18, r19
    41c2:	34 2f       	mov	r19, r20
    41c4:	44 27       	eor	r20, r20
    41c6:	58 5f       	subi	r21, 0xF8	; 248
    41c8:	f3 cf       	rjmp	.-26     	; 0x41b0 <__addsf3x+0x34>
    41ca:	46 95       	lsr	r20
    41cc:	37 95       	ror	r19
    41ce:	27 95       	ror	r18
    41d0:	a7 95       	ror	r26
    41d2:	f0 40       	sbci	r31, 0x00	; 0
    41d4:	53 95       	inc	r21
    41d6:	c9 f7       	brne	.-14     	; 0x41ca <__addsf3x+0x4e>
    41d8:	7e f4       	brtc	.+30     	; 0x41f8 <__addsf3x+0x7c>
    41da:	1f 16       	cp	r1, r31
    41dc:	ba 0b       	sbc	r27, r26
    41de:	62 0b       	sbc	r22, r18
    41e0:	73 0b       	sbc	r23, r19
    41e2:	84 0b       	sbc	r24, r20
    41e4:	ba f0       	brmi	.+46     	; 0x4214 <__addsf3x+0x98>
    41e6:	91 50       	subi	r25, 0x01	; 1
    41e8:	a1 f0       	breq	.+40     	; 0x4212 <__addsf3x+0x96>
    41ea:	ff 0f       	add	r31, r31
    41ec:	bb 1f       	adc	r27, r27
    41ee:	66 1f       	adc	r22, r22
    41f0:	77 1f       	adc	r23, r23
    41f2:	88 1f       	adc	r24, r24
    41f4:	c2 f7       	brpl	.-16     	; 0x41e6 <__addsf3x+0x6a>
    41f6:	0e c0       	rjmp	.+28     	; 0x4214 <__addsf3x+0x98>
    41f8:	ba 0f       	add	r27, r26
    41fa:	62 1f       	adc	r22, r18
    41fc:	73 1f       	adc	r23, r19
    41fe:	84 1f       	adc	r24, r20
    4200:	48 f4       	brcc	.+18     	; 0x4214 <__addsf3x+0x98>
    4202:	87 95       	ror	r24
    4204:	77 95       	ror	r23
    4206:	67 95       	ror	r22
    4208:	b7 95       	ror	r27
    420a:	f7 95       	ror	r31
    420c:	9e 3f       	cpi	r25, 0xFE	; 254
    420e:	08 f0       	brcs	.+2      	; 0x4212 <__addsf3x+0x96>
    4210:	b3 cf       	rjmp	.-154    	; 0x4178 <__addsf3+0x1e>
    4212:	93 95       	inc	r25
    4214:	88 0f       	add	r24, r24
    4216:	08 f0       	brcs	.+2      	; 0x421a <__addsf3x+0x9e>
    4218:	99 27       	eor	r25, r25
    421a:	ee 0f       	add	r30, r30
    421c:	97 95       	ror	r25
    421e:	87 95       	ror	r24
    4220:	08 95       	ret

00004222 <__cmpsf2>:
    4222:	d9 d0       	rcall	.+434    	; 0x43d6 <__fp_cmp>
    4224:	08 f4       	brcc	.+2      	; 0x4228 <__cmpsf2+0x6>
    4226:	81 e0       	ldi	r24, 0x01	; 1
    4228:	08 95       	ret

0000422a <__divsf3>:
    422a:	0c d0       	rcall	.+24     	; 0x4244 <__divsf3x>
    422c:	0f c1       	rjmp	.+542    	; 0x444c <__fp_round>
    422e:	07 d1       	rcall	.+526    	; 0x443e <__fp_pscB>
    4230:	40 f0       	brcs	.+16     	; 0x4242 <__divsf3+0x18>
    4232:	fe d0       	rcall	.+508    	; 0x4430 <__fp_pscA>
    4234:	30 f0       	brcs	.+12     	; 0x4242 <__divsf3+0x18>
    4236:	21 f4       	brne	.+8      	; 0x4240 <__divsf3+0x16>
    4238:	5f 3f       	cpi	r21, 0xFF	; 255
    423a:	19 f0       	breq	.+6      	; 0x4242 <__divsf3+0x18>
    423c:	f0 c0       	rjmp	.+480    	; 0x441e <__fp_inf>
    423e:	51 11       	cpse	r21, r1
    4240:	39 c1       	rjmp	.+626    	; 0x44b4 <__fp_szero>
    4242:	f3 c0       	rjmp	.+486    	; 0x442a <__fp_nan>

00004244 <__divsf3x>:
    4244:	14 d1       	rcall	.+552    	; 0x446e <__fp_split3>
    4246:	98 f3       	brcs	.-26     	; 0x422e <__divsf3+0x4>

00004248 <__divsf3_pse>:
    4248:	99 23       	and	r25, r25
    424a:	c9 f3       	breq	.-14     	; 0x423e <__divsf3+0x14>
    424c:	55 23       	and	r21, r21
    424e:	b1 f3       	breq	.-20     	; 0x423c <__divsf3+0x12>
    4250:	95 1b       	sub	r25, r21
    4252:	55 0b       	sbc	r21, r21
    4254:	bb 27       	eor	r27, r27
    4256:	aa 27       	eor	r26, r26
    4258:	62 17       	cp	r22, r18
    425a:	73 07       	cpc	r23, r19
    425c:	84 07       	cpc	r24, r20
    425e:	38 f0       	brcs	.+14     	; 0x426e <__divsf3_pse+0x26>
    4260:	9f 5f       	subi	r25, 0xFF	; 255
    4262:	5f 4f       	sbci	r21, 0xFF	; 255
    4264:	22 0f       	add	r18, r18
    4266:	33 1f       	adc	r19, r19
    4268:	44 1f       	adc	r20, r20
    426a:	aa 1f       	adc	r26, r26
    426c:	a9 f3       	breq	.-22     	; 0x4258 <__divsf3_pse+0x10>
    426e:	33 d0       	rcall	.+102    	; 0x42d6 <__divsf3_pse+0x8e>
    4270:	0e 2e       	mov	r0, r30
    4272:	3a f0       	brmi	.+14     	; 0x4282 <__divsf3_pse+0x3a>
    4274:	e0 e8       	ldi	r30, 0x80	; 128
    4276:	30 d0       	rcall	.+96     	; 0x42d8 <__divsf3_pse+0x90>
    4278:	91 50       	subi	r25, 0x01	; 1
    427a:	50 40       	sbci	r21, 0x00	; 0
    427c:	e6 95       	lsr	r30
    427e:	00 1c       	adc	r0, r0
    4280:	ca f7       	brpl	.-14     	; 0x4274 <__divsf3_pse+0x2c>
    4282:	29 d0       	rcall	.+82     	; 0x42d6 <__divsf3_pse+0x8e>
    4284:	fe 2f       	mov	r31, r30
    4286:	27 d0       	rcall	.+78     	; 0x42d6 <__divsf3_pse+0x8e>
    4288:	66 0f       	add	r22, r22
    428a:	77 1f       	adc	r23, r23
    428c:	88 1f       	adc	r24, r24
    428e:	bb 1f       	adc	r27, r27
    4290:	26 17       	cp	r18, r22
    4292:	37 07       	cpc	r19, r23
    4294:	48 07       	cpc	r20, r24
    4296:	ab 07       	cpc	r26, r27
    4298:	b0 e8       	ldi	r27, 0x80	; 128
    429a:	09 f0       	breq	.+2      	; 0x429e <__divsf3_pse+0x56>
    429c:	bb 0b       	sbc	r27, r27
    429e:	80 2d       	mov	r24, r0
    42a0:	bf 01       	movw	r22, r30
    42a2:	ff 27       	eor	r31, r31
    42a4:	93 58       	subi	r25, 0x83	; 131
    42a6:	5f 4f       	sbci	r21, 0xFF	; 255
    42a8:	2a f0       	brmi	.+10     	; 0x42b4 <__divsf3_pse+0x6c>
    42aa:	9e 3f       	cpi	r25, 0xFE	; 254
    42ac:	51 05       	cpc	r21, r1
    42ae:	68 f0       	brcs	.+26     	; 0x42ca <__divsf3_pse+0x82>
    42b0:	b6 c0       	rjmp	.+364    	; 0x441e <__fp_inf>
    42b2:	00 c1       	rjmp	.+512    	; 0x44b4 <__fp_szero>
    42b4:	5f 3f       	cpi	r21, 0xFF	; 255
    42b6:	ec f3       	brlt	.-6      	; 0x42b2 <__divsf3_pse+0x6a>
    42b8:	98 3e       	cpi	r25, 0xE8	; 232
    42ba:	dc f3       	brlt	.-10     	; 0x42b2 <__divsf3_pse+0x6a>
    42bc:	86 95       	lsr	r24
    42be:	77 95       	ror	r23
    42c0:	67 95       	ror	r22
    42c2:	b7 95       	ror	r27
    42c4:	f7 95       	ror	r31
    42c6:	9f 5f       	subi	r25, 0xFF	; 255
    42c8:	c9 f7       	brne	.-14     	; 0x42bc <__divsf3_pse+0x74>
    42ca:	88 0f       	add	r24, r24
    42cc:	91 1d       	adc	r25, r1
    42ce:	96 95       	lsr	r25
    42d0:	87 95       	ror	r24
    42d2:	97 f9       	bld	r25, 7
    42d4:	08 95       	ret
    42d6:	e1 e0       	ldi	r30, 0x01	; 1
    42d8:	66 0f       	add	r22, r22
    42da:	77 1f       	adc	r23, r23
    42dc:	88 1f       	adc	r24, r24
    42de:	bb 1f       	adc	r27, r27
    42e0:	62 17       	cp	r22, r18
    42e2:	73 07       	cpc	r23, r19
    42e4:	84 07       	cpc	r24, r20
    42e6:	ba 07       	cpc	r27, r26
    42e8:	20 f0       	brcs	.+8      	; 0x42f2 <__divsf3_pse+0xaa>
    42ea:	62 1b       	sub	r22, r18
    42ec:	73 0b       	sbc	r23, r19
    42ee:	84 0b       	sbc	r24, r20
    42f0:	ba 0b       	sbc	r27, r26
    42f2:	ee 1f       	adc	r30, r30
    42f4:	88 f7       	brcc	.-30     	; 0x42d8 <__divsf3_pse+0x90>
    42f6:	e0 95       	com	r30
    42f8:	08 95       	ret

000042fa <__fixsfsi>:
    42fa:	04 d0       	rcall	.+8      	; 0x4304 <__fixunssfsi>
    42fc:	68 94       	set
    42fe:	b1 11       	cpse	r27, r1
    4300:	d9 c0       	rjmp	.+434    	; 0x44b4 <__fp_szero>
    4302:	08 95       	ret

00004304 <__fixunssfsi>:
    4304:	bc d0       	rcall	.+376    	; 0x447e <__fp_splitA>
    4306:	88 f0       	brcs	.+34     	; 0x432a <__fixunssfsi+0x26>
    4308:	9f 57       	subi	r25, 0x7F	; 127
    430a:	90 f0       	brcs	.+36     	; 0x4330 <__fixunssfsi+0x2c>
    430c:	b9 2f       	mov	r27, r25
    430e:	99 27       	eor	r25, r25
    4310:	b7 51       	subi	r27, 0x17	; 23
    4312:	a0 f0       	brcs	.+40     	; 0x433c <__fixunssfsi+0x38>
    4314:	d1 f0       	breq	.+52     	; 0x434a <__fixunssfsi+0x46>
    4316:	66 0f       	add	r22, r22
    4318:	77 1f       	adc	r23, r23
    431a:	88 1f       	adc	r24, r24
    431c:	99 1f       	adc	r25, r25
    431e:	1a f0       	brmi	.+6      	; 0x4326 <__fixunssfsi+0x22>
    4320:	ba 95       	dec	r27
    4322:	c9 f7       	brne	.-14     	; 0x4316 <__fixunssfsi+0x12>
    4324:	12 c0       	rjmp	.+36     	; 0x434a <__fixunssfsi+0x46>
    4326:	b1 30       	cpi	r27, 0x01	; 1
    4328:	81 f0       	breq	.+32     	; 0x434a <__fixunssfsi+0x46>
    432a:	c3 d0       	rcall	.+390    	; 0x44b2 <__fp_zero>
    432c:	b1 e0       	ldi	r27, 0x01	; 1
    432e:	08 95       	ret
    4330:	c0 c0       	rjmp	.+384    	; 0x44b2 <__fp_zero>
    4332:	67 2f       	mov	r22, r23
    4334:	78 2f       	mov	r23, r24
    4336:	88 27       	eor	r24, r24
    4338:	b8 5f       	subi	r27, 0xF8	; 248
    433a:	39 f0       	breq	.+14     	; 0x434a <__fixunssfsi+0x46>
    433c:	b9 3f       	cpi	r27, 0xF9	; 249
    433e:	cc f3       	brlt	.-14     	; 0x4332 <__fixunssfsi+0x2e>
    4340:	86 95       	lsr	r24
    4342:	77 95       	ror	r23
    4344:	67 95       	ror	r22
    4346:	b3 95       	inc	r27
    4348:	d9 f7       	brne	.-10     	; 0x4340 <__fixunssfsi+0x3c>
    434a:	3e f4       	brtc	.+14     	; 0x435a <__fixunssfsi+0x56>
    434c:	90 95       	com	r25
    434e:	80 95       	com	r24
    4350:	70 95       	com	r23
    4352:	61 95       	neg	r22
    4354:	7f 4f       	sbci	r23, 0xFF	; 255
    4356:	8f 4f       	sbci	r24, 0xFF	; 255
    4358:	9f 4f       	sbci	r25, 0xFF	; 255
    435a:	08 95       	ret

0000435c <__floatunsisf>:
    435c:	e8 94       	clt
    435e:	09 c0       	rjmp	.+18     	; 0x4372 <__floatsisf+0x12>

00004360 <__floatsisf>:
    4360:	97 fb       	bst	r25, 7
    4362:	3e f4       	brtc	.+14     	; 0x4372 <__floatsisf+0x12>
    4364:	90 95       	com	r25
    4366:	80 95       	com	r24
    4368:	70 95       	com	r23
    436a:	61 95       	neg	r22
    436c:	7f 4f       	sbci	r23, 0xFF	; 255
    436e:	8f 4f       	sbci	r24, 0xFF	; 255
    4370:	9f 4f       	sbci	r25, 0xFF	; 255
    4372:	99 23       	and	r25, r25
    4374:	a9 f0       	breq	.+42     	; 0x43a0 <__floatsisf+0x40>
    4376:	f9 2f       	mov	r31, r25
    4378:	96 e9       	ldi	r25, 0x96	; 150
    437a:	bb 27       	eor	r27, r27
    437c:	93 95       	inc	r25
    437e:	f6 95       	lsr	r31
    4380:	87 95       	ror	r24
    4382:	77 95       	ror	r23
    4384:	67 95       	ror	r22
    4386:	b7 95       	ror	r27
    4388:	f1 11       	cpse	r31, r1
    438a:	f8 cf       	rjmp	.-16     	; 0x437c <__floatsisf+0x1c>
    438c:	fa f4       	brpl	.+62     	; 0x43cc <__floatsisf+0x6c>
    438e:	bb 0f       	add	r27, r27
    4390:	11 f4       	brne	.+4      	; 0x4396 <__floatsisf+0x36>
    4392:	60 ff       	sbrs	r22, 0
    4394:	1b c0       	rjmp	.+54     	; 0x43cc <__floatsisf+0x6c>
    4396:	6f 5f       	subi	r22, 0xFF	; 255
    4398:	7f 4f       	sbci	r23, 0xFF	; 255
    439a:	8f 4f       	sbci	r24, 0xFF	; 255
    439c:	9f 4f       	sbci	r25, 0xFF	; 255
    439e:	16 c0       	rjmp	.+44     	; 0x43cc <__floatsisf+0x6c>
    43a0:	88 23       	and	r24, r24
    43a2:	11 f0       	breq	.+4      	; 0x43a8 <__floatsisf+0x48>
    43a4:	96 e9       	ldi	r25, 0x96	; 150
    43a6:	11 c0       	rjmp	.+34     	; 0x43ca <__floatsisf+0x6a>
    43a8:	77 23       	and	r23, r23
    43aa:	21 f0       	breq	.+8      	; 0x43b4 <__floatsisf+0x54>
    43ac:	9e e8       	ldi	r25, 0x8E	; 142
    43ae:	87 2f       	mov	r24, r23
    43b0:	76 2f       	mov	r23, r22
    43b2:	05 c0       	rjmp	.+10     	; 0x43be <__floatsisf+0x5e>
    43b4:	66 23       	and	r22, r22
    43b6:	71 f0       	breq	.+28     	; 0x43d4 <__floatsisf+0x74>
    43b8:	96 e8       	ldi	r25, 0x86	; 134
    43ba:	86 2f       	mov	r24, r22
    43bc:	70 e0       	ldi	r23, 0x00	; 0
    43be:	60 e0       	ldi	r22, 0x00	; 0
    43c0:	2a f0       	brmi	.+10     	; 0x43cc <__floatsisf+0x6c>
    43c2:	9a 95       	dec	r25
    43c4:	66 0f       	add	r22, r22
    43c6:	77 1f       	adc	r23, r23
    43c8:	88 1f       	adc	r24, r24
    43ca:	da f7       	brpl	.-10     	; 0x43c2 <__floatsisf+0x62>
    43cc:	88 0f       	add	r24, r24
    43ce:	96 95       	lsr	r25
    43d0:	87 95       	ror	r24
    43d2:	97 f9       	bld	r25, 7
    43d4:	08 95       	ret

000043d6 <__fp_cmp>:
    43d6:	99 0f       	add	r25, r25
    43d8:	00 08       	sbc	r0, r0
    43da:	55 0f       	add	r21, r21
    43dc:	aa 0b       	sbc	r26, r26
    43de:	e0 e8       	ldi	r30, 0x80	; 128
    43e0:	fe ef       	ldi	r31, 0xFE	; 254
    43e2:	16 16       	cp	r1, r22
    43e4:	17 06       	cpc	r1, r23
    43e6:	e8 07       	cpc	r30, r24
    43e8:	f9 07       	cpc	r31, r25
    43ea:	c0 f0       	brcs	.+48     	; 0x441c <__fp_cmp+0x46>
    43ec:	12 16       	cp	r1, r18
    43ee:	13 06       	cpc	r1, r19
    43f0:	e4 07       	cpc	r30, r20
    43f2:	f5 07       	cpc	r31, r21
    43f4:	98 f0       	brcs	.+38     	; 0x441c <__fp_cmp+0x46>
    43f6:	62 1b       	sub	r22, r18
    43f8:	73 0b       	sbc	r23, r19
    43fa:	84 0b       	sbc	r24, r20
    43fc:	95 0b       	sbc	r25, r21
    43fe:	39 f4       	brne	.+14     	; 0x440e <__fp_cmp+0x38>
    4400:	0a 26       	eor	r0, r26
    4402:	61 f0       	breq	.+24     	; 0x441c <__fp_cmp+0x46>
    4404:	23 2b       	or	r18, r19
    4406:	24 2b       	or	r18, r20
    4408:	25 2b       	or	r18, r21
    440a:	21 f4       	brne	.+8      	; 0x4414 <__fp_cmp+0x3e>
    440c:	08 95       	ret
    440e:	0a 26       	eor	r0, r26
    4410:	09 f4       	brne	.+2      	; 0x4414 <__fp_cmp+0x3e>
    4412:	a1 40       	sbci	r26, 0x01	; 1
    4414:	a6 95       	lsr	r26
    4416:	8f ef       	ldi	r24, 0xFF	; 255
    4418:	81 1d       	adc	r24, r1
    441a:	81 1d       	adc	r24, r1
    441c:	08 95       	ret

0000441e <__fp_inf>:
    441e:	97 f9       	bld	r25, 7
    4420:	9f 67       	ori	r25, 0x7F	; 127
    4422:	80 e8       	ldi	r24, 0x80	; 128
    4424:	70 e0       	ldi	r23, 0x00	; 0
    4426:	60 e0       	ldi	r22, 0x00	; 0
    4428:	08 95       	ret

0000442a <__fp_nan>:
    442a:	9f ef       	ldi	r25, 0xFF	; 255
    442c:	80 ec       	ldi	r24, 0xC0	; 192
    442e:	08 95       	ret

00004430 <__fp_pscA>:
    4430:	00 24       	eor	r0, r0
    4432:	0a 94       	dec	r0
    4434:	16 16       	cp	r1, r22
    4436:	17 06       	cpc	r1, r23
    4438:	18 06       	cpc	r1, r24
    443a:	09 06       	cpc	r0, r25
    443c:	08 95       	ret

0000443e <__fp_pscB>:
    443e:	00 24       	eor	r0, r0
    4440:	0a 94       	dec	r0
    4442:	12 16       	cp	r1, r18
    4444:	13 06       	cpc	r1, r19
    4446:	14 06       	cpc	r1, r20
    4448:	05 06       	cpc	r0, r21
    444a:	08 95       	ret

0000444c <__fp_round>:
    444c:	09 2e       	mov	r0, r25
    444e:	03 94       	inc	r0
    4450:	00 0c       	add	r0, r0
    4452:	11 f4       	brne	.+4      	; 0x4458 <__fp_round+0xc>
    4454:	88 23       	and	r24, r24
    4456:	52 f0       	brmi	.+20     	; 0x446c <__fp_round+0x20>
    4458:	bb 0f       	add	r27, r27
    445a:	40 f4       	brcc	.+16     	; 0x446c <__fp_round+0x20>
    445c:	bf 2b       	or	r27, r31
    445e:	11 f4       	brne	.+4      	; 0x4464 <__fp_round+0x18>
    4460:	60 ff       	sbrs	r22, 0
    4462:	04 c0       	rjmp	.+8      	; 0x446c <__fp_round+0x20>
    4464:	6f 5f       	subi	r22, 0xFF	; 255
    4466:	7f 4f       	sbci	r23, 0xFF	; 255
    4468:	8f 4f       	sbci	r24, 0xFF	; 255
    446a:	9f 4f       	sbci	r25, 0xFF	; 255
    446c:	08 95       	ret

0000446e <__fp_split3>:
    446e:	57 fd       	sbrc	r21, 7
    4470:	90 58       	subi	r25, 0x80	; 128
    4472:	44 0f       	add	r20, r20
    4474:	55 1f       	adc	r21, r21
    4476:	59 f0       	breq	.+22     	; 0x448e <__fp_splitA+0x10>
    4478:	5f 3f       	cpi	r21, 0xFF	; 255
    447a:	71 f0       	breq	.+28     	; 0x4498 <__fp_splitA+0x1a>
    447c:	47 95       	ror	r20

0000447e <__fp_splitA>:
    447e:	88 0f       	add	r24, r24
    4480:	97 fb       	bst	r25, 7
    4482:	99 1f       	adc	r25, r25
    4484:	61 f0       	breq	.+24     	; 0x449e <__fp_splitA+0x20>
    4486:	9f 3f       	cpi	r25, 0xFF	; 255
    4488:	79 f0       	breq	.+30     	; 0x44a8 <__fp_splitA+0x2a>
    448a:	87 95       	ror	r24
    448c:	08 95       	ret
    448e:	12 16       	cp	r1, r18
    4490:	13 06       	cpc	r1, r19
    4492:	14 06       	cpc	r1, r20
    4494:	55 1f       	adc	r21, r21
    4496:	f2 cf       	rjmp	.-28     	; 0x447c <__fp_split3+0xe>
    4498:	46 95       	lsr	r20
    449a:	f1 df       	rcall	.-30     	; 0x447e <__fp_splitA>
    449c:	08 c0       	rjmp	.+16     	; 0x44ae <__fp_splitA+0x30>
    449e:	16 16       	cp	r1, r22
    44a0:	17 06       	cpc	r1, r23
    44a2:	18 06       	cpc	r1, r24
    44a4:	99 1f       	adc	r25, r25
    44a6:	f1 cf       	rjmp	.-30     	; 0x448a <__fp_splitA+0xc>
    44a8:	86 95       	lsr	r24
    44aa:	71 05       	cpc	r23, r1
    44ac:	61 05       	cpc	r22, r1
    44ae:	08 94       	sec
    44b0:	08 95       	ret

000044b2 <__fp_zero>:
    44b2:	e8 94       	clt

000044b4 <__fp_szero>:
    44b4:	bb 27       	eor	r27, r27
    44b6:	66 27       	eor	r22, r22
    44b8:	77 27       	eor	r23, r23
    44ba:	cb 01       	movw	r24, r22
    44bc:	97 f9       	bld	r25, 7
    44be:	08 95       	ret

000044c0 <__gesf2>:
    44c0:	8a df       	rcall	.-236    	; 0x43d6 <__fp_cmp>
    44c2:	08 f4       	brcc	.+2      	; 0x44c6 <__gesf2+0x6>
    44c4:	8f ef       	ldi	r24, 0xFF	; 255
    44c6:	08 95       	ret

000044c8 <__mulsf3>:
    44c8:	0b d0       	rcall	.+22     	; 0x44e0 <__mulsf3x>
    44ca:	c0 cf       	rjmp	.-128    	; 0x444c <__fp_round>
    44cc:	b1 df       	rcall	.-158    	; 0x4430 <__fp_pscA>
    44ce:	28 f0       	brcs	.+10     	; 0x44da <__mulsf3+0x12>
    44d0:	b6 df       	rcall	.-148    	; 0x443e <__fp_pscB>
    44d2:	18 f0       	brcs	.+6      	; 0x44da <__mulsf3+0x12>
    44d4:	95 23       	and	r25, r21
    44d6:	09 f0       	breq	.+2      	; 0x44da <__mulsf3+0x12>
    44d8:	a2 cf       	rjmp	.-188    	; 0x441e <__fp_inf>
    44da:	a7 cf       	rjmp	.-178    	; 0x442a <__fp_nan>
    44dc:	11 24       	eor	r1, r1
    44de:	ea cf       	rjmp	.-44     	; 0x44b4 <__fp_szero>

000044e0 <__mulsf3x>:
    44e0:	c6 df       	rcall	.-116    	; 0x446e <__fp_split3>
    44e2:	a0 f3       	brcs	.-24     	; 0x44cc <__mulsf3+0x4>

000044e4 <__mulsf3_pse>:
    44e4:	95 9f       	mul	r25, r21
    44e6:	d1 f3       	breq	.-12     	; 0x44dc <__mulsf3+0x14>
    44e8:	95 0f       	add	r25, r21
    44ea:	50 e0       	ldi	r21, 0x00	; 0
    44ec:	55 1f       	adc	r21, r21
    44ee:	62 9f       	mul	r22, r18
    44f0:	f0 01       	movw	r30, r0
    44f2:	72 9f       	mul	r23, r18
    44f4:	bb 27       	eor	r27, r27
    44f6:	f0 0d       	add	r31, r0
    44f8:	b1 1d       	adc	r27, r1
    44fa:	63 9f       	mul	r22, r19
    44fc:	aa 27       	eor	r26, r26
    44fe:	f0 0d       	add	r31, r0
    4500:	b1 1d       	adc	r27, r1
    4502:	aa 1f       	adc	r26, r26
    4504:	64 9f       	mul	r22, r20
    4506:	66 27       	eor	r22, r22
    4508:	b0 0d       	add	r27, r0
    450a:	a1 1d       	adc	r26, r1
    450c:	66 1f       	adc	r22, r22
    450e:	82 9f       	mul	r24, r18
    4510:	22 27       	eor	r18, r18
    4512:	b0 0d       	add	r27, r0
    4514:	a1 1d       	adc	r26, r1
    4516:	62 1f       	adc	r22, r18
    4518:	73 9f       	mul	r23, r19
    451a:	b0 0d       	add	r27, r0
    451c:	a1 1d       	adc	r26, r1
    451e:	62 1f       	adc	r22, r18
    4520:	83 9f       	mul	r24, r19
    4522:	a0 0d       	add	r26, r0
    4524:	61 1d       	adc	r22, r1
    4526:	22 1f       	adc	r18, r18
    4528:	74 9f       	mul	r23, r20
    452a:	33 27       	eor	r19, r19
    452c:	a0 0d       	add	r26, r0
    452e:	61 1d       	adc	r22, r1
    4530:	23 1f       	adc	r18, r19
    4532:	84 9f       	mul	r24, r20
    4534:	60 0d       	add	r22, r0
    4536:	21 1d       	adc	r18, r1
    4538:	82 2f       	mov	r24, r18
    453a:	76 2f       	mov	r23, r22
    453c:	6a 2f       	mov	r22, r26
    453e:	11 24       	eor	r1, r1
    4540:	9f 57       	subi	r25, 0x7F	; 127
    4542:	50 40       	sbci	r21, 0x00	; 0
    4544:	8a f0       	brmi	.+34     	; 0x4568 <__mulsf3_pse+0x84>
    4546:	e1 f0       	breq	.+56     	; 0x4580 <__mulsf3_pse+0x9c>
    4548:	88 23       	and	r24, r24
    454a:	4a f0       	brmi	.+18     	; 0x455e <__mulsf3_pse+0x7a>
    454c:	ee 0f       	add	r30, r30
    454e:	ff 1f       	adc	r31, r31
    4550:	bb 1f       	adc	r27, r27
    4552:	66 1f       	adc	r22, r22
    4554:	77 1f       	adc	r23, r23
    4556:	88 1f       	adc	r24, r24
    4558:	91 50       	subi	r25, 0x01	; 1
    455a:	50 40       	sbci	r21, 0x00	; 0
    455c:	a9 f7       	brne	.-22     	; 0x4548 <__mulsf3_pse+0x64>
    455e:	9e 3f       	cpi	r25, 0xFE	; 254
    4560:	51 05       	cpc	r21, r1
    4562:	70 f0       	brcs	.+28     	; 0x4580 <__mulsf3_pse+0x9c>
    4564:	5c cf       	rjmp	.-328    	; 0x441e <__fp_inf>
    4566:	a6 cf       	rjmp	.-180    	; 0x44b4 <__fp_szero>
    4568:	5f 3f       	cpi	r21, 0xFF	; 255
    456a:	ec f3       	brlt	.-6      	; 0x4566 <__mulsf3_pse+0x82>
    456c:	98 3e       	cpi	r25, 0xE8	; 232
    456e:	dc f3       	brlt	.-10     	; 0x4566 <__mulsf3_pse+0x82>
    4570:	86 95       	lsr	r24
    4572:	77 95       	ror	r23
    4574:	67 95       	ror	r22
    4576:	b7 95       	ror	r27
    4578:	f7 95       	ror	r31
    457a:	e7 95       	ror	r30
    457c:	9f 5f       	subi	r25, 0xFF	; 255
    457e:	c1 f7       	brne	.-16     	; 0x4570 <__mulsf3_pse+0x8c>
    4580:	fe 2b       	or	r31, r30
    4582:	88 0f       	add	r24, r24
    4584:	91 1d       	adc	r25, r1
    4586:	96 95       	lsr	r25
    4588:	87 95       	ror	r24
    458a:	97 f9       	bld	r25, 7
    458c:	08 95       	ret

0000458e <__udivmodhi4>:
    458e:	aa 1b       	sub	r26, r26
    4590:	bb 1b       	sub	r27, r27
    4592:	51 e1       	ldi	r21, 0x11	; 17
    4594:	07 c0       	rjmp	.+14     	; 0x45a4 <__udivmodhi4_ep>

00004596 <__udivmodhi4_loop>:
    4596:	aa 1f       	adc	r26, r26
    4598:	bb 1f       	adc	r27, r27
    459a:	a6 17       	cp	r26, r22
    459c:	b7 07       	cpc	r27, r23
    459e:	10 f0       	brcs	.+4      	; 0x45a4 <__udivmodhi4_ep>
    45a0:	a6 1b       	sub	r26, r22
    45a2:	b7 0b       	sbc	r27, r23

000045a4 <__udivmodhi4_ep>:
    45a4:	88 1f       	adc	r24, r24
    45a6:	99 1f       	adc	r25, r25
    45a8:	5a 95       	dec	r21
    45aa:	a9 f7       	brne	.-22     	; 0x4596 <__udivmodhi4_loop>
    45ac:	80 95       	com	r24
    45ae:	90 95       	com	r25
    45b0:	bc 01       	movw	r22, r24
    45b2:	cd 01       	movw	r24, r26
    45b4:	08 95       	ret

000045b6 <__divmodhi4>:
    45b6:	97 fb       	bst	r25, 7
    45b8:	07 2e       	mov	r0, r23
    45ba:	16 f4       	brtc	.+4      	; 0x45c0 <__divmodhi4+0xa>
    45bc:	00 94       	com	r0
    45be:	06 d0       	rcall	.+12     	; 0x45cc <__divmodhi4_neg1>
    45c0:	77 fd       	sbrc	r23, 7
    45c2:	08 d0       	rcall	.+16     	; 0x45d4 <__divmodhi4_neg2>
    45c4:	e4 df       	rcall	.-56     	; 0x458e <__udivmodhi4>
    45c6:	07 fc       	sbrc	r0, 7
    45c8:	05 d0       	rcall	.+10     	; 0x45d4 <__divmodhi4_neg2>
    45ca:	3e f4       	brtc	.+14     	; 0x45da <__divmodhi4_exit>

000045cc <__divmodhi4_neg1>:
    45cc:	90 95       	com	r25
    45ce:	81 95       	neg	r24
    45d0:	9f 4f       	sbci	r25, 0xFF	; 255
    45d2:	08 95       	ret

000045d4 <__divmodhi4_neg2>:
    45d4:	70 95       	com	r23
    45d6:	61 95       	neg	r22
    45d8:	7f 4f       	sbci	r23, 0xFF	; 255

000045da <__divmodhi4_exit>:
    45da:	08 95       	ret

000045dc <__divmodsi4>:
    45dc:	05 2e       	mov	r0, r21
    45de:	97 fb       	bst	r25, 7
    45e0:	16 f4       	brtc	.+4      	; 0x45e6 <__divmodsi4+0xa>
    45e2:	00 94       	com	r0
    45e4:	0f d0       	rcall	.+30     	; 0x4604 <__negsi2>
    45e6:	57 fd       	sbrc	r21, 7
    45e8:	05 d0       	rcall	.+10     	; 0x45f4 <__divmodsi4_neg2>
    45ea:	26 d0       	rcall	.+76     	; 0x4638 <__udivmodsi4>
    45ec:	07 fc       	sbrc	r0, 7
    45ee:	02 d0       	rcall	.+4      	; 0x45f4 <__divmodsi4_neg2>
    45f0:	46 f4       	brtc	.+16     	; 0x4602 <__divmodsi4_exit>
    45f2:	08 c0       	rjmp	.+16     	; 0x4604 <__negsi2>

000045f4 <__divmodsi4_neg2>:
    45f4:	50 95       	com	r21
    45f6:	40 95       	com	r20
    45f8:	30 95       	com	r19
    45fa:	21 95       	neg	r18
    45fc:	3f 4f       	sbci	r19, 0xFF	; 255
    45fe:	4f 4f       	sbci	r20, 0xFF	; 255
    4600:	5f 4f       	sbci	r21, 0xFF	; 255

00004602 <__divmodsi4_exit>:
    4602:	08 95       	ret

00004604 <__negsi2>:
    4604:	90 95       	com	r25
    4606:	80 95       	com	r24
    4608:	70 95       	com	r23
    460a:	61 95       	neg	r22
    460c:	7f 4f       	sbci	r23, 0xFF	; 255
    460e:	8f 4f       	sbci	r24, 0xFF	; 255
    4610:	9f 4f       	sbci	r25, 0xFF	; 255
    4612:	08 95       	ret

00004614 <__tablejump2__>:
    4614:	ee 0f       	add	r30, r30
    4616:	ff 1f       	adc	r31, r31
    4618:	88 1f       	adc	r24, r24
    461a:	8b bf       	out	0x3b, r24	; 59
    461c:	07 90       	elpm	r0, Z+
    461e:	f6 91       	elpm	r31, Z
    4620:	e0 2d       	mov	r30, r0
    4622:	19 94       	eijmp

00004624 <__muluhisi3>:
    4624:	2b d0       	rcall	.+86     	; 0x467c <__umulhisi3>
    4626:	a5 9f       	mul	r26, r21
    4628:	90 0d       	add	r25, r0
    462a:	b4 9f       	mul	r27, r20
    462c:	90 0d       	add	r25, r0
    462e:	a4 9f       	mul	r26, r20
    4630:	80 0d       	add	r24, r0
    4632:	91 1d       	adc	r25, r1
    4634:	11 24       	eor	r1, r1
    4636:	08 95       	ret

00004638 <__udivmodsi4>:
    4638:	a1 e2       	ldi	r26, 0x21	; 33
    463a:	1a 2e       	mov	r1, r26
    463c:	aa 1b       	sub	r26, r26
    463e:	bb 1b       	sub	r27, r27
    4640:	fd 01       	movw	r30, r26
    4642:	0d c0       	rjmp	.+26     	; 0x465e <__udivmodsi4_ep>

00004644 <__udivmodsi4_loop>:
    4644:	aa 1f       	adc	r26, r26
    4646:	bb 1f       	adc	r27, r27
    4648:	ee 1f       	adc	r30, r30
    464a:	ff 1f       	adc	r31, r31
    464c:	a2 17       	cp	r26, r18
    464e:	b3 07       	cpc	r27, r19
    4650:	e4 07       	cpc	r30, r20
    4652:	f5 07       	cpc	r31, r21
    4654:	20 f0       	brcs	.+8      	; 0x465e <__udivmodsi4_ep>
    4656:	a2 1b       	sub	r26, r18
    4658:	b3 0b       	sbc	r27, r19
    465a:	e4 0b       	sbc	r30, r20
    465c:	f5 0b       	sbc	r31, r21

0000465e <__udivmodsi4_ep>:
    465e:	66 1f       	adc	r22, r22
    4660:	77 1f       	adc	r23, r23
    4662:	88 1f       	adc	r24, r24
    4664:	99 1f       	adc	r25, r25
    4666:	1a 94       	dec	r1
    4668:	69 f7       	brne	.-38     	; 0x4644 <__udivmodsi4_loop>
    466a:	60 95       	com	r22
    466c:	70 95       	com	r23
    466e:	80 95       	com	r24
    4670:	90 95       	com	r25
    4672:	9b 01       	movw	r18, r22
    4674:	ac 01       	movw	r20, r24
    4676:	bd 01       	movw	r22, r26
    4678:	cf 01       	movw	r24, r30
    467a:	08 95       	ret

0000467c <__umulhisi3>:
    467c:	a2 9f       	mul	r26, r18
    467e:	b0 01       	movw	r22, r0
    4680:	b3 9f       	mul	r27, r19
    4682:	c0 01       	movw	r24, r0
    4684:	a3 9f       	mul	r26, r19
    4686:	70 0d       	add	r23, r0
    4688:	81 1d       	adc	r24, r1
    468a:	11 24       	eor	r1, r1
    468c:	91 1d       	adc	r25, r1
    468e:	b2 9f       	mul	r27, r18
    4690:	70 0d       	add	r23, r0
    4692:	81 1d       	adc	r24, r1
    4694:	11 24       	eor	r1, r1
    4696:	91 1d       	adc	r25, r1
    4698:	08 95       	ret

0000469a <_exit>:
    469a:	f8 94       	cli

0000469c <__stop_program>:
    469c:	ff cf       	rjmp	.-2      	; 0x469c <__stop_program>
